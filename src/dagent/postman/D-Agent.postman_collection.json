{
	"info": {
		"_postman_id": "d94772d5-2642-4934-925e-f89e3a69609f",
		"name": "D-Agent",
		"description": "REST API Collection and Documents of D-Agent (Dynamic Agent)",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Common",
			"item": [
				{
					"name": "Template Dummy",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": ""
						}
					},
					"response": []
				}
			],
			"description": "***\n#### Contact\n* Contact : d.moon@samsung.com / hs.moon0112@samsung.com  \n\n***\n#### About\n* D-Agent's default port 80 in Nginx (Internal Default is 3000)\n* Dev Doucment : http://10.227.30.174:7990/projects/IBOF/repos/m9k/browse/dagent/readme.MD\n\n***\n\n#### Request Headers\n* UUID : https://tools.ietf.org/html/rfc4122  \n\n| Key | Value | Sample |\n| --- | ------|-------------|\n| X-Request-Id | {uuid4} | 44f1280b-982e-4d2e-ab14-fe9eb2022045 |\n| ts | {unix_timestamp} | 1566287153702 |\n| Content-Type | application/json | application/json |\n \n***\n\n#### Request Body (CUD)\n* All API has common request scheme except GET method.\n\n```json\n{\n  \"param\":{\n    // Ref. each command\n  }\n}\n```\n\n***\n\n#### Response Headers\n\n| Key | Value | Sample |\n| --- | ------|-------------|\n| X-Request-Id | {the same as request's} | 44f1280b-982e-4d2e-ab14-fe9eb2022045 |\n| Content-Type | application/json | application/json |\n| Content-Length | {ength} | 97 |\n\n***\n\n#### Response Body (CRUD)\n* All API has common response scheme.\n\nResponse Sample\n```json\n{\n   \"result\":{\n    \"status\":{\n      \"code\":0,\n      \"description\":\"Some Message\"\n    },\n    \"data\":{ // Optional\n      // Ref. each command\n    } \n  },\n  \"info\": { // Optional\n      \"state\": \"OFFLINE\",\n      \"situation\": \"DEFAULT\",\n      \"rebuliding_progress\": 0,\n      \"capacity\": 0,\n      \"used\": 0\n  }\n}\n```\n\n***\n\n#### Timeout\n* D-Agent default both read and write timeout is 30sec\n* D-Agent waits 29sec from POS  \n\n***\n\n#### Busy Status\n* If iBof is busy, D-Agent return busy response",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Internal",
			"item": [
				{
					"name": "DOCUMENTATION (HTML)",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"PING\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://{{host}}/api/dagent/v1/doc/api.html",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"dagent",
								"v1",
								"doc",
								"api.html"
							]
						}
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "X-Request-Id",
										"value": "{{$guid}}"
									},
									{
										"key": "ts",
										"value": "{{$timestamp}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{basic_auth}}"
									}
								],
								"url": {
									"raw": "http://{{host}}/mtool/api/dagent/v1/version",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"path": [
										"mtool",
										"api",
										"dagent",
										"v1",
										"version"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "X-Request-Id",
									"value": "562b9d26-1fbf-4aaa-9cb8-c9bef13ffbee"
								},
								{
									"key": "Date",
									"value": "Fri, 05 Jun 2020 06:34:16 GMT"
								},
								{
									"key": "Content-Length",
									"value": "267"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"rid\": \"\",\n    \"lastSuccessTime\": 0,\n    \"result\": {\n        \"status\": {\n            \"module\": \"\",\n            \"code\": 0,\n            \"description\": \"Success\"\n        },\n        \"data\": {\n            \"githash\": \"b98039e5f8ab19351994044960cf0e27262665b4\",\n            \"build_time\": \"1591338851\"\n        }\n    },\n    \"info\": {\n        \"state\": \"\",\n        \"situation\": \"\",\n        \"rebuliding_progress\": 0,\n        \"capacity\": 0,\n        \"used\": 0\n    }\n}"
						}
					]
				},
				{
					"name": "DOCUMENTATION (MARKDOWN)",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"PING\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://{{host}}/api/dagent/v1/doc/api.md",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"dagent",
								"v1",
								"doc",
								"api.md"
							]
						}
					},
					"response": []
				},
				{
					"name": "EVENT CODE",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"STATUS CODE\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "X-Request-Id",
								"value": "{{$guid}}"
							},
							{
								"key": "ts",
								"value": "{{$timestamp}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{basic_auth}}"
							}
						],
						"url": {
							"raw": "http://{{host}}/api/dagent/v1/doc/events.yaml",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"dagent",
								"v1",
								"doc",
								"events.yaml"
							]
						},
						"description": "It will return all POS syste status code and description"
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "X-Request-Id",
										"value": "{{$guid}}"
									},
									{
										"key": "ts",
										"value": "{{$timestamp}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{basic_auth}}"
									}
								],
								"url": {
									"raw": "http://{{host}}/mtool/api/dagent/v1/statuscode",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"path": [
										"mtool",
										"api",
										"dagent",
										"v1",
										"statuscode"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "X-Request-Id",
									"value": "1dd8be0f-cf72-4c11-ae9e-8216d47717fa"
								},
								{
									"key": "Date",
									"value": "Fri, 08 May 2020 09:15:51 GMT"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "---\nGoal: Events Unification\nVersion: \"v.92\"\nmodules:\n  - name: \"COMMON\"\n    count: 999\n    idStart: 0\n    idEnd:   999\n    info:\n      - code: 0\n        level: \"INFO\"\n        message: \"Success\"\n        problem: \"\"\n        solution: \"\"\n  - name: \"CLI\"\n    count: 100\n    idStart: 1000\n    idEnd:   1099\n    info:\n      - code: 1000\n        level: INFO\n        message: ibofos is started\n        problem:\n        solution:\n      - code: 1001\n        level: INFO\n        message: ibofos is terminated\n        problem:\n        solution:\n      - code: 1002\n        level: INFO\n        message: cli server is initialized\n        problem:\n        solution:\n      - code: 1003\n        level: INFO\n        message: new client is connected\n        problem:\n        solution:\n      - code: 1004\n        level: INFO\n        message: client is disconnected\n        problem:\n        solution:\n      - code: 1005\n        level: INFO\n        message: request msg is received\n        problem:\n        solution:\n      - code: 1006\n        level: INFO\n        message: response msg is sent\n        problem:\n        solution:\n      - code: 1010\n        level: INFO\n        message: cli server preparing exit\n        problem:\n        solution:\n      - code: 1011\n        level: INFO\n        message: cli server thread joined\n        problem:\n        solution:\n      - code: 1012\n        level: INFO\n        message: enable reuse-addr\n        problem:\n        solution:\n      - code: 1013\n        level: WARN\n        message: enable reuse-addr failed\n        problem:\n        solution:\n      - code: 1014\n        level: ERROR\n        message: socket creation failed\n        problem:\n        solution:\n      - code: 1015\n        level: ERROR\n        message: socket binding failed\n        problem:\n        solution:\n      - code: 1016\n        level: ERROR\n        message: socket listen failed\n        problem:\n        solution:\n      - code: 1017\n        level: ERROR\n        message: epoll creation failed\n        problem:\n        solution:\n      - code: 1018\n        level: ERROR\n        message: socket accept failed\n        problem:\n        solution:\n      - code: 1019\n        level: ERROR\n        message: max client error\n        problem:\n        solution:\n      - code: 1020\n        level: ERROR\n        message: message sending failed\n        problem:\n        solution:\n      - code: 1021\n        level: ERROR\n        message: message receiving failed\n        problem:\n        solution:\n      - code: 1022\n        level: WARN\n        message: TIMED OUT\n        problem:\n        solution:\n      - code: 1023\n        level: ERROR\n        message: INVALID PARAM\n        problem:\n        solution:\n      - code: 1030\n        level: INFO\n        message: POS IS BUSY\n        problem:\n        solution:\n  - name: \"IBoFOS State Manager\"\n    count: 200\n    idStart: 1100\n    idEnd:   1299\n    info:\n      - code: 1101\n        level: DEBUG\n        message: state context added\n        problem:\n        solution:\n      - code: 1102\n        level: INFO\n        message: state changed\n        problem:\n        solution:\n      - code: 1103\n        level: INFO\n        message: state added\n        problem:\n        solution:\n      - code: 1104\n        level: INFO\n        message: state removed\n        problem:\n        solution:\n      - code: 1105\n        level: INFO\n        message: state debugged\n        problem:\n        solution:\n      - code: 1234\n        level: REPORT_TRACE\n        message: iBoFOS System Recovery Inprogress\n        problem:\n        solution:\n  - name: \"VolumeManager\"\n    count: 300\n    idStart: 2000\n    idEnd:   2299\n    info:\n      - code: 2000\n        level: INFO\n        message: Volume created\n        problem:\n        solution:\n      - code: 2001\n        level: INFO\n        message: Volume deleted\n        problem:\n        solution:\n      - code: 2002\n        level: INFO\n        message: Volume mounted\n        problem:\n        solution:\n      - code: 2003\n        level: INFO\n        message: Volume unmounted\n        problem:\n        solution:\n      - code: 2004\n        level: INFO\n        message: Volume added to the list\n        problem:\n        solution:\n      - code: 2005\n        level: INFO\n        message: Volume removed from the list\n        problem:\n        solution:\n      - code: 2010\n        level: WARN\n        message: The requested volume does not exist\n        problem: The volume with the requested volume name or volume ID does not exist\n        solution: Enter the correct volume name or volume ID after checking the volume list\n      - code: 2011\n        level: WARN\n        message: Too many volumes\n        problem: Volume can not be created because the maximum number of volumes that can be created is exceeded\n        solution: Retry after removing unnecessary volume among existing created volumes\n      - code: 2012\n        level: WARN\n        message: Exceed creatable volume size\n        problem: The requested volume size exceeds Array capacity\n        solution: Check the system capacity and try again\n      - code: 2020\n        level: WARN\n        message: Volume name is too short\n        problem: The volume name entered is to short\n        solution: Enter a volume name between 2 and 255 characters\n      - code: 2021\n        level: WARN\n        message: Volume name  is too long\n        problem: Volume name entered is too long\n        solution: Enter a volume name that does not exceed 255 characters\n      - code: 2022\n        level: WARN\n        message: Volume name is duplicated\n        problem: A volume with a duplicate name already exists\n        solution: Enter a different volume name\n      - code: 2023\n        level: WARN\n        message: Unacceptable volume name\n        problem: Volume name entered contains a string that is not allowed\n        solution: Enter the volume name that meets the volume name rules\n      - code: 2026\n        level: Error\n        message: Requested volume size  larger than remaining space in array\n        problem: The requested volume size is larger than the remaining space in array\n        solution: Please check the volume size and remaining Array space and try again\n      - code: 2030\n        level: WARN\n        message: Requested size too large\n        problem: The requested volume size is too large\n        solution: Retry after checking the possible volume size\n      - code: 2031\n        level: WARN\n        message: Requested size too small\n        problem: The requested volume size is too small\n        solution: Check the minimum allocatable volume size and retry\n      - code: 2032\n        level: WARN\n        message: Requested size not aligned\n        problem: The requested volume size does not align with block size\n        solution: Input volume size to be multiple of block size\n      - code: 2033\n        level: WARN\n        message: Requested size is invalid\n        problem: The requested volume size is invalid\n        solution: Check the allocatable volume size and retry\n      - code: 2040\n        level: WARN\n        message: Volume already mounted\n        problem: Attempt to mount a volume that is already mounted\n        solution: Nothing to do\n      - code: 2041\n        level: WARN\n        message: Volume already unmounted\n        problem: Attempt to unmount a volume that is already unmounted\n        solution: Nothing to do\n      - code: 2050\n        level: Info\n        message: Can not delete mounted volume\n        problem: Attempted to delete a mounted volume\n        solution: Attempt to delete volume after unmounting the volume\n      - code: 2060\n        level: Error\n        message: Fail to create volume meta\n        problem:\n        solution:\n      - code: 2061\n        level: Error\n        message: Fail to open volume meta\n        problem:\n        solution:\n      - code: 2062\n        level: Error\n        message: Fail to read volume meta\n        problem:\n        solution:\n      - code: 2063\n        level: Error\n        message: Fail to write volume meta\n        problem:\n        solution:\n      - code: 2064\n        level: Error\n        message: Volume meta content broken\n        problem:\n        solution:\n      - code: 2070\n        level: Error\n        message: Memory allocation failure\n        problem: A case that should never occur - heap allocation failure\n        solution: Try again\n      - code: 2071\n        level: Error\n        message: Invalid index error\n        problem: A case that should never occur - index(volume id) internally granted is invalid\n        solution: Internal logic error\n      - code: 2072\n        level: Error\n        message: Fail to alloc. new volume ID\n        problem: A case that should never occur - Unable to give volume ID, despite the volume count is not max\n        solution: Internal logic error\n      - code: 2073\n        level: Error\n        message: The same ID volume exists\n        problem: A case that should never occur - A volume with the same ID already exists\n        solution: Internal logic error\n      - code: 2074\n        level: Error\n        message: Volume unexpected pending IO count\n        problem: \n        solution: Internal logic error\n      - code: 2080\n        level: Warning\n        message: Out of qos range\n        problem: A value less than the minimum applicable qos value was entered\n        solution: Check the minimum qos value that can be entered and try again.\n      - code: 2090\n        level: Warning\n        message: Max Bandwidth value outside allowed range\n        problem: A value lesser or greater than the applicable qos value was entered\n        solution: Check the qos value that can be entered and try again\n      - code: 2091\n        level: Warning\n        message: System Fault\n        problem: Volume command cannot be performed in the STOP state\n        solution:\n      - code: 2092\n        level: Warning\n        message: Done with error\n        problem: Some errors may occur during the processing of the request, and the subsequent operation may not work well.\n        solution: Error for error handling although it cannot occur with user sequence\n      - code: 2100\n        level: Warning\n        message: subsystem not created\n        problem: Attempt to mount volume with no subsystem created\n        solution: Subsystems must be created before mounting volumes\n      - code: 2101\n        level: Warning\n        message: Volume already has set subsysten nqn\n        solution: Subsystems must be created before mounting volumes\n      - code: 2102\n        level: Warning\n        message: Fail to attach namespace to subsystem\n        solution: Check if max namespaces was specified during subsystem creation (ex. -m 256)\n      - code: 2103\n        level: Warning\n        message: Volume unmount failed\n        solution: \n      - code: 2104\n        level: Warning\n        message: Volume detach failed\n        solution:\n  - name: \"MBR Manager\"\n    count: 100\n    idStart: 2300\n    idEnd:   2399\n    info:\n      - code: 2300\n        level: INFO\n        message: Allocate memory success\n        problem:\n        solution:\n      - code: 2301\n        level: INFO\n        message: mbr data create and write\n        problem:\n        solution:\n      - code: 2302\n        level: INFO\n        message: mbr data add and write\n        problem:\n        solution:\n      - code: 2303\n        level: INFO\n        message: parity check success\n        problem:\n        solution:\n      - code: 2304\n        level: INFO\n        message: system uuid check success\n        problem:\n        solution:\n      - code: 2310\n        level: WARN\n        message: device not found\n        problem:\n        solution:\n      - code: 2311\n        level: WARN\n        message: parity check fail\n        problem:\n        solution:\n      - code: 2312\n        level: WARN\n        message: system uuid check fail\n        problem:\n        solution:\n      - code: 2313\n        level: WARN\n        message: mbr data not found\n        problem:\n        solution:\n      - code: 2314\n        level: WARN\n        message: mbr key not found\n        problem:\n        solution:\n      - code: 2320\n        level: ERROR\n        message: mbr wrong array index map\n        problem:\n        solution:\n      - code: 2321\n        level: ERROR\n        message: mbr device already in array\n        problem:\n        solution:\n      - code: 2330\n        level: ERROR\n        message: Allocate memory fail\n        problem:\n        solution:\n      - code: 2331\n        level: ERROR\n        message: mbr data size error\n        problem:\n        solution:\n      - code: 2332\n        level: ERROR\n        message: mbr format error\n        problem:\n        solution:\n      - code: 2333\n        level: ERROR\n        message: get system uuid fail\n        problem:\n        solution:\n  - name: \"DeviceManager\"\n    count: 100\n    idStart: 2400\n    idEnd:   2499\n    info:\n      - code: 2400\n        level: INFO\n        message: Initial scan\n        problem:\n        solution:\n      - code: 2401\n        level: INFO\n        message: Rescan\n        problem:\n        solution:\n      - code: 2402\n        level: INFO\n        message: List device\n        problem:\n        solution:\n      - code: 2403\n        level: INFO\n        message: List array device\n        problem:\n        solution:\n      - code: 2404\n        level: INFO/WARN\n        message: Find dev(uid)\n        problem:\n        solution:\n      - code: 2405\n        level: ERROR\n        message: scan error\n        problem:\n        solution:\n      - code: 2406\n        level: ERROR\n        message: device open error\n        problem:\n        solution:\n      - code: 2407\n        level: ERROR\n        message: device close error\n        problem:\n        solution:\n      - code: 2408\n        level: WARN\n        message: device  not found\n        problem: Device requested to be removed was not found\n        solution:\n      - code: 2409\n        level: WARN\n        message: Nonremovable Device\n        problem: Only detached device can be removed\n        solution:\n      - code: 2410\n        level: INFO\n        message: daemon start\n        problem:\n        solution:\n      - code: 2411\n        level: INFO\n        message: daemon stop\n        problem:\n        solution:\n      - code: 2412\n        level: INFO\n        message: device attachment detected\n        problem:\n        solution:\n      - code: 2413\n        level: INFO\n        message: device detachment detected\n        problem:\n        solution:\n      - code: 2414\n        level: INFO\n        message: attach device\n        problem:\n        solution:\n      - code: 2415\n        level: INFO\n        message: detach device\n        problem:\n        solution:\n      - code: 2416\n        level: WARN\n        message: attach device error\n        problem:\n        solution:\n      - code: 2417\n        level: WARN\n        message: detach device error\n        problem:\n        solution:\n      - code: 2418\n        level: WARN\n        message: unable to start monitoring\n        problem: all monitoring daemons are already running, or no monitors exist\n        solution:\n      - code: 2419\n        level: WARN\n        message: unable to stop monitoring\n        problem: all monitoring daemons are already stopped, or no monitors exist\n        solution:\n      - code: 2420\n        level: ERROR\n        message: daemon stopped unexpectedly\n        problem: daemon stopped unexpectedly\n        solution:\n      - code: 2421\n        level: DEBUG\n        message: prepare device\n        problem:\n        solution:\n      - code: 2422\n        level: DEBUG\n        message: release device\n        problem:\n        solution:\n  - name: \"Array\"\n    count: 300\n    idStart: 2500\n    idEnd:   2799\n    info:\n      - code: 2500\n        level: ERROR\n        message: Array is alreday mounted.\n        problem:\n        solution:\n      - code: 2501\n        level: ERROR\n        message: Failed to create array because the maximum number of possible arrays has been exceeded\n        problem:\n        solution: If you remove the existing array, you can create a new array\n      - code: 2502\n        level: ERROR\n        message: Array already exists\n        problem:\n        solution:\n      - code: 2503\n        level: ERROR\n        message: Array name is too short\n        problem: Failed to create array\n        solution: Enter the array name between 2 and 63 letters\n      - code: 2504\n        level: ERROR\n        message: Array name is too long\n        problem: Failed to create array\n        solution: Enter the array name between 2 and 63 letters\n      - code: 2505\n        level: ERROR\n        message: the number of ssds must be between 3 and 32\n        problem:\n        solution:\n      - code: 2506\n        level: ERROR\n        message: nvm device size error\n        problem:\n        solution:\n      - code: 2507\n        level: ERROR\n        message: Ssd size must be greater than {} bytes\n        problem:\n        solution:\n      - code: 2508\n        level: ERROR\n        message: Ssds must be the same sizes\n        problem:\n        solution:\n      - code: 2509\n        level: ERROR\n        message: MBR read error\n        problem:\n        solution:\n      - code: 2510\n        level: ERROR\n        message: MBR write error\n        problem:\n        solution:\n      - code: 2511\n        level: ERROR\n        message: Fault-tolerance info read error\n        problem:\n        solution:\n      - code: 2512\n        level: ERROR\n        message: Wrong Fault-tolerance method type\n        problem:\n        solution:\n      - code: 2513\n        level: ERROR\n        message: \"{} Partition creation error\"\n        problem:\n        solution:\n      - code: 2514\n        level: ERROR\n        message: \"{} Partiton load error\"\n        problem:\n        solution:\n      - code: 2515\n        level: ERROR\n        message: Wrong Array event id\n        problem:\n        solution:\n      - code: 2516\n        level: ERROR\n        message: invalid logical address error\n        problem:\n        solution:\n      - code: 2517\n        level: ERROR\n        message: RAID10 only supports even number of data devices\n        problem: \n        solution: Select even number of data devices with RAID10\n      - code: 2518\n        level: ERROR\n        message: Wrong type for array device\n        problem: The type (for buffer or for data-storage) specified by the array device and the actual device type are different.\n        solution: Check the type and retry\n      - code: 2520\n        level: INFO\n        message: handle device detachment\n        problem:\n        solution:\n      - code: 2521\n        level: WARN\n        message: no remaining spare device\n        problem:\n        solution:\n      - code: 2522\n        level: WARN\n        message: no array exist\n        problem:\n        solution:\n      - code: 2523\n        level: WARN\n        message: need mount first add or remove device\n        problem:\n        solution:\n      - code: 2524\n        level: WARN\n        message: Array count exceeded\n        problem:\n        solution:\n      - code: 2525\n        level: WARN\n        message: Array already exist\n        problem:\n        solution:\n      - code: 2526\n        level: WARN\n        message: Array not found\n        problem:\n        solution:\n      - code: 2527\n        level: WARN\n        message: Array shutdown takes too long\n        problem:\n        solution:\n      - code: 2528\n        level: WARN\n        message: Array load failed\n        problem:\n        solution:\n      - code: 2530\n        level: INFO\n        message: the array device has been added\n        problem:\n        solution:\n      - code: 2531\n        level: INFO\n        message: the array device has been removed\n        problem:\n        solution:\n      - code: 2532\n        level: WARN\n        message: failed to add the array device\n        problem: the array device with a duplicate name already exists\n        solution:\n      - code: 2533\n        level: WARN\n        message: failed to remove the array device\n        problem: The device with the requested name is not a spare device\n        solution:\n      - code: 2534\n        level: INFO\n        message: array devices are cleared\n        problem:\n        solution:\n      - code: 2535\n        level: ERROR\n        message: failed to add or remove device\n        problem: array not created\n        solution:\n      - code: 2536\n        level: ERROR\n        message: failed to add or remove device\n        problem: unknown device with wrong name\n        solution:\n      - code: 2537\n        level: ERROR\n        message: failed to add device\n        problem: the requested device is already in the array\n        solution:\n      - code: 2550\n        level: INFO\n        message: array status updated\n        problem:\n        solution:\n      - code: 2551\n        level: INFO\n        message: \"Array State : Exist Normal\"\n      - code: 2552\n        level: INFO\n        message: \"Failed to delete array because array of the requested name could not be found\"\n        solution: \"please check array's name to delete and try again\"\n      - code: 2553\n        level: INFO\n        message: \"Array State : Exist Missing\"\n      - code: 2554\n        level: INFO\n        message: \"Array State : Exist Broken\"\n      - code: 2555\n        level: INFO\n        message: \"Array State : Normal\"\n      - code: 2556\n        level: INFO\n        message: \"Array State : Degraded\"\n      - code: 2557\n        level: INFO\n        message: \"Array State : Rebuilding\"\n      - code: 2558\n        level: INFO\n        message: \"Array State : Stop\"\n      - code: 2560\n        level: INFO\n        message: \"Array name too short\"\n      - code: 2561\n        level: INFO\n        message: \"Array name too long\"\n        solution: \"Enter a Array name that does not exceed 63 characters\"\n      - code: 2562\n        level: INFO\n        message: \"Array name not allowed\"\n      - code: 2580\n        level: INFO\n        message: \"Mounted Array Exist\"\n        solution: \"Unmount Array\"\n      - code: 2581\n        level: INFO\n        message: \"Array already unmounted\"\n        solution:\n      - code: 2582\n        level: INFO\n        message: \"Array mount priority error\"\n        solution:\n      - code: 2583\n        level: INFO\n        message: \"Array unmount priority error\"\n        solution: \n      - code: 2584\n        level: INFO\n        message: \"Array unmounting\"\n        solution: \n      - code: 2585\n        level: INFO\n        message: \"Array mounting\"\n        solution:\n      - code: 2586\n        level: INFO\n        message: \"Array already mounted\"\n        solution:\n      - code: 2790\n        level: INFO\n        message: \"Failed to terminate POS, Mounted array exist\"\n        solution: \"Unmount the array\"\n  - name: \"Rebuild\"\n    count: 100\n    idStart: 2800\n    idEnd:   2899\n    info:\n      - code: 2800\n        level: INFO\n        message: RebuildingDebuglog\n      - code: 2802\n        level: INFO\n        message: Rebuilding stopped\n      - code: 2803\n        level: INFO\n        message: Rebuilding failed\n      - code: 2804\n        level: REPORT_TRACE \n        message: rebuild progress report\n      - code: 2805\n        level: INFO\n        message: rebuild progress\n        problem:\n        solution:\n      - code: 2806\n        level: INFO\n        message: specific stripe is locked\n        problem:\n        solution:\n      - code: 2807\n        level: INFO\n        message: specific stripe is unlocked\n        problem:\n        solution:\n      - code: 2810\n        level: INFO\n        message: rebuild complete successfully\n        problem:\n        solution:\n      - code: 2811\n        level: ERROR\n        message: \"rebuild result: rebuild failure\"\n        problem:\n        solution:\n      - code: 2812\n        level: WARN\n        message: \"rebuild result: rebuild stopped\"\n        problem:\n        solution:\n      - code: 2813\n        level: WARN\n        message: no rebuild target\n        problem: the device detached is not belong to any partition\n        solution:\n      - code: 2814\n        level: INFO\n        message: no need to rebuild\n        problem: state is not degraded\n        solution:\n      - code: 2815\n        level: ERROR\n        message: Failed to start rebuild, system is stop state\n        problem:\n        solution:\n  - name: \"ConfigManager\"\n    count: 100\n    idStart: 2900\n    idEnd:   2999\n    info:\n      - code: 2900\n        level: INFO\n        message: config file read done\n        problem:\n        solution:\n      - code: 2901\n        level: INFO\n        message: get value done\n        problem:\n        solution:\n      - code: 2902\n        level: INFO\n        message: valid value success\n        problem:\n        solution:\n      - code: 2903\n        level: INFO\n        message: valid value fail\n        problem:\n        solution:\n      - code: 2910\n        level: Warning\n        message: request config type error\n        problem:\n        solution:\n      - code: 2911\n        level: Warning\n        message: request key error\n        problem:\n        solution:\n      - code: 2920\n        level: Error\n        message: config file open fail\n        problem:\n        solution:\n      - code: 2921\n        level: Error\n        message: config file size error\n        problem:\n        solution:\n      - code: 2922\n        level: Error\n        message: config file read error\n        problem:\n        solution:\n      - code: 2923\n        level: Error\n        message: config file format error\n        problem:\n        solution:\n      - code: 2924\n        level: Error\n        message: json doc is not object\n        problem: request get value & validate value after file open fail, read error & format error\n        solution:\n  - name: \"Mapper\"\n    count: 200\n    idStart: 3000\n    idEnd:   3199\n    info:\n  - name: \"Allocator\"\n    count: 200\n    idStart: 3200\n    idEnd:   3399\n    info:\n  - name: \"GC\"\n    count: 100\n    idStart: 3400\n    idEnd:   3499\n    info:\n      - code: 3400\n        level: INFO\n        message: GC triggered\n        problem:\n        solution:\n      - code: 3401\n        level: INFO\n        message: GC started\n        problem:\n        solution:\n      - code: 3402\n        level: INFO\n        message: GC done\n        problem:\n        solution:\n      - code: 3403\n        level: INFO\n        message: GC can not start\n        problem:\n        solution:\n      - code: 3410\n        level: INFO\n        message: Victim stripe constructor\n        problem:\n        solution:\n      - code: 3411\n        level: INFO\n        message: Load reverse map\n        problem:\n        solution:\n      - code: 3412\n        level: INFO\n        message: Load valid blocks\n        problem:\n        solution:\n  - name: \"MetaFS\"\n    count: 500\n    idStart: 4000\n    idEnd:   4499\n    info:\n      - code: 4000\n        level: DEBUG\n        message: Message type for debugging\n        problem:\n        solution:\n      - code: 4100\n        level: INFO\n        message: Message type for information\n        problem:\n        solution:\n      - code: 4200\n        level: WARN\n        message: Initialize MFS again\n        problem:\n        solution:\n      - code: 4201\n        level: WARN\n        message: Mount MFS again\n        problem:\n        solution:\n      - code: 4202\n        level: WARN\n        message: Unmount MFS again\n        problem:\n        solution:\n      - code: 4203\n        level: WARN\n        message: Failed to enqueue new msg\n        problem: Failed to enqueue new msg to MFS, may need to expand free msg Q\n        solution:\n      - code: 4204\n        level: WARN\n        message: Compaction failed\n        problem: Compaction couldn't be done due to not enough free space\n        solution:\n      - code: 4204\n        level: WARN\n        message: Compaction couldn't be done due to not enough free space\n      - code: 4300\n        level: ERROR\n        message: MFS is mounted\n        problem:\n        solution:\n      - code: 4301\n        level: ERROR\n        message: MFS is unmounted\n        problem:\n        solution:\n      - code: 4302\n        level: ERROR\n        message: Message type for error\n        problem:\n        solution:\n      - code: 4303\n        level: ERROR\n        message: Invalid parameters\n        problem:\n        solution:\n      - code: 4304\n        level: ERROR\n        message: not ready\n        problem:\n        solution:\n      - code: 4305\n        level: ERROR\n        message: already ready\n        problem:\n        solution:\n      - code: 4306\n        level: ERROR\n        message: failed to initialize\n        problem:\n        solution:\n      - code: 4307\n        level: ERROR\n        message: failed to bring up\n        problem:\n        solution:\n      - code: 4308\n        level: ERROR\n        message: no media for MFS\n        problem:\n        solution:\n      - code: 4309\n        level: ERROR\n        message: Request size is too big\n        problem:\n        solution:\n      - code: 4310\n        level: ERROR\n        message: failed to open\n        problem:\n        solution:\n      - code: 4311\n        level: ERROR\n        message: invalid information\n        problem:\n        solution:\n      - code: 4312\n        level: ERROR\n        message: failed to create file\n        problem:\n        solution:\n      - code: 4313\n        level: ERROR\n        message: failed to find the file\n        problem:\n        solution:\n      - code: 4314\n        level: ERROR\n        message: the file is not opened\n        problem:\n        solution:\n      - code: 4315\n        level: ERROR\n        message: failed to find the file\n        problem:\n        solution:\n      - code: 4316\n        level: ERROR\n        message: tried to open the file again\n        problem:\n        solution:\n      - code: 4317\n        level: ERROR\n        message: failed to close the file\n        problem:\n        solution:\n      - code: 4318\n        level: ERROR\n        message: failed to format the file\n        problem:\n        solution:\n      - code: 4319\n        level: ERROR\n        message: failed to delete the file\n        problem:\n        solution:\n      - code: 4320\n        level: ERROR\n        message: the file is already locked\n        problem:\n        solution:\n      - code: 4321\n        level: ERROR\n        message: failed to read the file\n        problem:\n        solution:\n      - code: 4322\n        level: ERROR\n        message: failed to write to the file\n        problem:\n        solution:\n      - code: 4323\n        level: ERROR\n        message: wrote size is not matched with request size\n        problem: for ram disk\n        solution:\n      - code: 4324\n        level: ERROR\n        message: failed to seek the file\n        problem: for ram disk\n        solution:\n      - code: 4325\n        level: ERROR\n        message: read size is not matched with request size\n        problem: for ram disk\n        solution:\n      - code: 4326\n        level: ERROR\n        message: wrote size is not matched with request size\n        problem: for ram disk\n        solution:\n      - code: 4327\n        level: ERROR\n        message: mount failed\n        problem: for ram disk\n        solution:\n      - code: 4328\n        level: ERROR\n        message: unmount failed\n        problem: for ram disk\n        solution:\n      - code: 4329\n        level: ERROR\n        message: no media\n        problem: for ram disk\n        solution:\n      - code: 4330\n        level: ERROR\n        message: failed to create meta storage\n        problem:\n        solution:\n      - code: 4331\n        level: ERROR\n        message: failed to close meta storage\n        problem:\n        solution:\n      - code: 4332\n        level: ERROR\n        message: meta storage is not ready\n        problem:\n        solution:\n      - code: 4333\n        level: ERROR\n        message: failed to create meta volume\n        problem:\n        solution:\n      - code: 4334\n        level: ERROR\n        message: failed to open meta volume\n        problem:\n        solution:\n      - code: 4335\n        level: ERROR\n        message: failed to close meta volume\n        problem:\n        solution:\n      - code: 4336\n        level: ERROR\n        message: not enough space to create\n        problem:\n        solution:\n      - code: 4337\n        level: ERROR\n        message: almost full\n        problem:\n        solution:\n      - code: 4338\n        level: ERROR\n        message: already closed\n        problem:\n        solution:\n      - code: 4339\n        level: ERROR\n        message: the catalog is invalid\n        problem:\n        solution:\n      - code: 4340\n        level: ERROR\n        message: enqueue failed\n        problem:\n        solution:\n      - code: 4341\n        level: ERROR\n        message: failed with various reason\n        problem:\n        solution:\n      - code: 4342\n        level: ERROR\n        message: failed to save inode\n        problem:\n        solution:\n      - code: 4343\n        level: ERROR\n        message: failed to pop from a queue\n        problem:\n        solution:\n      - code: 4344\n        level: ERROR\n        message: failed to push to a queue\n        problem:\n        solution:\n      - code: 4400\n        level: CRITICAL\n        message: Catalog is broken\n        problem:\n        solution:\n  - name: \"Sys-event\"\n    count: 80\n    idStart: 4500\n    idEnd:   4579\n    info:\n      - code: 4500\n        level: DEBUG\n        message: volume_event\n        problem:\n        solution:\n      - code: 4510\n        level: DEBUG\n        message: device_ad_event\n        problem:\n        solution:\n      - code: 4520\n        level: DEBUG\n        message: state_changed_event\n        problem:\n        solution:\n  - name: \"Logger\"\n    count: 20\n    idStart: 4580\n    idEnd:   4599\n    info:\n      - code: 4580\n        level: WARN\n        message: filter syntax error\n        problem:\n        solution:\n      - code: 4581\n        level: WARN\n        message: no filter file in the path\n        problem:\n        solution:\n      - code: 4582\n        level: WARN\n        message: requested log-level to set is invalid\n        problem:\n        solution:\n  - name: \"QoSManager\"\n    count: 20\n    idStart: 4600\n    idEnd:   4699\n    info:\n      - code: 4600\n        level: INFO\n        message: set event policy\n  - name: \"IOPath-nvmf\"\n    count: 100\n    idStart: 5000\n    idEnd:   5099\n    info:\n  - name: \"IOPath-frontend\"\n    count: 100\n    idStart: 5100\n    idEnd:   5199\n    info:\n  - name: \"IOPath-backend\"\n    count: 100\n    idStart: 5200\n    idEnd:   5299\n    info:\n  - name: \"system\"\n    count: 1000\n    idStart: 9000\n    idEnd:   9999\n    info:\n      - code: 9000\n        level: INFO\n        message: SPACE INFO\n        problem:\n        solution:\n      - code: 9001\n        level: ERROR\n        message: failed to unmount ibofos\n        problem: ibofos not mounted\n        solution:\n      - code: 9002\n        level: ERROR\n        message: failed to unmount ibofos\n        problem: higher priority job such as rebuilding is progressing.\n        solution: try again after a while\n      - code: 9003\n        level: ERROR\n        message: The request cannot be executed since ibofos is mounted\n        problem: ibofos already has been mounted\n        solution: try again after unmount ibofos\n      - code: 9004\n        level: INFO\n        message: load system versionA\n        problem: load system versionA\n      - code: 9005\n        level: INFO\n        message: system unmounting\n        problem: pos system unmounting\n  - name: \"D-Agent\"\n    count: 10000\n    idStart: 10000\n    idEnd:   19999\n    info:\n      - code: 10004\n        level: ERROR\n        message: Undefined Error\n      - code: 10005\n        level: ERROR\n        message: Json Type Error\n        solution: Check Request Body Type\n      - code: 10050\n        level: ERROR\n        message: Receiving error from POS\n      - code: 10110\n        level: ERROR\n        message: Unauthorized User\n        solution: Check Authorization Header\n      - code: 10120\n        level: ERROR\n        message: Body Json Error\n        solution: Check Body Payload format\n      - code: 10130\n        level: ERROR\n        message: X-request-Id Header Error\n        solution: Check X-request-Id (uuid) Value\n      - code: 10202\n        level: INFO\n        message: Request Accepted and passed to POS\n      - code: 11000\n        level: ERROR\n        message: Sending error\n        problem: connection problem between POS and Management Stack\n        solution: restart POS\n      - code: 11001\n        level: ERROR\n        message: Sending error\n        problem: poseidonos binary not found in /usr/local/bin/\n        solution: Please build the poseidonos and run 'make install' from poseidonos root directory\n      - code: 11010\n        level: ERROR\n        message: Json Error\n        problem: Malformed Json\n        solution: Use valid Json format\n      - code: 11020\n        level: ERROR\n        message: iBof Connection Error\n        problem: connection problem between POS and Management Stack\n        solution: restart POS\n      - code: 11021\n        level: ERROR\n        message: \n        problem: connection problem between POS and Management Stack, No POS instance to kill\n        solution: start POS\n      - code: 11030\n        level: ERROR\n        message: Another request already in progress\n        problem: another request is in progress. Wait for it's completion\n      - code: 11040\n        level: ERROR\n        message: Associated POS call failed\n        problem: POS calls returned error or busy status\n        solution: Try again after some time\n      - code: 11050\n        level: ERROR\n        message: Volume count exceeds limit\n        problem: POS allows only 256 volumes to create. please check and try again\n        solution: Try with a smaller value for count\n      - code: 11060\n        level: ERROR\n        message: Volume suffix invalid\n        problem: Only positive numeric suffix allowed\n        solution: Please try positive numeric suffix\n      - code: 12010\n        level: ERROR\n        message: one of iBoF service is dead\n      - code: 12020\n        level: ERROR\n        message: could not find build info\n      - code: 12090\n        level: ERROR\n        message: POS array is not mounted\n        problem: Volumes can be created only after POS is mounted\n        solution: mount POS\n      - code: 13000\n        level: ERROR\n        message: Response timeout\n  - name: \"M-Agent\"\n    count: 10000\n    idStart: 20000\n    idEnd:   29999\n    info:\n      - code: 20313\n        level: WARN\n        message: Data not found\n        problem: requested data is not present\n        solution: check if the data is requested for an existing entity\n      - code: 21000\n        level: ERROR\n        message: Querying error\n        problem: connection problem between InfluxDB and Agent\n        solution: restart InfluxDB\n      - code: 21010\n        level: ERROR\n        message: Time parameter error\n        problem: Invalid time period specified\n        solution: use time from 1m,5m,15m,1h,6h,12h,24h,7d,30d\n  - name: \"NVME admin\"\n    count: 100\n    idStart: 30000\n    idEnd:   30099\n    info:\n      - code: 30000\n        level: ERROR\n        message: NVME ctlr error\n        problem: Can't get nvme ctrlr\n      - code: 30001\n        level: ERROR\n        message: Log page error\n        problem: Can't get log page\n      - code: 30002\n        level: ERROR\n        message: Completion error\n        problem: Can't process completions\n  - name: \"NVME Admin\"\n    count: 100\n    idStart: 30000\n    idEnd:   30099\n    info:\n      - code: 30000\n        level: ERROR\n        message: Can't get nvme ctrlr\n      - code: 30001\n        level: ERROR\n        message: Can't get log page\n      - code: 30002\n        level: ERROR\n        message: Can't process completions\n"
						}
					]
				},
				{
					"name": "FORCEKILLIBOFOS",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"FORCEKILLIBOFOS\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "X-Request-Id",
								"value": "{{$guid}}"
							},
							{
								"key": "ts",
								"value": "{{$timestamp}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{basic_auth}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://{{host}}/api/dagent/v1/ibofos",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"dagent",
								"v1",
								"ibofos"
							]
						},
						"description": "It just runs \"pkill -9 ibofos\"\n"
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "X-Request-Id",
										"value": "{{$guid}}"
									},
									{
										"key": "ts",
										"value": "{{$timestamp}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{basic_auth}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "http://{{host}}/mtool/api/dagent/v1/ibofos",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"path": [
										"mtool",
										"api",
										"dagent",
										"v1",
										"ibofos"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "X-Request-Id",
									"value": "e236b251-5bbf-457b-97e2-b1b63aacadd9"
								},
								{
									"key": "Date",
									"value": "Fri, 08 May 2020 10:13:46 GMT"
								},
								{
									"key": "Content-Length",
									"value": "179"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"rid\": \"\",\n    \"lastSuccessTime\": 0,\n    \"result\": {\n        \"status\": {\n            \"module\": \"COMMON\",\n            \"code\": 0,\n            \"level\": \"INFO\",\n            \"description\": \"Success\",\n            \"posDescription\": \"\"\n        }\n    }\n}"
						}
					]
				},
				{
					"name": "KILLDAGENT",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"KILLDAGENT\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "X-Request-Id",
								"value": "{{$guid}}"
							},
							{
								"key": "ts",
								"value": "{{$timestamp}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{basic_auth}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://{{host}}/api/dagent/v1/dagent",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"dagent",
								"v1",
								"dagent"
							]
						},
						"description": "It just run command \"run_ibof.sh\" and does not gurantee to run."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "X-Request-Id",
										"value": "{{$guid}}"
									},
									{
										"key": "ts",
										"value": "{{$timestamp}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{basic_auth}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "http://{{host}}/mtool/api/dagent/v1/dagent",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"path": [
										"mtool",
										"api",
										"dagent",
										"v1",
										"dagent"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "X-Request-Id",
									"value": "41872401-0604-4ced-b2a9-d722a7b465c7"
								},
								{
									"key": "Date",
									"value": "Fri, 08 May 2020 10:14:44 GMT"
								},
								{
									"key": "Content-Length",
									"value": "179"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"rid\": \"\",\n    \"lastSuccessTime\": 0,\n    \"result\": {\n        \"status\": {\n            \"module\": \"COMMON\",\n            \"code\": 0,\n            \"level\": \"INFO\",\n            \"description\": \"Success\",\n            \"posDescription\": \"\"\n        }\n    }\n}"
						}
					]
				}
			],
			"description": "Internal is only for POS developer and QA.  \nInternal APIs will not provide to 3rd party",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "D-Agent",
			"item": [
				{
					"name": "VERSION",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"PING\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "X-Request-Id",
								"value": "{{$guid}}"
							},
							{
								"key": "ts",
								"value": "{{$timestamp}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{basic_auth}}"
							}
						],
						"url": {
							"raw": "http://{{host}}/api/dagent/v1/version",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"dagent",
								"v1",
								"version"
							]
						}
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "X-Request-Id",
										"value": "{{$guid}}"
									},
									{
										"key": "ts",
										"value": "{{$timestamp}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{basic_auth}}"
									}
								],
								"url": {
									"raw": "http://{{host}}/mtool/api/dagent/v1/version",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"path": [
										"mtool",
										"api",
										"dagent",
										"v1",
										"version"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "X-Request-Id",
									"value": "562b9d26-1fbf-4aaa-9cb8-c9bef13ffbee"
								},
								{
									"key": "Date",
									"value": "Fri, 05 Jun 2020 06:34:16 GMT"
								},
								{
									"key": "Content-Length",
									"value": "267"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"rid\": \"\",\n    \"lastSuccessTime\": 0,\n    \"result\": {\n        \"status\": {\n            \"module\": \"COMMON\",\n            \"code\": 0,\n            \"level\": \"INFO\",\n            \"description\": \"Success\",\n            \"posDescription\": \"\"\n        },\n        \"data\": {\n            \"githash\": \"ebbdc29c4473f3dcae71e7ee405a1d5e8f469bec\",\n            \"buildTime\": \"1656014539\"\n        }\n    }\n}"
						},
						{
							"name": "Fail",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "X-Request-Id",
										"value": "{{$guid}}"
									},
									{
										"key": "ts",
										"value": "{{$timestamp}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{basic_auth}}"
									}
								],
								"url": {
									"raw": "http://{{host}}/mtool/api/dagent/v1/version",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"path": [
										"mtool",
										"api",
										"dagent",
										"v1",
										"version"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "X-Request-Id",
									"value": "c950f121-dd24-4f31-822e-69c70f1c432a"
								},
								{
									"key": "Date",
									"value": "Fri, 05 Jun 2020 06:32:42 GMT"
								},
								{
									"key": "Content-Length",
									"value": "223"
								}
							],
							"cookie": [],
							"body": "{\n    \"rid\": \"\",\n    \"lastSuccessTime\": 0,\n    \"result\": {\n        \"status\": {\n            \"module\": \"COMMON\",\n            \"code\": 12020,\n            \"level\": \"ERROR\",\n            \"description\": \"could not find build info\",\n            \"posDescription\": \"\"\n        },\n        \"data\": {\n            \"githash\": \"\",\n            \"buildTime\": \"\"\n        }\n    }\n}"
						}
					]
				}
			],
			"description": "The most biz-logic executes in D-Agent own module",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "System",
			"item": [
				{
					"name": "RUNIBOFOS",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"RUNIBOFOS\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-Request-Id",
								"value": "{{$guid}}"
							},
							{
								"key": "ts",
								"value": "{{$timestamp}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{basic_auth}}"
							}
						],
						"url": {
							"raw": "http://{{host}}/api/ibofos/v1/system",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"ibofos",
								"v1",
								"system"
							]
						}
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "X-Request-Id",
										"value": "{{$guid}}"
									},
									{
										"key": "ts",
										"value": "{{$timestamp}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{basic_auth}}"
									}
								],
								"url": {
									"raw": "http://{{host}}/api/ibofos/v1/system",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"ibofos",
										"v1",
										"system"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Wed, 19 Aug 2020 06:49:22 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "127"
								},
								{
									"key": "X-Request-Id",
									"value": "e995210c-87fa-4253-a320-302583c8ad6d"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"rid\": \"\",\n    \"lastSuccessTime\": 1663522874,\n    \"result\": {\n        \"status\": {\n            \"module\": \"\",\n            \"code\": 0,\n            \"eventName\": \"\",\n            \"cause\": \"\",\n            \"description\": \"\",\n            \"posDescription\": \"\",\n            \"errorInfo\": {\n                \"errorCode\": 0,\n                \"errorResponses\": [\n                    {\n                        \"cause\": \"NONE\",\n                        \"code\": 0,\n                        \"description\": \"NONE\",\n                        \"eventName\": \"SUCCESS\",\n                        \"id\": \"transport\"\n                    },\n                    {\n                        \"cause\": \"NONE\",\n                        \"code\": 0,\n                        \"description\": \"NONE\",\n                        \"eventName\": \"SUCCESS\",\n                        \"id\": \"subSystem1\"\n                    },\n                    {\n                        \"cause\": \"NONE\",\n                        \"code\": 0,\n                        \"description\": \"NONE\",\n                        \"eventName\": \"SUCCESS\",\n                        \"id\": \"subSystem2\"\n                    },\n                    {\n                        \"cause\": \"NONE\",\n                        \"code\": 0,\n                        \"description\": \"NONE\",\n                        \"eventName\": \"SUCCESS\",\n                        \"id\": \"addListener1\"\n                    },\n                    {\n                        \"cause\": \"NONE\",\n                        \"code\": 0,\n                        \"description\": \"NONE\",\n                        \"eventName\": \"SUCCESS\",\n                        \"id\": \"addListener2\"\n                    },\n                    {\n                        \"cause\": \"NONE\",\n                        \"code\": 0,\n                        \"description\": \"uram0: NONE\",\n                        \"eventName\": \"SUCCESS\",\n                        \"id\": \"uram1\"\n                    },\n                    {\n                        \"cause\": \"NONE\",\n                        \"code\": 0,\n                        \"description\": \"uram1: NONE\",\n                        \"eventName\": \"SUCCESS\",\n                        \"id\": \"uram2\"\n                    }\n                ]\n            }\n        }\n    }\n}"
						},
						{
							"name": "Fail",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "X-Request-Id",
										"value": "{{$guid}}"
									},
									{
										"key": "ts",
										"value": "{{$timestamp}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{basic_auth}}"
									}
								],
								"url": {
									"raw": "http://{{host}}/api/ibofos/v1/system",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"ibofos",
										"v1",
										"system"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Wed, 19 Aug 2020 06:49:22 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "127"
								},
								{
									"key": "X-Request-Id",
									"value": "e995210c-87fa-4253-a320-302583c8ad6d"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"rid\": \"\",\n    \"lastSuccessTime\": 1663522874,\n    \"result\": {\n        \"status\": {\n            \"module\": \"\",\n            \"code\": 0,\n            \"eventName\": \"\",\n            \"cause\": \"\",\n            \"description\": \"\",\n            \"posDescription\": \"\",\n            \"errorInfo\": {\n                \"errorCode\": 0,\n                \"errorResponses\": [\n                   \n                ]\n            }\n        }\n    }\n}"
						}
					]
				},
				{
					"name": "iBOFOSINFO",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"iBOFOSINFO\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "X-Request-Id",
								"value": "{{$guid}}"
							},
							{
								"key": "ts",
								"value": "{{$timestamp}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{basic_auth}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://{{host}}/api/ibofos/v1/system",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"ibofos",
								"v1",
								"system"
							]
						}
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "X-Request-Id",
										"value": "{{$guid}}"
									},
									{
										"key": "ts",
										"value": "{{$timestamp}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{basic_auth}}"
									}
								],
								"url": {
									"raw": "http://{{host}}/api/ibofos/v1/system",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"ibofos",
										"v1",
										"system"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Wed, 19 Aug 2020 06:50:49 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "355"
								},
								{
									"key": "X-Request-Id",
									"value": "8c10498a-e188-4a4d-b9bf-89cfef979af4"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"rid\": \"96b954b1-3779-11ed-8c02-3cecef280244\",\n    \"lastSuccessTime\": 0,\n    \"result\": {\n        \"status\": {\n            \"module\": \"\",\n            \"code\": 0,\n            \"eventName\": \"SUCCESS\",\n            \"cause\": \"NONE\",\n            \"description\": \"NONE\",\n            \"posDescription\": \"NONE\",\n            \"solution\": \"NONE\"\n        },\n        \"data\": {\n            \"baseboardManufacturer\": \"Supermicro\",\n            \"baseboardProductName\": \"X11DPU\",\n            \"baseboardSerialNumber\": \"OM202S018522\",\n            \"baseboardVersion\": \"1.10\",\n            \"biosReleaseDate\": \"02/21/2020\",\n            \"biosVendor\": \"American Megatrends Inc.\",\n            \"biosVersion\": \"3.3\",\n            \"processorFrequency\": \"2400 MHz2400 MHz\",\n            \"processorManufacturer\": \"Intel(R) CorporationIntel(R) Corporation\",\n            \"processorVersion\": \"Intel(R) Xeon(R) Silver 4214R CPU @ 2.40GHzIntel(R) Xeon(R) Silver 4214R CPU @ 2.40GHz\",\n            \"systemManufacturer\": \"Supermicro\",\n            \"systemProductName\": \"SYS-2029U-TN24R4T\",\n            \"systemSerialNumber\": \"A264025X0A04015\",\n            \"systemUuid\": \"00000000-0000-0000-0000-AC1F6BC86358\",\n            \"version\": \"v0.11.0-rc6\"\n        }\n    },\n    \"info\": {\n        \"version\": \"v0.11.0-rc6\"\n    }\n}"
						},
						{
							"name": "Fail",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "X-Request-Id",
										"value": "{{$guid}}"
									},
									{
										"key": "ts",
										"value": "{{$timestamp}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{basic_auth}}"
									}
								],
								"url": {
									"raw": "http://{{host}}/api/ibofos/v1/system",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"ibofos",
										"v1",
										"system"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Wed, 19 Aug 2020 06:50:49 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "355"
								},
								{
									"key": "X-Request-Id",
									"value": "8c10498a-e188-4a4d-b9bf-89cfef979af4"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"rid\": \"619782d1-bad3-4dc3-8202-ab4b43144610\",\n    \"lastSuccessTime\": 1656005726,\n    \"result\": {\n        \"status\": {\n            \"module\": \"COMMON\",\n            \"code\": 0,\n            \"level\": \"INFO\",\n            \"description\": \"Ibof connection error\",\n            \"posDescription\": \"\"\n        },\n        \"data\": {\n            \"version\": \"v0.11.0-rc5\"\n        }\n    },\n    \"info\": {\n        \"version\": \"v0.11.0-rc5\"\n    }\n}"
						}
					]
				},
				{
					"name": "GET SYSTEMPROPERTY",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"iBOFOSINFO\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "X-Request-Id",
								"value": "{{$guid}}"
							},
							{
								"key": "ts",
								"value": "{{$timestamp}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{basic_auth}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://{{host}}/api/ibofos/v1/system/property",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"ibofos",
								"v1",
								"system",
								"property"
							]
						}
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "X-Request-Id",
										"value": "{{$guid}}"
									},
									{
										"key": "ts",
										"value": "{{$timestamp}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{basic_auth}}"
									}
								],
								"url": {
									"raw": "http://{{host}}/api/ibofos/v1/system",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"ibofos",
										"v1",
										"system"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Wed, 19 Aug 2020 06:50:49 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "355"
								},
								{
									"key": "X-Request-Id",
									"value": "8c10498a-e188-4a4d-b9bf-89cfef979af4"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"rid\": \"cfe7705e-3779-11ed-8c02-3cecef280244\",\n    \"lastSuccessTime\": 0,\n    \"result\": {\n        \"status\": {\n            \"module\": \"\",\n            \"code\": 0,\n            \"eventName\": \"SUCCESS\",\n            \"cause\": \"NONE\",\n            \"description\": \"NONE\",\n            \"posDescription\": \"NONE\",\n            \"solution\": \"NONE\"\n        },\n        \"data\": {\n            \"rebuildPolicy\": \"low\"\n        }\n    },\n    \"info\": {\n        \"version\": \"v0.11.0-rc6\"\n    }\n}"
						}
					]
				},
				{
					"name": "SET SYSTEMPROPERTY",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"RUNIBOFOS\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-Request-Id",
								"value": "{{$guid}}"
							},
							{
								"key": "ts",
								"value": "{{$timestamp}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{basic_auth}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"param\": {\r\n        \"level\": \"medium\"\r\n    }\r\n}\r\n"
						},
						"url": {
							"raw": "http://{{host}}/api/ibofos/v1/system/property",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"ibofos",
								"v1",
								"system",
								"property"
							]
						},
						"description": "This API is used to set the system rebuild performance impact. User can set low, medium or high level for the performance impact"
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "X-Request-Id",
										"value": "{{$guid}}"
									},
									{
										"key": "ts",
										"value": "{{$timestamp}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{basic_auth}}"
									}
								],
								"url": {
									"raw": "http://{{host}}/api/ibofos/v1/system",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"ibofos",
										"v1",
										"system"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Wed, 19 Aug 2020 06:49:22 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "127"
								},
								{
									"key": "X-Request-Id",
									"value": "e995210c-87fa-4253-a320-302583c8ad6d"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"rid\": \"d8172a44-3779-11ed-8c02-3cecef280244\",\n    \"lastSuccessTime\": 0,\n    \"result\": {\n        \"status\": {\n            \"module\": \"\",\n            \"code\": 0,\n            \"eventName\": \"SUCCESS\",\n            \"cause\": \"NONE\",\n            \"description\": \"NONE\",\n            \"posDescription\": \"NONE\",\n            \"solution\": \"NONE\"\n        }\n    },\n    \"info\": {\n        \"version\": \"v0.11.0-rc6\"\n    }\n}"
						}
					]
				},
				{
					"name": "EXITIBOFOS",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"EXITIBOFOS\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "X-Request-Id",
								"value": "{{$guid}}"
							},
							{
								"key": "ts",
								"value": "{{$timestamp}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{basic_auth}}"
							}
						],
						"url": {
							"raw": "http://{{host}}/api/ibofos/v1/system",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"ibofos",
								"v1",
								"system"
							]
						}
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "X-Request-Id",
										"value": "{{$guid}}"
									},
									{
										"key": "ts",
										"value": "{{$timestamp}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{basic_auth}}"
									}
								],
								"url": {
									"raw": "http://{{host}}/api/ibofos/v1/system",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"ibofos",
										"v1",
										"system"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Wed, 19 Aug 2020 06:54:44 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "259"
								},
								{
									"key": "X-Request-Id",
									"value": "c9487931-cfdd-4f5b-a595-d09b6ce0fe89"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"rid\": \"b3aac4e2-3637-11ed-9382-3cecef280244\",\n    \"lastSuccessTime\": 0,\n    \"result\": {\n        \"status\": {\n            \"module\": \"\",\n            \"code\": 3,\n            \"eventName\": \"POS_STOP_FAILURE_BEING_TERMINATED\",\n            \"cause\": \"PoseidonOS is already in termination process.\",\n            \"description\": \"Failed to stop PoseidonOS.\",\n            \"posDescription\": \"Failed to stop PoseidonOS.\",\n            \"solution\": \"Please wait a moment.\"\n        }\n    },\n    \"info\": {\n        \"version\": \"v0.11.0-rc6\"\n    }\n}"
						}
					]
				}
			]
		},
		{
			"name": "Devices",
			"item": [
				{
					"name": "SCAN DEVICE",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"SCAN DEVICE\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "X-Request-Id",
								"value": "{{$guid}}"
							},
							{
								"key": "ts",
								"value": "{{$timestamp}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{basic_auth}}"
							}
						],
						"url": {
							"raw": "http://{{host}}/api/ibofos/v1/devices/all/scan",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"ibofos",
								"v1",
								"devices",
								"all",
								"scan"
							]
						}
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "X-Request-Id",
										"value": "{{$guid}}"
									},
									{
										"key": "ts",
										"value": "{{$timestamp}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{basic_auth}}"
									}
								],
								"url": {
									"raw": "http://{{host}}/api/ibofos/v1/devices/all/scan",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"ibofos",
										"v1",
										"devices",
										"all",
										"scan"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Wed, 19 Aug 2020 06:52:30 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "259"
								},
								{
									"key": "X-Request-Id",
									"value": "3b6f2a86-7369-40e0-9c63-65cdf417fad4"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"rid\": \"2f31d484-3778-11ed-a4ce-3cecef280244\",\n    \"lastSuccessTime\": 0,\n    \"result\": {\n        \"status\": {\n            \"module\": \"\",\n            \"code\": 0,\n            \"eventName\": \"SUCCESS\",\n            \"cause\": \"NONE\",\n            \"description\": \"NONE\",\n            \"posDescription\": \"NONE\",\n            \"solution\": \"NONE\"\n        }\n    },\n    \"info\": {\n        \"version\": \"v0.11.0-rc6\"\n    }\n}"
						}
					]
				},
				{
					"name": "SMARTLOG",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"SMART\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "X-Request-Id",
								"value": "{{$guid}}"
							},
							{
								"key": "ts",
								"value": "{{$timestamp}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{basic_auth}}"
							}
						],
						"url": {
							"raw": "http://{{host}}/api/ibofos/v1/devices/{{deviceName1}}/smart",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"ibofos",
								"v1",
								"devices",
								"{{deviceName1}}",
								"smart"
							]
						}
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "X-Request-Id",
										"value": "{{$guid}}"
									},
									{
										"key": "ts",
										"value": "{{$timestamp}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{basic_auth}}"
									}
								],
								"url": {
									"raw": "http://{{host}}/api/ibofos/v1/devices/{{deviceName1}}/smart",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"ibofos",
										"v1",
										"devices",
										"{{deviceName1}}",
										"smart"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Wed, 19 Aug 2020 06:59:19 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "933"
								},
								{
									"key": "X-Request-Id",
									"value": "5b77c361-1c61-4d37-b871-48a44d573d1d"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"rid\": \"1edf45cc-3639-11ed-9382-3cecef280244\",\n    \"lastSuccessTime\": 0,\n    \"result\": {\n        \"status\": {\n            \"module\": \"\",\n            \"code\": 0,\n            \"eventName\": \"SUCCESS\",\n            \"cause\": \"NONE\",\n            \"description\": \"NONE\",\n            \"posDescription\": \"NONE\",\n            \"solution\": \"NONE\"\n        },\n        \"data\": {\n            \"availableSpare\": \"100%\",\n            \"availableSpareSpace\": \"OK\",\n            \"availableSpareThreshold\": \"10%\",\n            \"controllerBusyTime\": \"894\",\n            \"criticalTemperatureTime\": \"0m\",\n            \"currentTemperature\": \"45C\",\n            \"dataUnitsRead\": \"37403752\",\n            \"dataUnitsWritten\": \"48659276\",\n            \"deviceReliability\": \"OK\",\n            \"hostReadCommands\": \"648111034\",\n            \"hostWriteCommands\": \"277261928\",\n            \"lifePercentageUsed\": \"0%\",\n            \"lifetimeErrorLogEntries\": \"139\",\n            \"powerCycles\": \"143\",\n            \"powerOnHours\": \"15481\",\n            \"readOnly\": \"No\",\n            \"temperature\": \"OK\",\n            \"temperatureSensor\": [\n                \"45C\",\n                \"52C\",\n                \"60C\"\n            ],\n            \"unrecoverableMediaErrors\": \"0\",\n            \"unsafeShutdowns\": \"123\",\n            \"volatileMemoryBackup\": \"OK\",\n            \"warningTemperatureTime\": \"0m\"\n        }\n    },\n    \"info\": {\n        \"version\": \"v0.11.0-rc6\"\n    }\n}"
						}
					]
				},
				{
					"name": "LIST DEVICE",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"LIST DEVICE\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "X-Request-Id",
								"value": "{{$guid}}"
							},
							{
								"key": "ts",
								"value": "{{$timestamp}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{basic_auth}}"
							}
						],
						"url": {
							"raw": "http://{{host}}/api/ibofos/v1/devices",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"ibofos",
								"v1",
								"devices"
							]
						}
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "X-Request-Id",
										"value": "{{$guid}}"
									},
									{
										"key": "ts",
										"value": "{{$timestamp}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{basic_auth}}"
									}
								],
								"url": {
									"raw": "http://{{host}}/mtool/api/ibofos/v1/device",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"path": [
										"mtool",
										"api",
										"ibofos",
										"v1",
										"device"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "X-Request-Id",
									"value": "7ec6e965-dc86-4a95-8a3a-353dc36478a1"
								},
								{
									"key": "Date",
									"value": "Fri, 08 May 2020 06:50:42 GMT"
								},
								{
									"key": "Content-Length",
									"value": "942"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"rid\": \"242cde52-3639-11ed-9382-3cecef280244\",\n    \"lastSuccessTime\": 0,\n    \"result\": {\n        \"status\": {\n            \"module\": \"\",\n            \"code\": 0,\n            \"eventName\": \"SUCCESS\",\n            \"cause\": \"NONE\",\n            \"description\": \"NONE\",\n            \"posDescription\": \"NONE\",\n            \"solution\": \"NONE\"\n        },\n        \"data\": {\n            \"devicelist\": [\n                {\n                    \"address\": \"0000:60:00.0\",\n                    \"class\": \"ARRAY\",\n                    \"modelNumber\": \"SAMSUNG MZQLB1T9HAJR-00007              \",\n                    \"name\": \"unvme-ns-0\",\n                    \"numa\": \"0\",\n                    \"serialNumber\": \"S439NA0MB02505      \",\n                    \"size\": \"1920383410176\",\n                    \"type\": \"SSD\"\n                },\n                {\n                    \"address\": \"0000:61:00.0\",\n                    \"class\": \"ARRAY\",\n                    \"modelNumber\": \"SAMSUNG MZQLB1T9HAJR-00007              \",\n                    \"name\": \"unvme-ns-1\",\n                    \"numa\": \"0\",\n                    \"serialNumber\": \"S439NA0MB02476      \",\n                    \"size\": \"1920383410176\",\n                    \"type\": \"SSD\"\n                },\n                {\n                    \"address\": \"0000:62:00.0\",\n                    \"class\": \"ARRAY\",\n                    \"modelNumber\": \"SAMSUNG MZQLB1T9HAJR-00007              \",\n                    \"name\": \"unvme-ns-2\",\n                    \"numa\": \"0\",\n                    \"serialNumber\": \"S439NA0MB02503      \",\n                    \"size\": \"1920383410176\",\n                    \"type\": \"SSD\"\n                },\n                {\n                    \"address\": \"0000:63:00.0\",\n                    \"class\": \"ARRAY\",\n                    \"modelNumber\": \"SAMSUNG MZQLB1T9HAJR-00007              \",\n                    \"name\": \"unvme-ns-3\",\n                    \"numa\": \"0\",\n                    \"serialNumber\": \"S439NA0MB02514      \",\n                    \"size\": \"1920383410176\",\n                    \"type\": \"SSD\"\n                },\n                {\n                    \"address\": \"0000:64:00.0\",\n                    \"class\": \"SYSTEM\",\n                    \"modelNumber\": \"SAMSUNG MZQLB1T9HAJR-00007              \",\n                    \"name\": \"unvme-ns-4\",\n                    \"numa\": \"0\",\n                    \"serialNumber\": \"S439NA0MB02492      \",\n                    \"size\": \"1920383410176\",\n                    \"type\": \"SSD\"\n                },\n                {\n                    \"address\": \"0000:65:00.0\",\n                    \"class\": \"SYSTEM\",\n                    \"modelNumber\": \"SAMSUNG MZQLB1T9HAJR-00007              \",\n                    \"name\": \"unvme-ns-5\",\n                    \"numa\": \"0\",\n                    \"serialNumber\": \"S439NA0MB02473      \",\n                    \"size\": \"1920383410176\",\n                    \"type\": \"SSD\"\n                },\n                {\n                    \"address\": \"0000:66:00.0\",\n                    \"class\": \"SYSTEM\",\n                    \"modelNumber\": \"SAMSUNG MZQLB1T9HAJR-00007              \",\n                    \"name\": \"unvme-ns-6\",\n                    \"numa\": \"0\",\n                    \"serialNumber\": \"S439NA0MB02490      \",\n                    \"size\": \"1920383410176\",\n                    \"type\": \"SSD\"\n                },\n                {\n                    \"address\": \"0000:67:00.0\",\n                    \"class\": \"SYSTEM\",\n                    \"modelNumber\": \"SAMSUNG MZQLB1T9HAJR-00007              \",\n                    \"name\": \"unvme-ns-7\",\n                    \"numa\": \"0\",\n                    \"serialNumber\": \"S439NA0MA02562      \",\n                    \"size\": \"1920383410176\",\n                    \"type\": \"SSD\"\n                },\n                {\n                    \"address\": \"0000:68:00.0\",\n                    \"class\": \"SYSTEM\",\n                    \"modelNumber\": \"SAMSUNG MZQLB1T9HAJR-00007              \",\n                    \"name\": \"unvme-ns-8\",\n                    \"numa\": \"0\",\n                    \"serialNumber\": \"S439NA0MB02512      \",\n                    \"size\": \"1920383410176\",\n                    \"type\": \"SSD\"\n                },\n                {\n                    \"address\": \"0000:69:00.0\",\n                    \"class\": \"SYSTEM\",\n                    \"modelNumber\": \"SAMSUNG MZQLB1T9HAJR-00007              \",\n                    \"name\": \"unvme-ns-9\",\n                    \"numa\": \"0\",\n                    \"serialNumber\": \"S439NA0MB02477      \",\n                    \"size\": \"1920383410176\",\n                    \"type\": \"SSD\"\n                },\n                {\n                    \"address\": \"0000:6a:00.0\",\n                    \"class\": \"SYSTEM\",\n                    \"modelNumber\": \"SAMSUNG MZQLB1T9HAJR-00007              \",\n                    \"name\": \"unvme-ns-10\",\n                    \"numa\": \"0\",\n                    \"serialNumber\": \"S439NA0MB02483      \",\n                    \"size\": \"1920383410176\",\n                    \"type\": \"SSD\"\n                },\n                {\n                    \"address\": \"0000:6b:00.0\",\n                    \"class\": \"SYSTEM\",\n                    \"modelNumber\": \"SAMSUNG MZQLB1T9HAJR-00007              \",\n                    \"name\": \"unvme-ns-11\",\n                    \"numa\": \"0\",\n                    \"serialNumber\": \"S439NA0MB02482      \",\n                    \"size\": \"1920383410176\",\n                    \"type\": \"SSD\"\n                },\n                {\n                    \"address\": \"0000:b1:00.0\",\n                    \"class\": \"SYSTEM\",\n                    \"modelNumber\": \"SAMSUNG MZQLB1T9HAJR-00007              \",\n                    \"name\": \"unvme-ns-12\",\n                    \"numa\": \"1\",\n                    \"serialNumber\": \"S439NA0MB02465      \",\n                    \"size\": \"1920383410176\",\n                    \"type\": \"SSD\"\n                },\n                {\n                    \"address\": \"0000:b2:00.0\",\n                    \"class\": \"SYSTEM\",\n                    \"modelNumber\": \"SAMSUNG MZQLB1T9HAJR-00007              \",\n                    \"name\": \"unvme-ns-13\",\n                    \"numa\": \"1\",\n                    \"serialNumber\": \"S439NA0MB02494      \",\n                    \"size\": \"1920383410176\",\n                    \"type\": \"SSD\"\n                },\n                {\n                    \"address\": \"0000:b3:00.0\",\n                    \"class\": \"SYSTEM\",\n                    \"modelNumber\": \"SAMSUNG MZQLB1T9HAJR-00007              \",\n                    \"name\": \"unvme-ns-14\",\n                    \"numa\": \"1\",\n                    \"serialNumber\": \"S439NA0MB02484      \",\n                    \"size\": \"1920383410176\",\n                    \"type\": \"SSD\"\n                },\n                {\n                    \"address\": \"0000:b4:00.0\",\n                    \"class\": \"SYSTEM\",\n                    \"modelNumber\": \"SAMSUNG MZQLB1T9HAJR-00007              \",\n                    \"name\": \"unvme-ns-15\",\n                    \"numa\": \"1\",\n                    \"serialNumber\": \"S439NA0MB02468      \",\n                    \"size\": \"1920383410176\",\n                    \"type\": \"SSD\"\n                },\n                {\n                    \"address\": \"0000:b5:00.0\",\n                    \"class\": \"SYSTEM\",\n                    \"modelNumber\": \"SAMSUNG MZQLB1T9HAJR-00007              \",\n                    \"name\": \"unvme-ns-16\",\n                    \"numa\": \"1\",\n                    \"serialNumber\": \"S439NA0MB02466      \",\n                    \"size\": \"1920383410176\",\n                    \"type\": \"SSD\"\n                },\n                {\n                    \"address\": \"0000:b6:00.0\",\n                    \"class\": \"SYSTEM\",\n                    \"modelNumber\": \"SAMSUNG MZQLB1T9HAJR-00007              \",\n                    \"name\": \"unvme-ns-17\",\n                    \"numa\": \"1\",\n                    \"serialNumber\": \"S439NA0MA02555      \",\n                    \"size\": \"1920383410176\",\n                    \"type\": \"SSD\"\n                },\n                {\n                    \"address\": \"0000:b7:00.0\",\n                    \"class\": \"SYSTEM\",\n                    \"modelNumber\": \"SAMSUNG MZQLB1T9HAJR-00007              \",\n                    \"name\": \"unvme-ns-18\",\n                    \"numa\": \"1\",\n                    \"serialNumber\": \"S439NA0MB02491      \",\n                    \"size\": \"1920383410176\",\n                    \"type\": \"SSD\"\n                },\n                {\n                    \"address\": \"0000:b8:00.0\",\n                    \"class\": \"SYSTEM\",\n                    \"modelNumber\": \"SAMSUNG MZQLB1T9HAJR-00007              \",\n                    \"name\": \"unvme-ns-19\",\n                    \"numa\": \"1\",\n                    \"serialNumber\": \"S439NA0MB02464      \",\n                    \"size\": \"1920383410176\",\n                    \"type\": \"SSD\"\n                },\n                {\n                    \"address\": \"0000:b9:00.0\",\n                    \"class\": \"SYSTEM\",\n                    \"modelNumber\": \"SAMSUNG MZQLB1T9HAJR-00007              \",\n                    \"name\": \"unvme-ns-20\",\n                    \"numa\": \"1\",\n                    \"serialNumber\": \"S439NA0MB02469      \",\n                    \"size\": \"1920383410176\",\n                    \"type\": \"SSD\"\n                },\n                {\n                    \"address\": \"0000:ba:00.0\",\n                    \"class\": \"SYSTEM\",\n                    \"modelNumber\": \"SAMSUNG MZQLB1T9HAJR-00007              \",\n                    \"name\": \"unvme-ns-21\",\n                    \"numa\": \"1\",\n                    \"serialNumber\": \"S439NA0MB02513      \",\n                    \"size\": \"1920383410176\",\n                    \"type\": \"SSD\"\n                },\n                {\n                    \"address\": \"0000:bb:00.0\",\n                    \"class\": \"SYSTEM\",\n                    \"modelNumber\": \"SAMSUNG MZQLB1T9HAJR-00007              \",\n                    \"name\": \"unvme-ns-22\",\n                    \"numa\": \"1\",\n                    \"serialNumber\": \"S439NA0MB02485      \",\n                    \"size\": \"1920383410176\",\n                    \"type\": \"SSD\"\n                },\n                {\n                    \"address\": \"0000:bc:00.0\",\n                    \"class\": \"SYSTEM\",\n                    \"modelNumber\": \"SAMSUNG MZQLB1T9HAJR-00007              \",\n                    \"name\": \"unvme-ns-23\",\n                    \"numa\": \"1\",\n                    \"serialNumber\": \"S439NA0MB02472      \",\n                    \"size\": \"1920383410176\",\n                    \"type\": \"SSD\"\n                },\n                {\n                    \"class\": \"ARRAY\",\n                    \"modelNumber\": \"uram0\",\n                    \"name\": \"uram0\",\n                    \"numa\": \"0\",\n                    \"serialNumber\": \"uram0\",\n                    \"size\": \"4294967296\",\n                    \"type\": \"NVRAM\"\n                },\n                {\n                    \"class\": \"SYSTEM\",\n                    \"modelNumber\": \"uram1\",\n                    \"name\": \"uram1\",\n                    \"numa\": \"0\",\n                    \"serialNumber\": \"uram1\",\n                    \"size\": \"4294967296\",\n                    \"type\": \"NVRAM\"\n                }\n            ]\n        }\n    },\n    \"info\": {\n        \"version\": \"v0.11.0-rc6\"\n    }\n}"
						}
					]
				},
				{
					"name": "CREATE DEVICE",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"LIST DEVICE\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-Request-Id",
								"value": "{{$guid}}"
							},
							{
								"key": "ts",
								"value": "{{$timestamp}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{basic_auth}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"param\": {\r\n        \"name\": \"uram3\",\r\n        \"numBlocks\": 8388608,\r\n        \"blockSize\": 512,\r\n        \"devType\": \"uram\",\r\n        \"numa\": 0\r\n    }\r\n}"
						},
						"url": {
							"raw": "http://{{host}}/api/ibofos/v1/device",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"ibofos",
								"v1",
								"device"
							]
						}
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "X-Request-Id",
										"value": "{{$guid}}"
									},
									{
										"key": "ts",
										"value": "{{$timestamp}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{basic_auth}}"
									}
								],
								"url": {
									"raw": "http://{{host}}/mtool/api/ibofos/v1/device",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"path": [
										"mtool",
										"api",
										"ibofos",
										"v1",
										"device"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "X-Request-Id",
									"value": "7ec6e965-dc86-4a95-8a3a-353dc36478a1"
								},
								{
									"key": "Date",
									"value": "Fri, 08 May 2020 06:50:42 GMT"
								},
								{
									"key": "Content-Length",
									"value": "942"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"rid\": \"2f31d484-3778-11ed-a4ce-3cecef280244\",\n    \"lastSuccessTime\": 0,\n    \"result\": {\n        \"status\": {\n            \"module\": \"\",\n            \"code\": 0,\n            \"eventName\": \"SUCCESS\",\n            \"cause\": \"NONE\",\n            \"description\": \"NONE\",\n            \"posDescription\": \"NONE\",\n            \"solution\": \"NONE\"\n        }\n    },\n    \"info\": {\n        \"version\": \"v0.11.0-rc6\"\n    }\n}"
						},
						{
							"name": "Fail",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "X-Request-Id",
										"value": "{{$guid}}"
									},
									{
										"key": "ts",
										"value": "{{$timestamp}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{basic_auth}}"
									}
								],
								"url": {
									"raw": "http://{{host}}/mtool/api/ibofos/v1/device",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"path": [
										"mtool",
										"api",
										"ibofos",
										"v1",
										"device"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "X-Request-Id",
									"value": "7ec6e965-dc86-4a95-8a3a-353dc36478a1"
								},
								{
									"key": "Date",
									"value": "Fri, 08 May 2020 06:50:42 GMT"
								},
								{
									"key": "Content-Length",
									"value": "942"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"rid\": \"285dbeeb-3639-11ed-9382-3cecef280244\",\n    \"lastSuccessTime\": 0,\n    \"result\": {\n        \"status\": {\n            \"module\": \"\",\n            \"code\": 1246,\n            \"eventName\": \"CLI_CREATE_DEVICE_FAILURE\",\n            \"cause\": \"NONE\",\n            \"description\": \"Failed to create a device.\",\n            \"posDescription\": \"Failed to create a device.\",\n            \"solution\": \"Check out the PoseidonOS log.\"\n        }\n    },\n    \"info\": {\n        \"version\": \"v0.11.0-rc6\"\n    }\n}"
						}
					]
				}
			]
		},
		{
			"name": "Array",
			"item": [
				{
					"name": "CREATE ARRAY 1st ARRAY",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"CREATE ARRAY\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-Request-Id",
								"value": "{{$guid}}"
							},
							{
								"key": "ts",
								"value": "{{$timestamp}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{basic_auth}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"param\": {\n        \"name\": \"{{arrayName}}\",\n        \"raidtype\": \"RAID5\",\n        \"buffer\": [\n            {\n                \"deviceName\": \"uram0\"\n            }\n        ],\n        \"data\": [\n            {\n                \"deviceName\": \"{{deviceName1}}\"\n            },\n            {\n                \"deviceName\": \"{{deviceName2}}\"\n            },\n            {\n                \"deviceName\": \"{{deviceName3}}\"\n            }\n        ],\n        \"spare\": [\n            {\n                \"deviceName\": \"{{deviceName4}}\"\n            }\n        ]\n    }\n}"
						},
						"url": {
							"raw": "http://{{host}}/api/ibofos/v1/array",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"ibofos",
								"v1",
								"array"
							]
						}
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "X-Request-Id",
										"value": "{{$guid}}"
									},
									{
										"key": "ts",
										"value": "{{$timestamp}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{basic_auth}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"param\": {\n        \"name\": \"{{arrayName}}\",\n        \"raidtype\": \"RAID5\",\n        \"buffer\": [\n            {\n                \"deviceName\": \"uram0\"\n            }\n        ],\n        \"data\": [\n            {\n                \"deviceName\": \"{{deviceName1}}\"\n            },\n            {\n                \"deviceName\": \"{{deviceName2}}\"\n            },\n            {\n                \"deviceName\": \"{{deviceName3}}\"\n            }\n        ],\n        \"spare\": [\n            {\n                \"deviceName\": \"{{deviceName4}}\"\n            }\n        ]\n    }\n}"
								},
								"url": {
									"raw": "http://{{host}}/api/ibofos/v1/array",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"ibofos",
										"v1",
										"array"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Wed, 19 Aug 2020 06:52:48 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "259"
								},
								{
									"key": "X-Request-Id",
									"value": "cc3eed56-3478-4180-af0b-eac6b88f264f"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"rid\": \"\",\n    \"lastSuccessTime\": 0,\n    \"result\": {\n        \"status\": {\n            \"module\": \"\",\n            \"code\": 0,\n            \"eventName\": \"SUCCESS\",\n            \"cause\": \"NONE\",\n            \"description\": \"NONE\",\n            \"posDescription\": \"NONE\",\n            \"solution\": \"NONE\"\n        }\n    },\n    \"info\": {\n        \"version\": \"v0.11.0-rc6\"\n    }\n}"
						},
						{
							"name": "Fail - 2502",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "X-Request-Id",
										"value": "{{$guid}}"
									},
									{
										"key": "ts",
										"value": "{{$timestamp}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{basic_auth}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"param\": {\n        \"name\": \"{{arrayName}}\",\n        \"raidtype\": \"RAID5\",\n        \"buffer\": [\n            {\n                \"deviceName\": \"uram0\"\n            }\n        ],\n        \"data\": [\n            {\n                \"deviceName\": \"{{deviceName1}}\"\n            },\n            {\n                \"deviceName\": \"{{deviceName2}}\"\n            },\n            {\n                \"deviceName\": \"{{deviceName3}}\"\n            }\n        ],\n        \"spare\": [\n            {\n                \"deviceName\": \"{{deviceName4}}\"\n            }\n        ]\n    }\n}"
								},
								"url": {
									"raw": "http://{{host}}/api/ibofos/v1/array",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"ibofos",
										"v1",
										"array"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Wed, 19 Aug 2020 06:52:14 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "271"
								},
								{
									"key": "X-Request-Id",
									"value": "3cfc6d1e-6595-4aad-829a-bfca0d831069"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"rid\": \"\",\n    \"lastSuccessTime\": 0,\n    \"result\": {\n        \"status\": {\n            \"module\": \"\",\n            \"code\": 2502,\n            \"eventName\": \"CREATE_ARRAY_SAME_ARRAY_NAME_EXISTS\",\n            \"cause\": \"Array with the same name already exists.\",\n            \"description\": \"Failed to create array.\",\n            \"posDescription\": \"Failed to create array.\",\n            \"solution\": \"Please use another name.\"\n        }\n    },\n    \"info\": {\n        \"version\": \"v0.12.0-rc3\"\n    }\n}"
						}
					]
				},
				{
					"name": "CREATE ARRAY Copy",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"CREATE ARRAY\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-Request-Id",
								"value": "{{$guid}}"
							},
							{
								"key": "ts",
								"value": "{{$timestamp}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{basic_auth}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"param\": {\n        \"name\": \"{{arrayName}}\",\n        \"raidtype\": \"RAID5\",\n        \"buffer\": [\n            {\n                \"deviceName\": \"uram0\"\n            }\n        ],\n        \"data\": [\n            {\n                \"deviceName\": \"unvme-ns-1\"\n            },\n            {\n                \"deviceName\": \"unvme-ns-2\"\n            },\n            {\n                \"deviceName\": \"unvme-ns-3\"\n            }\n        ]\n    }\n}"
						},
						"url": {
							"raw": "http://{{host}}/api/ibofos/v1/array",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"ibofos",
								"v1",
								"array"
							]
						}
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "X-Request-Id",
										"value": "{{$guid}}"
									},
									{
										"key": "ts",
										"value": "{{$timestamp}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{basic_auth}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"param\": {\n        \"name\": \"{{arrayName}}\",\n        \"raidtype\": \"RAID5\",\n        \"buffer\": [\n            {\n                \"deviceName\": \"uram0\"\n            }\n        ],\n        \"data\": [\n            {\n                \"deviceName\": \"{{deviceName1}}\"\n            },\n            {\n                \"deviceName\": \"{{deviceName2}}\"\n            },\n            {\n                \"deviceName\": \"{{deviceName3}}\"\n            }\n        ],\n        \"spare\": [\n            {\n                \"deviceName\": \"{{deviceName4}}\"\n            }\n        ]\n    }\n}"
								},
								"url": {
									"raw": "http://{{host}}/api/ibofos/v1/array",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"ibofos",
										"v1",
										"array"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Wed, 19 Aug 2020 06:52:48 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "259"
								},
								{
									"key": "X-Request-Id",
									"value": "cc3eed56-3478-4180-af0b-eac6b88f264f"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"rid\": \"\",\n    \"lastSuccessTime\": 0,\n    \"result\": {\n        \"status\": {\n            \"module\": \"\",\n            \"code\": 0,\n            \"eventName\": \"SUCCESS\",\n            \"cause\": \"NONE\",\n            \"description\": \"NONE\",\n            \"posDescription\": \"NONE\",\n            \"solution\": \"NONE\"\n        }\n    },\n    \"info\": {\n        \"version\": \"v0.11.0-rc6\"\n    }\n}"
						},
						{
							"name": "Fail - 2502",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "X-Request-Id",
										"value": "{{$guid}}"
									},
									{
										"key": "ts",
										"value": "{{$timestamp}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{basic_auth}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"param\": {\n        \"name\": \"{{arrayName}}\",\n        \"raidtype\": \"RAID5\",\n        \"buffer\": [\n            {\n                \"deviceName\": \"uram0\"\n            }\n        ],\n        \"data\": [\n            {\n                \"deviceName\": \"{{deviceName1}}\"\n            },\n            {\n                \"deviceName\": \"{{deviceName2}}\"\n            },\n            {\n                \"deviceName\": \"{{deviceName3}}\"\n            }\n        ],\n        \"spare\": [\n            {\n                \"deviceName\": \"{{deviceName4}}\"\n            }\n        ]\n    }\n}"
								},
								"url": {
									"raw": "http://{{host}}/api/ibofos/v1/array",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"ibofos",
										"v1",
										"array"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Wed, 19 Aug 2020 06:52:14 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "271"
								},
								{
									"key": "X-Request-Id",
									"value": "3cfc6d1e-6595-4aad-829a-bfca0d831069"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"rid\": \"\",\n    \"lastSuccessTime\": 0,\n    \"result\": {\n        \"status\": {\n            \"module\": \"\",\n            \"code\": 2502,\n            \"eventName\": \"CREATE_ARRAY_SAME_ARRAY_NAME_EXISTS\",\n            \"cause\": \"Array with the same name already exists.\",\n            \"description\": \"Failed to create array.\",\n            \"posDescription\": \"Failed to create array.\",\n            \"solution\": \"Please use another name.\"\n        }\n    },\n    \"info\": {\n        \"version\": \"v0.12.0-rc3\"\n    }\n}"
						}
					]
				},
				{
					"name": "AUTO CREATE ARRAY",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"CREATE ARRAY\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-Request-Id",
								"value": "{{$guid}}"
							},
							{
								"key": "ts",
								"value": "{{$timestamp}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{basic_auth}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"param\": {\n        \"name\": \"{{arrayName}}\",\n        \"raidtype\": \"RAID5\",\n        \"buffer\": [{\"deviceName\": \"uram0\"}],\n        \"numData\" : 3,\n        \"numSpare\" : 1\n    }\n}\n"
						},
						"url": {
							"raw": "http://{{host}}/api/ibofos/v1/autoarray",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"ibofos",
								"v1",
								"autoarray"
							]
						}
					},
					"response": [
						{
							"name": "Fail - 2502",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "X-Request-Id",
										"value": "{{$guid}}"
									},
									{
										"key": "ts",
										"value": "{{$timestamp}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{basic_auth}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"param\": {\n        \"name\": \"{{arrayName}}\",\n        \"raidtype\": \"RAID5\",\n        \"buffer\":[{\"deviceName\":\"uram0\"}],\n        \"num_data\" : 3,\n        \"num_spare\" : 1\n    }\n}"
								},
								"url": {
									"raw": "http://{{host}}/api/ibofos/v1/autoarray",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"ibofos",
										"v1",
										"autoarray"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Wed, 19 Aug 2020 06:52:14 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "271"
								},
								{
									"key": "X-Request-Id",
									"value": "3cfc6d1e-6595-4aad-829a-bfca0d831069"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"rid\": \"feadefdb-bd4e-4481-9d1a-3bcf980c1179\",\n    \"lastSuccessTime\": 1656017207,\n    \"result\": {\n        \"status\": {\n            \"module\": \"Array\",\n            \"code\": 2502,\n            \"level\": \"ERROR\",\n            \"description\": \"Array already exists\",\n            \"posDescription\": \"failed to create POSArray\"\n        }\n    },\n    \"info\": {\n        \"version\": \"v0.11.0-rc5\"\n    }\n}"
						},
						{
							"name": "Success",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "X-Request-Id",
										"value": "{{$guid}}"
									},
									{
										"key": "ts",
										"value": "{{$timestamp}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{basic_auth}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"param\": {\n        \"name\": \"{{arrayName}}\",\n        \"raidtype\": \"RAID5\",\n        \"buffer\":[{\"deviceName\":\"uram0\"}],\n        \"num_data\" : 3,\n        \"num_spare\" : 1\n    }\n}"
								},
								"url": {
									"raw": "http://{{host}}/api/ibofos/v1/autoarray",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"ibofos",
										"v1",
										"autoarray"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Wed, 19 Aug 2020 06:52:48 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "259"
								},
								{
									"key": "X-Request-Id",
									"value": "cc3eed56-3478-4180-af0b-eac6b88f264f"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"rid\": \"\",\n    \"lastSuccessTime\": 0,\n    \"result\": {\n        \"status\": {\n            \"module\": \"\",\n            \"code\": 0,\n            \"eventName\": \"SUCCESS\",\n            \"cause\": \"NONE\",\n            \"description\": \"NONE\",\n            \"posDescription\": \"NONE\",\n            \"solution\": \"NONE\"\n        }\n    },\n    \"info\": {\n        \"version\": \"v0.11.0-rc6\"\n    }\n}"
						}
					]
				},
				{
					"name": "ARRAY MOUNT 1st",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"LIST ARRAY DEVICE\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-Request-Id",
								"value": "{{$guid}}"
							},
							{
								"key": "ts",
								"value": "{{$timestamp}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{basic_auth}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"param\": {\n        \"array\": \"{{arrayName}}\",\n        \"enable_write_through\": true\n    }\n}"
						},
						"url": {
							"raw": "http://{{host}}/api/ibofos/v1/array/{{arrayName}}/mount",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"ibofos",
								"v1",
								"array",
								"{{arrayName}}",
								"mount"
							]
						}
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "X-Request-Id",
										"value": "{{$guid}}"
									},
									{
										"key": "ts",
										"value": "{{$timestamp}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{basic_auth}}"
									}
								],
								"url": {
									"raw": "http://{{host}}/mtool/api/ibofos/v1/POSArray/device",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"path": [
										"mtool",
										"api",
										"ibofos",
										"v1",
										"POSArray",
										"device"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "X-Request-Id",
									"value": "6e787e27-1964-44da-bcdf-b5f44ffbd1a3"
								},
								{
									"key": "Date",
									"value": "Fri, 08 May 2020 06:51:22 GMT"
								},
								{
									"key": "Content-Length",
									"value": "437"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"rid\": \"\",\n    \"lastSuccessTime\": 0,\n    \"result\": {\n        \"status\": {\n            \"module\": \"\",\n            \"code\": 0,\n            \"eventName\": \"SUCCESS\",\n            \"cause\": \"NONE\",\n            \"description\": \"NONE\",\n            \"posDescription\": \"NONE\",\n            \"solution\": \"NONE\"\n        }\n    },\n    \"info\": {\n        \"version\": \"v0.11.0-rc6\"\n    }\n}"
						}
					]
				},
				{
					"name": "ARRAY UNMOUNT 1st",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"LIST ARRAY DEVICE\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "X-Request-Id",
								"value": "{{$guid}}"
							},
							{
								"key": "ts",
								"value": "{{$timestamp}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{basic_auth}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://{{host}}/api/ibofos/v1/array/{{arrayName}}/mount",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"ibofos",
								"v1",
								"array",
								"{{arrayName}}",
								"mount"
							]
						}
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "X-Request-Id",
										"value": "{{$guid}}"
									},
									{
										"key": "ts",
										"value": "{{$timestamp}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{basic_auth}}"
									}
								],
								"url": {
									"raw": "http://{{host}}/mtool/api/ibofos/v1/array/device",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"path": [
										"mtool",
										"api",
										"ibofos",
										"v1",
										"array",
										"device"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "X-Request-Id",
									"value": "6e787e27-1964-44da-bcdf-b5f44ffbd1a3"
								},
								{
									"key": "Date",
									"value": "Fri, 08 May 2020 06:51:22 GMT"
								},
								{
									"key": "Content-Length",
									"value": "437"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"rid\": \"\",\n    \"lastSuccessTime\": 0,\n    \"result\": {\n        \"status\": {\n            \"module\": \"\",\n            \"code\": 0,\n            \"eventName\": \"SUCCESS\",\n            \"cause\": \"NONE\",\n            \"description\": \"NONE\",\n            \"posDescription\": \"NONE\",\n            \"solution\": \"NONE\"\n        }\n    },\n    \"info\": {\n        \"version\": \"v0.11.0-rc6\"\n    }\n}"
						}
					]
				},
				{
					"name": "CREATE ARRAY 2nd ARRAY",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"CREATE ARRAY\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-Request-Id",
								"value": "{{$guid}}"
							},
							{
								"key": "ts",
								"value": "{{$timestamp}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{basic_auth}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"param\": {\n        \"name\": \"{{arrayName}}1\",\n        \"raidtype\": \"RAID5\",\n        \"buffer\": [\n            {\n                \"deviceName\": \"uram1\"\n            }\n        ],\n        \"data\": [\n            {\n                \"deviceName\": \"{{deviceName5}}\"\n            },\n            {\n                \"deviceName\": \"{{deviceName6}}\"\n            },\n            {\n                \"deviceName\": \"{{deviceName7}}\"\n            }\n        ],\n        \"spare\": [\n            {\n                \"deviceName\": \"{{deviceName8}}\"\n            }\n        ]\n    }\n}"
						},
						"url": {
							"raw": "http://{{host}}/api/ibofos/v1/array",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"ibofos",
								"v1",
								"array"
							]
						}
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "X-Request-Id",
										"value": "{{$guid}}"
									},
									{
										"key": "ts",
										"value": "{{$timestamp}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{basic_auth}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"param\": {\n        \"name\": \"{{arrayName}}\",\n        \"raidtype\": \"RAID5\",\n        \"buffer\": [\n            {\n                \"deviceName\": \"uram0\"\n            }\n        ],\n        \"data\": [\n            {\n                \"deviceName\": \"{{deviceName1}}\"\n            },\n            {\n                \"deviceName\": \"{{deviceName2}}\"\n            },\n            {\n                \"deviceName\": \"{{deviceName3}}\"\n            }\n        ],\n        \"spare\": [\n            {\n                \"deviceName\": \"{{deviceName4}}\"\n            }\n        ]\n    }\n}"
								},
								"url": {
									"raw": "http://{{host}}/api/ibofos/v1/array",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"ibofos",
										"v1",
										"array"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Wed, 19 Aug 2020 06:52:48 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "259"
								},
								{
									"key": "X-Request-Id",
									"value": "cc3eed56-3478-4180-af0b-eac6b88f264f"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"rid\": \"\",\n    \"lastSuccessTime\": 0,\n    \"result\": {\n        \"status\": {\n            \"module\": \"\",\n            \"code\": 0,\n            \"eventName\": \"SUCCESS\",\n            \"cause\": \"NONE\",\n            \"description\": \"NONE\",\n            \"posDescription\": \"NONE\",\n            \"solution\": \"NONE\"\n        }\n    },\n    \"info\": {\n        \"version\": \"v0.11.0-rc6\"\n    }\n}"
						},
						{
							"name": "Fail - 2502",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "X-Request-Id",
										"value": "{{$guid}}"
									},
									{
										"key": "ts",
										"value": "{{$timestamp}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{basic_auth}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"param\": {\n        \"name\": \"{{arrayName}}\",\n        \"raidtype\": \"RAID5\",\n        \"buffer\": [\n            {\n                \"deviceName\": \"uram0\"\n            }\n        ],\n        \"data\": [\n            {\n                \"deviceName\": \"{{deviceName1}}\"\n            },\n            {\n                \"deviceName\": \"{{deviceName2}}\"\n            },\n            {\n                \"deviceName\": \"{{deviceName3}}\"\n            }\n        ],\n        \"spare\": [\n            {\n                \"deviceName\": \"{{deviceName4}}\"\n            }\n        ]\n    }\n}"
								},
								"url": {
									"raw": "http://{{host}}/api/ibofos/v1/array",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"ibofos",
										"v1",
										"array"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Wed, 19 Aug 2020 06:52:14 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "271"
								},
								{
									"key": "X-Request-Id",
									"value": "3cfc6d1e-6595-4aad-829a-bfca0d831069"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"rid\": \"619b1dc5-fad3-4f93-80ba-348c7243782d\",\n    \"lastSuccessTime\": 1656017315,\n    \"result\": {\n        \"status\": {\n            \"module\": \"Array\",\n            \"code\": 2502,\n            \"level\": \"ERROR\",\n            \"description\": \"Array already exists\",\n            \"posDescription\": \"failed to create array POSArray1\"\n        }\n    },\n    \"info\": {\n        \"version\": \"v0.11.0-rc5\"\n    }\n}"
						}
					]
				},
				{
					"name": "ARRAY MOUNT 2nd",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"LIST ARRAY DEVICE\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-Request-Id",
								"value": "{{$guid}}"
							},
							{
								"key": "ts",
								"value": "{{$timestamp}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{basic_auth}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"param\": {\n        \"array\": \"{{arrayName}}1\",\n        \"enable_write_through\": true\n    }\n}"
						},
						"url": {
							"raw": "http://{{host}}/api/ibofos/v1/array/{{arrayName}}1/mount",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"ibofos",
								"v1",
								"array",
								"{{arrayName}}1",
								"mount"
							]
						}
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "X-Request-Id",
										"value": "{{$guid}}"
									},
									{
										"key": "ts",
										"value": "{{$timestamp}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{basic_auth}}"
									}
								],
								"url": {
									"raw": "http://{{host}}/mtool/api/ibofos/v1/array/device",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"path": [
										"mtool",
										"api",
										"ibofos",
										"v1",
										"array",
										"device"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "X-Request-Id",
									"value": "6e787e27-1964-44da-bcdf-b5f44ffbd1a3"
								},
								{
									"key": "Date",
									"value": "Fri, 08 May 2020 06:51:22 GMT"
								},
								{
									"key": "Content-Length",
									"value": "437"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"rid\": \"\",\n    \"lastSuccessTime\": 0,\n    \"result\": {\n        \"status\": {\n            \"module\": \"\",\n            \"code\": 0,\n            \"eventName\": \"SUCCESS\",\n            \"cause\": \"NONE\",\n            \"description\": \"NONE\",\n            \"posDescription\": \"NONE\",\n            \"solution\": \"NONE\"\n        }\n    },\n    \"info\": {\n        \"version\": \"v0.11.0-rc6\"\n    }\n}"
						}
					]
				},
				{
					"name": "ARRAY UNMOUNT 2nd",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"LIST ARRAY DEVICE\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "X-Request-Id",
								"value": "{{$guid}}"
							},
							{
								"key": "ts",
								"value": "{{$timestamp}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{basic_auth}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://{{host}}/api/ibofos/v1/array/POSArray1/mount",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"ibofos",
								"v1",
								"array",
								"POSArray1",
								"mount"
							]
						}
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "X-Request-Id",
										"value": "{{$guid}}"
									},
									{
										"key": "ts",
										"value": "{{$timestamp}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{basic_auth}}"
									}
								],
								"url": {
									"raw": "http://{{host}}/api/ibofos/v1/array/POSArray1/mount",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"ibofos",
										"v1",
										"array",
										"POSArray1",
										"mount"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "X-Request-Id",
									"value": "6e787e27-1964-44da-bcdf-b5f44ffbd1a3"
								},
								{
									"key": "Date",
									"value": "Fri, 08 May 2020 06:51:22 GMT"
								},
								{
									"key": "Content-Length",
									"value": "437"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"rid\": \"\",\n    \"lastSuccessTime\": 0,\n    \"result\": {\n        \"status\": {\n            \"module\": \"\",\n            \"code\": 0,\n            \"eventName\": \"SUCCESS\",\n            \"cause\": \"NONE\",\n            \"description\": \"NONE\",\n            \"posDescription\": \"NONE\",\n            \"solution\": \"NONE\"\n        }\n    },\n    \"info\": {\n        \"version\": \"v0.11.0-rc6\"\n    }\n}"
						}
					]
				},
				{
					"name": "ARRAYLIST",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"LIST ARRAY DEVICE\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "X-Request-Id",
								"value": "{{$guid}}"
							},
							{
								"key": "ts",
								"value": "{{$timestamp}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{basic_auth}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://{{host}}/api/ibofos/v1/arrays",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"ibofos",
								"v1",
								"arrays"
							]
						}
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "X-Request-Id",
										"value": "{{$guid}}"
									},
									{
										"key": "ts",
										"value": "{{$timestamp}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{basic_auth}}"
									}
								],
								"url": {
									"raw": "http://{{host}}/mtool/api/ibofos/v1/array/device",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"path": [
										"mtool",
										"api",
										"ibofos",
										"v1",
										"array",
										"device"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "X-Request-Id",
									"value": "6e787e27-1964-44da-bcdf-b5f44ffbd1a3"
								},
								{
									"key": "Date",
									"value": "Fri, 08 May 2020 06:51:22 GMT"
								},
								{
									"key": "Content-Length",
									"value": "437"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"rid\": \"4f86cfb7-377b-11ed-8c02-3cecef280244\",\n    \"lastSuccessTime\": 0,\n    \"result\": {\n        \"status\": {\n            \"module\": \"\",\n            \"code\": 0,\n            \"eventName\": \"SUCCESS\",\n            \"cause\": \"NONE\",\n            \"description\": \"NONE\",\n            \"posDescription\": \"NONE\",\n            \"solution\": \"NONE\"\n        },\n        \"data\": {\n            \"arrayList\": [\n                {\n                    \"capacity\": \"3385669032346\",\n                    \"createDatetime\": \"2022-09-18 23:26:05 +0530\",\n                    \"dataRaid\": \"RAID5\",\n                    \"name\": \"POSArray\",\n                    \"status\": \"Mounted\",\n                    \"updateDatetime\": \"2022-09-18 23:26:29 +0530\",\n                    \"used\": \"5368709120\"\n                }\n            ]\n        }\n    },\n    \"info\": {\n        \"version\": \"v0.11.0-rc6\"\n    }\n}"
						}
					]
				},
				{
					"name": "ARRAY INFO",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"ARRAY INFO\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "X-Request-Id",
								"value": "{{$guid}}"
							},
							{
								"key": "ts",
								"value": "{{$timestamp}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{basic_auth}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://{{host}}/api/ibofos/v1/array/{{arrayName}}",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"ibofos",
								"v1",
								"array",
								"{{arrayName}}"
							]
						}
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "X-Request-Id",
										"value": "{{$guid}}"
									},
									{
										"key": "ts",
										"value": "{{$timestamp}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{basic_auth}}"
									}
								],
								"url": {
									"raw": "http://{{host}}/mtool/api/ibofos/v1/array/device",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"path": [
										"mtool",
										"api",
										"ibofos",
										"v1",
										"array",
										"device"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "X-Request-Id",
									"value": "6e787e27-1964-44da-bcdf-b5f44ffbd1a3"
								},
								{
									"key": "Date",
									"value": "Fri, 08 May 2020 06:51:22 GMT"
								},
								{
									"key": "Content-Length",
									"value": "437"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"rid\": \"5758e612-377b-11ed-8c02-3cecef280244\",\n    \"lastSuccessTime\": 0,\n    \"result\": {\n        \"status\": {\n            \"module\": \"\",\n            \"code\": 0,\n            \"eventName\": \"SUCCESS\",\n            \"cause\": \"NONE\",\n            \"description\": \"NONE\",\n            \"posDescription\": \"NONE\",\n            \"solution\": \"NONE\"\n        },\n        \"data\": {\n            \"capacity\": \"3385669032346\",\n            \"createDatetime\": \"2022-09-18 23:26:05 +0530\",\n            \"dataRaid\": \"RAID5\",\n            \"devicelist\": [\n                {\n                    \"name\": \"uram0\",\n                    \"type\": \"BUFFER\"\n                },\n                {\n                    \"name\": \"unvme-ns-0\",\n                    \"type\": \"DATA\"\n                },\n                {\n                    \"name\": \"unvme-ns-1\",\n                    \"type\": \"DATA\"\n                },\n                {\n                    \"name\": \"unvme-ns-2\",\n                    \"type\": \"DATA\"\n                },\n                {\n                    \"name\": \"unvme-ns-3\",\n                    \"type\": \"SPARE\"\n                }\n            ],\n            \"gcMode\": \"none\",\n            \"metaRaid\": \"RAID10\",\n            \"name\": \"POSArray\",\n            \"rebuildingProgress\": \"0\",\n            \"situation\": \"NORMAL\",\n            \"state\": \"NORMAL\",\n            \"uniqueId\": 1458401891,\n            \"updateDatetime\": \"2022-09-18 23:26:29 +0530\",\n            \"used\": \"5368709120\"\n        }\n    },\n    \"info\": {\n        \"version\": \"v0.11.0-rc6\"\n    }\n}"
						}
					]
				},
				{
					"name": "ADD DEVICE",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"ADD DEVICE\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-Request-Id",
								"value": "{{$guid}}"
							},
							{
								"key": "ts",
								"value": "{{$timestamp}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{basic_auth}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"param\": {\n        \"spare\": [\n            {\n                \"deviceName\": \"{{deviceName4}}\"\n            }\n        ]\n    }\n}"
						},
						"url": {
							"raw": "http://{{host}}/api/ibofos/v1/array/{{arrayName}}/devices",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"ibofos",
								"v1",
								"array",
								"{{arrayName}}",
								"devices"
							]
						}
					},
					"response": [
						{
							"name": "Fail - 2321",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "X-Request-Id",
										"value": "{{$guid}}"
									},
									{
										"key": "ts",
										"value": "{{$timestamp}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{basic_auth}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"param\": {\n        \"array\": \"{{arrayName}}\",\n        \"spare\": \"{{deviceName4}}\"\n    }\n}"
								},
								"url": {
									"raw": "http://{{host}}/api/ibofos/v1/devices",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"ibofos",
										"v1",
										"devices"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Thu, 20 Aug 2020 07:59:11 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "281"
								},
								{
									"key": "X-Request-Id",
									"value": "51cb31eb-35a1-4bf7-87e9-b33bcef2b066"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"rid\": \"518fec1e-c61b-4478-ae0b-c15ab756cf83\",\n    \"lastSuccessTime\": 1656017388,\n    \"result\": {\n        \"status\": {\n            \"module\": \"MBR Manager\",\n            \"code\": 2321,\n            \"level\": \"ERROR\",\n            \"description\": \"mbr device already in array\",\n            \"posDescription\": \"failed to add unvme-ns-3 to POSArray\"\n        }\n    },\n    \"info\": {\n        \"version\": \"v0.11.0-rc5\"\n    }\n}"
						},
						{
							"name": "Success",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "X-Request-Id",
										"value": "{{$guid}}"
									},
									{
										"key": "ts",
										"value": "{{$timestamp}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{basic_auth}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"param\": {\n        \"array\": \"{{arrayName}}\",\n        \"spare\": \"{{deviceName4}}\"\n    }\n}"
								},
								"url": {
									"raw": "http://{{host}}/api/ibofos/v1/devices",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"ibofos",
										"v1",
										"devices"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Thu, 20 Aug 2020 08:00:36 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "268"
								},
								{
									"key": "X-Request-Id",
									"value": "5794b792-4506-4323-a51c-59a26c064d8e"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"rid\": \"\",\n    \"lastSuccessTime\": 0,\n    \"result\": {\n        \"status\": {\n            \"module\": \"\",\n            \"code\": 0,\n            \"eventName\": \"SUCCESS\",\n            \"cause\": \"NONE\",\n            \"description\": \"NONE\",\n            \"posDescription\": \"NONE\",\n            \"solution\": \"NONE\"\n        }\n    },\n    \"info\": {\n        \"version\": \"v0.11.0-rc6\"\n    }\n}"
						}
					]
				},
				{
					"name": "REMOVE DEVICE",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"REMOVE DEVICE\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "X-Request-Id",
								"value": "{{$guid}}"
							},
							{
								"key": "ts",
								"value": "{{$timestamp}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{basic_auth}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://{{host}}/api/ibofos/v1/array/{{arrayName}}/devices/{{deviceName4}}",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"ibofos",
								"v1",
								"array",
								"{{arrayName}}",
								"devices",
								"{{deviceName4}}"
							]
						}
					},
					"response": [
						{
							"name": "Fail - 2617",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "X-Request-Id",
										"value": "{{$guid}}"
									},
									{
										"key": "ts",
										"value": "{{$timestamp}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{basic_auth}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"param\": {\n        \"array\": \"{{arrayName}}\"\n    }\n}"
								},
								"url": {
									"raw": "http://{{host}}/api/ibofos/v1/devices/{{deviceName4}}",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"ibofos",
										"v1",
										"devices",
										"{{deviceName4}}"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Thu, 20 Aug 2020 07:58:22 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "281"
								},
								{
									"key": "X-Request-Id",
									"value": "6827ac78-40e2-47f6-a3b9-1a10224e694c"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"rid\": \"fc51b2a8-1e4e-4a82-95c4-f922e647bf90\",\n    \"lastSuccessTime\": 1656017489,\n    \"result\": {\n        \"status\": {\n            \"module\": \"\",\n            \"code\": 2617,\n            \"description\": \"\",\n            \"posDescription\": \"failed to remove unvme-ns-3 from POSArray(code:2617)\"\n        }\n    },\n    \"info\": {\n        \"version\": \"v0.11.0-rc5\"\n    }\n}"
						},
						{
							"name": "Success",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "X-Request-Id",
										"value": "{{$guid}}"
									},
									{
										"key": "ts",
										"value": "{{$timestamp}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{basic_auth}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"param\": {\n        \"array\": \"{{arrayName}}\"\n    }\n}"
								},
								"url": {
									"raw": "http://{{host}}/api/ibofos/v1/devices/{{deviceName4}}",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"ibofos",
										"v1",
										"devices",
										"{{deviceName4}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Thu, 20 Aug 2020 08:00:17 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "268"
								},
								{
									"key": "X-Request-Id",
									"value": "2e7818c7-34e4-4668-9663-b5670a4678a1"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"rid\": \"\",\n    \"lastSuccessTime\": 0,\n    \"result\": {\n        \"status\": {\n            \"module\": \"\",\n            \"code\": 0,\n            \"eventName\": \"SUCCESS\",\n            \"cause\": \"NONE\",\n            \"description\": \"NONE\",\n            \"posDescription\": \"NONE\",\n            \"solution\": \"NONE\"\n        }\n    },\n    \"info\": {\n        \"version\": \"v0.11.0-rc6\"\n    }\n}"
						}
					]
				},
				{
					"name": "REPLACE DEVICE",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"ADD DEVICE\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-Request-Id",
								"value": "{{$guid}}"
							},
							{
								"key": "ts",
								"value": "{{$timestamp}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{basic_auth}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"param\": {\n        \"device\":\"unvme-ns-4\"\n    }\n}"
						},
						"url": {
							"raw": "http://{{host}}/api/ibofos/v1/array/{{arrayName}}/replace",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"ibofos",
								"v1",
								"array",
								"{{arrayName}}",
								"replace"
							]
						}
					},
					"response": [
						{
							"name": "Fail - 2321",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "X-Request-Id",
										"value": "{{$guid}}"
									},
									{
										"key": "ts",
										"value": "{{$timestamp}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{basic_auth}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"param\": {\n        \"array\": \"{{arrayName}}\",\n        \"spare\": \"{{deviceName4}}\"\n    }\n}"
								},
								"url": {
									"raw": "http://{{host}}/api/ibofos/v1/devices",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"ibofos",
										"v1",
										"devices"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Thu, 20 Aug 2020 07:59:11 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "281"
								},
								{
									"key": "X-Request-Id",
									"value": "51cb31eb-35a1-4bf7-87e9-b33bcef2b066"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"rid\": \"518fec1e-c61b-4478-ae0b-c15ab756cf83\",\n    \"lastSuccessTime\": 1656017388,\n    \"result\": {\n        \"status\": {\n            \"module\": \"MBR Manager\",\n            \"code\": 2321,\n            \"level\": \"ERROR\",\n            \"description\": \"mbr device already in array\",\n            \"posDescription\": \"failed to add unvme-ns-3 to POSArray\"\n        }\n    },\n    \"info\": {\n        \"version\": \"v0.11.0-rc5\"\n    }\n}"
						},
						{
							"name": "Success",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "X-Request-Id",
										"value": "{{$guid}}"
									},
									{
										"key": "ts",
										"value": "{{$timestamp}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{basic_auth}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"param\": {\n        \"array\": \"{{arrayName}}\",\n        \"spare\": \"{{deviceName4}}\"\n    }\n}"
								},
								"url": {
									"raw": "http://{{host}}/api/ibofos/v1/devices",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"ibofos",
										"v1",
										"devices"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Thu, 20 Aug 2020 08:00:36 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "268"
								},
								{
									"key": "X-Request-Id",
									"value": "5794b792-4506-4323-a51c-59a26c064d8e"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"rid\": \"ee659f68-01a9-4e7b-928a-98c1cc08204f\",\n    \"lastSuccessTime\": 1656017435,\n    \"result\": {\n        \"status\": {\n            \"module\": \"COMMON\",\n            \"code\": 0,\n            \"level\": \"INFO\",\n            \"description\": \"Success\",\n            \"posDescription\": \"unvme-ns-9 has been added to POSArray successfully\"\n        }\n    },\n    \"info\": {\n        \"version\": \"v0.11.0-rc5\"\n    }\n}"
						}
					]
				},
				{
					"name": "DELETE ARRAY",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"DELETE ARRAY\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "X-Request-Id",
								"value": "{{$guid}}"
							},
							{
								"key": "ts",
								"value": "{{$timestamp}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{basic_auth}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://{{host}}/api/ibofos/v1/array/{{arrayName}}",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"ibofos",
								"v1",
								"array",
								"{{arrayName}}"
							]
						}
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "X-Request-Id",
										"value": "{{$guid}}"
									},
									{
										"key": "ts",
										"value": "{{$timestamp}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{basic_auth}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "http://{{host}}/api/ibofos/v1/array/{{arrayName}}",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"ibofos",
										"v1",
										"array",
										"{{arrayName}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Thu, 20 Aug 2020 08:01:28 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "259"
								},
								{
									"key": "X-Request-Id",
									"value": "f0755583-73c9-436c-9e10-c53d36418fa9"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"rid\": \"\",\n    \"lastSuccessTime\": 0,\n    \"result\": {\n        \"status\": {\n            \"module\": \"\",\n            \"code\": 0,\n            \"eventName\": \"SUCCESS\",\n            \"cause\": \"NONE\",\n            \"description\": \"NONE\",\n            \"posDescription\": \"NONE\",\n            \"solution\": \"NONE\"\n        }\n    },\n    \"info\": {\n        \"version\": \"v0.11.0-rc6\"\n    }\n}"
						},
						{
							"name": "Fail - 2551",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "X-Request-Id",
										"value": "{{$guid}}"
									},
									{
										"key": "ts",
										"value": "{{$timestamp}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{basic_auth}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "http://{{host}}/api/ibofos/v1/array/{{arrayName}}",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"ibofos",
										"v1",
										"array",
										"{{arrayName}}"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Wed, 19 Aug 2020 07:00:57 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "289"
								},
								{
									"key": "X-Request-Id",
									"value": "6426aca5-2d99-496a-9341-7e1e962dcceb"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"rid\": \"dcdaa564-536e-479c-a150-d150badba1fc\",\n    \"lastSuccessTime\": 1656005583,\n    \"result\": {\n        \"status\": {\n            \"module\": \"Array\",\n            \"code\": 2551,\n            \"level\": \"INFO\",\n            \"description\": \"Array State : Exist Normal\",\n            \"posDescription\": \"failed to delete POSArray1\"\n        }\n    },\n    \"info\": {\n        \"version\": \"v0.11.0-rc5\"\n    }\n}"
						}
					]
				},
				{
					"name": "REBUILD ARRAY",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"ADD DEVICE\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-Request-Id",
								"value": "{{$guid}}"
							},
							{
								"key": "ts",
								"value": "{{$timestamp}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{basic_auth}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://{{host}}/api/ibofos/v1/array/{{arrayName}}/rebuild",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"ibofos",
								"v1",
								"array",
								"{{arrayName}}",
								"rebuild"
							]
						}
					},
					"response": [
						{
							"name": "Fail - 2824",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "X-Request-Id",
										"value": "{{$guid}}"
									},
									{
										"key": "ts",
										"value": "{{$timestamp}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{basic_auth}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "http://{{host}}/api/ibofos/v1/devices",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"ibofos",
										"v1",
										"devices"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Thu, 20 Aug 2020 07:59:11 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "281"
								},
								{
									"key": "X-Request-Id",
									"value": "51cb31eb-35a1-4bf7-87e9-b33bcef2b066"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"rid\": \"180630b7-49a3-11ed-ba93-3cecef280244\",\n    \"lastSuccessTime\": 0,\n    \"result\": {\n        \"status\": {\n            \"module\": \"\",\n            \"code\": 2824,\n            \"eventName\": \"REBUILD_ARRAY_IS_NORMAL\",\n            \"cause\": \"There is no device to rebuild in array.\",\n            \"description\": \"Failed to rebuild an array.\",\n            \"posDescription\": \"Failed to rebuild an array.\",\n            \"solution\": \"Please check the state of array.\"\n        }\n    },\n    \"info\": {\n        \"version\": \"v0.12.0-rc0\"\n    }\n}"
						},
						{
							"name": "Success",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "X-Request-Id",
										"value": "{{$guid}}"
									},
									{
										"key": "ts",
										"value": "{{$timestamp}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{basic_auth}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "http://{{host}}/api/ibofos/v1/devices",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"ibofos",
										"v1",
										"devices"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Thu, 20 Aug 2020 08:00:36 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "268"
								},
								{
									"key": "X-Request-Id",
									"value": "5794b792-4506-4323-a51c-59a26c064d8e"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"rid\": \"\",\n    \"lastSuccessTime\": 0,\n    \"result\": {\n        \"status\": {\n            \"module\": \"\",\n            \"code\": 0,\n            \"eventName\": \"SUCCESS\",\n            \"cause\": \"NONE\",\n            \"description\": \"NONE\",\n            \"posDescription\": \"NONE\",\n            \"solution\": \"NONE\"\n        }\n    },\n    \"info\": {\n        \"version\": \"v0.11.0-rc6\"\n    }\n}"
						}
					]
				}
			]
		},
		{
			"name": "Volume",
			"item": [
				{
					"name": "CREATE VOLUME",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"CREATE VOLUME\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-Request-Id",
								"value": "{{$guid}}"
							},
							{
								"key": "ts",
								"value": "{{$timestamp}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{basic_auth}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"param\": {\n        \"array\": \"{{arrayName}}\",\n        \"name\": \"vol01\",\n        \"size\": 5242880,\n        \"maxbw\": 0,\n        \"maxiops\": 0,\n        \"subnqn\": \"nqn.2019-04.pos:subsystem1\"\n    }\n}"
						},
						"url": {
							"raw": "http://{{host}}/api/ibofos/v1/volumes",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"ibofos",
								"v1",
								"volumes"
							]
						}
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "X-Request-Id",
										"value": "{{$guid}}"
									},
									{
										"key": "ts",
										"value": "{{$timestamp}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{basic_auth}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"param\": {\n        \"array\": \"{{arrayName}}\",\n        \"name\": \"vol01\",\n        \"size\": 4194304,\n        \"maxbw\": 0,\n        \"maxiops\": 0\n    }\n}"
								},
								"url": {
									"raw": "http://{{host}}/api/ibofos/v1/volumes",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"ibofos",
										"v1",
										"volumes"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Thu, 20 Aug 2020 08:04:44 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "274"
								},
								{
									"key": "X-Request-Id",
									"value": "bde37273-adc4-459f-883b-cf5ea2542134"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"rid\": \"9907a1a1-67f2-11ed-9c8f-0cc47a3a4522\",\n    \"lastSuccessTime\": 0,\n    \"result\": {\n        \"status\": {\n            \"module\": \"\",\n            \"code\": 0,\n            \"eventName\": \"SUCCESS\",\n            \"cause\": \"NONE\",\n            \"description\": \"NONE\",\n            \"posDescription\": \"NONE\",\n            \"solution\": \"NONE\"\n        },\n        \"data\": {}\n    },\n    \"info\": {\n        \"version\": \"v0.12.0-rc3\"\n    }\n}"
						},
						{
							"name": "Fail - 1810",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "X-Request-Id",
										"value": "{{$guid}}"
									},
									{
										"key": "ts",
										"value": "{{$timestamp}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{basic_auth}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"param\": {\n        \"array\": \"{{arrayName}}\",\n        \"name\": \"vol01\",\n        \"size\": 4194304,\n        \"maxbw\": 0,\n        \"maxiops\": 0\n    }\n}"
								},
								"url": {
									"raw": "http://{{host}}/api/ibofos/v1/volumes",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"ibofos",
										"v1",
										"volumes"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Thu, 20 Aug 2020 08:05:44 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "403"
								},
								{
									"key": "X-Request-Id",
									"value": "1ce8c5c3-d2f7-4ac8-9e59-2478605ef11d"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"rid\": \"e8a4a62f-727c-4c58-ad3c-141d42f6c2a0\",\n    \"lastSuccessTime\": 1656017567,\n    \"result\": {\n        \"status\": {\n            \"module\": \"VolumeManager\",\n            \"code\": 2022,\n            \"level\": \"WARN\",\n            \"description\": \"Volume name is duplicated\",\n            \"posDescription\": \"failed to create vol01\",\n            \"problem\": \"A volume with a duplicate name already exists\",\n            \"solution\": \"Enter a different volume name\"\n        }\n    },\n    \"info\": {\n        \"version\": \"v0.11.0-rc5\"\n    }\n}"
						}
					]
				},
				{
					"name": "CREATE VOLUME (Multi)",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"CREATE VOLUME\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-Request-Id",
								"value": "{{$guid}}"
							},
							{
								"key": "ts",
								"value": "{{$timestamp}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{basic_auth}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"param\": {\n        \"array\": \"{{arrayName}}\",\n        \"name\": \"volume-\",\n        \"size\": 5242880,\n        \"maxbw\": 0,\n        \"maxiops\": 0,\n        \"totalcount\": 2,\n        \"stoponerror\": false,\n        \"namesuffix\": 0,\n        \"mountall\": true,\n        \"subnqn\": \"nqn.2019-04.pos:subsystem1\"\n    }\n}"
						},
						"url": {
							"raw": "http://{{host}}/api/ibofos/v1/volumes",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"ibofos",
								"v1",
								"volumes"
							]
						}
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "X-Request-Id",
										"value": "{{$guid}}"
									},
									{
										"key": "ts",
										"value": "{{$timestamp}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{basic_auth}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"param\": {\n        \"array\": \"{{arrayName}}\",\n        \"name\": \"vol01\",\n        \"size\": 4194304,\n        \"maxbw\": 0,\n        \"maxiops\": 0\n    }\n}"
								},
								"url": {
									"raw": "http://{{host}}/api/ibofos/v1/volumes",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"ibofos",
										"v1",
										"volumes"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Thu, 20 Aug 2020 08:04:44 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "274"
								},
								{
									"key": "X-Request-Id",
									"value": "bde37273-adc4-459f-883b-cf5ea2542134"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"rid\": \"\",\n    \"lastSuccessTime\": 0,\n    \"result\": {\n        \"status\": {\n            \"module\": \"D-Agent\",\n            \"code\": 10202,\n            \"level\": \"INFO\",\n            \"description\": \"Request Accepted and passed to POS\",\n            \"posDescription\": \"\"\n        }\n    }\n}"
						}
					]
				},
				{
					"name": "LIST VOLUME",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"LIST VOLUME\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "X-Request-Id",
								"value": "{{$guid}}"
							},
							{
								"key": "ts",
								"value": "{{$timestamp}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{basic_auth}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://{{host}}/api/ibofos/v1/volumelist/{{arrayName}}",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"ibofos",
								"v1",
								"volumelist",
								"{{arrayName}}"
							]
						}
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "X-Request-Id",
										"value": "{{$guid}}"
									},
									{
										"key": "ts",
										"value": "{{$timestamp}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{basic_auth}}"
									}
								],
								"url": {
									"raw": "http://{{host}}/api/ibofos/v1/volumelist/{{arrayName}}",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"ibofos",
										"v1",
										"volumelist",
										"{{arrayName}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Server",
									"value": "nginx/1.14.0 (Ubuntu)"
								},
								{
									"key": "Date",
									"value": "Wed, 20 Apr 2022 04:45:07 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "390"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "X-Request-Id",
									"value": "7128c77b-9751-4413-8657-2e634c735de2"
								}
							],
							"cookie": [],
							"body": "{\n    \"rid\": \"ee3a0da3-b289-45b6-8bda-85fdb8985add\",\n    \"lastSuccessTime\": 1663523892,\n    \"result\": {\n        \"status\": {\n            \"module\": \"\",\n            \"code\": 0,\n            \"description\": \"list of volumes in POSArray\",\n            \"posDescription\": \"list of volumes in POSArray\",\n            \"solution\": \"NONE\"\n        },\n        \"data\": {\n            \"volumes\": [\n                {\n                    \"index\": 0,\n                    \"maxbw\": 0,\n                    \"maxiops\": 0,\n                    \"minbw\": 0,\n                    \"miniops\": 0,\n                    \"name\": \"pvc-2c7aaefd-e2d5-4851-b3f1-2d93a93ea8f0\",\n                    \"status\": \"Unmounted\",\n                    \"total\": 5368709120,\n                    \"uuid\": \"55175127-2284-48b5-b67a-14d6273677d4\"\n                },\n                {\n                    \"index\": 1,\n                    \"maxbw\": 0,\n                    \"maxiops\": 0,\n                    \"minbw\": 0,\n                    \"miniops\": 0,\n                    \"name\": \"vol01\",\n                    \"status\": \"Unmounted\",\n                    \"total\": 5242880,\n                    \"uuid\": \"ce6242a6-1231-4fbf-b96a-bb3d05e9c21a\"\n                }\n            ]\n        }\n    },\n    \"info\": {\n        \"version\": \"v0.11.0-rc6\"\n    }\n}"
						}
					]
				},
				{
					"name": "VOLUME INFO",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"LIST VOLUME\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "X-Request-Id",
								"value": "{{$guid}}"
							},
							{
								"key": "ts",
								"value": "{{$timestamp}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{basic_auth}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://{{host}}/api/ibofos/v1/array/{{arrayName}}/volume/{{volumeName1}}",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"ibofos",
								"v1",
								"array",
								"{{arrayName}}",
								"volume",
								"{{volumeName1}}"
							]
						}
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "X-Request-Id",
										"value": "{{$guid}}"
									},
									{
										"key": "ts",
										"value": "{{$timestamp}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{basic_auth}}"
									}
								],
								"url": {
									"raw": "http://{{host}}/api/ibofos/v1/array/{{arrayName}}/volume/{{volumeName1}}",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"ibofos",
										"v1",
										"array",
										"{{arrayName}}",
										"volume",
										"{{volumeName1}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Server",
									"value": "nginx/1.14.0 (Ubuntu)"
								},
								{
									"key": "Date",
									"value": "Thu, 02 Jun 2022 18:46:01 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "497"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "X-Request-Id",
									"value": "e9a222ce-ec7b-4c2d-86a3-17253f189279"
								}
							],
							"cookie": [],
							"body": "{\n    \"rid\": \"2e6c6a11-2398-4140-8bc3-63d414e1dc01\",\n    \"lastSuccessTime\": 1668852800,\n    \"result\": {\n        \"status\": {\n            \"module\": \"\",\n            \"code\": 0,\n            \"description\": \"information of volume: vol01 of array: POSArray\",\n            \"posDescription\": \"information of volume: vol01 of array: POSArray\",\n            \"solution\": \"NONE\"\n        },\n        \"data\": {\n            \"array_name\": \"POSArray\",\n            \"maxbw\": 0,\n            \"maxiops\": 0,\n            \"minbw\": 0,\n            \"miniops\": 0,\n            \"name\": \"vol01\",\n            \"status\": \"Unmounted\",\n            \"subnqn\": \"\",\n            \"total\": 5242880,\n            \"uuid\": \"b5a5d712-797c-4917-8e63-f02de850d139\"\n        }\n    },\n    \"info\": {\n        \"version\": \"v0.12.0-rc3\"\n    }\n}"
						}
					]
				},
				{
					"name": "QOS CREATE VOLUME POLICIES",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"CREATE VOLUME\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-Request-Id",
								"value": "{{$guid}}"
							},
							{
								"key": "ts",
								"value": "{{$timestamp}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{basic_auth}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"param\": {\r\n        \"array\": \"{{arrayName}}\",\r\n\t\t\"vol\":[{\"volumeName\":\"volume-0\"}],\r\n        \"maxbw\": 400,\r\n        \"maxiops\":300,\r\n        \"miniops\":10\r\n    }\r\n}"
						},
						"url": {
							"raw": "http://{{host}}/api/ibofos/v1/qos",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"ibofos",
								"v1",
								"qos"
							]
						}
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "X-Request-Id",
										"value": "{{$guid}}"
									},
									{
										"key": "ts",
										"value": "{{$timestamp}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{basic_auth}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"param\": {\r\n        \"array\": \"{{arrayName}}\",\r\n\t\t\"vol\":[{\"volumeName\":\"vol\"}],\r\n        \"maxbw\": 8096000,\r\n        \"maxiops\": 30,\r\n        \"miniops\": 10\r\n    }\r\n}"
								},
								"url": {
									"raw": "http://{{host}}/api/ibofos/v1/qos",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"ibofos",
										"v1",
										"qos"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Server",
									"value": "nginx/1.14.0 (Ubuntu)"
								},
								{
									"key": "Date",
									"value": "Wed, 20 Apr 2022 04:49:53 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "240"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "X-Request-Id",
									"value": "492ff554-4305-4bff-8694-d1f117b75f4a"
								}
							],
							"cookie": [],
							"body": "{\n    \"rid\": \"b357cc24-d88c-4d9a-9d68-f4b470d14adf\",\n    \"lastSuccessTime\": 1656017706,\n    \"result\": {\n        \"status\": {\n            \"module\": \"COMMON\",\n            \"code\": 0,\n            \"level\": \"INFO\",\n            \"description\": \"Success\",\n            \"posDescription\": \"Volume Qos Policy Create\"\n        }\n    },\n    \"info\": {\n        \"version\": \"v0.11.0-rc5\"\n    }\n}"
						}
					]
				},
				{
					"name": "QOS RESET VOLUME POLICIES",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"CREATE VOLUME\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-Request-Id",
								"value": "{{$guid}}"
							},
							{
								"key": "ts",
								"value": "{{$timestamp}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{basic_auth}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"param\": {\r\n        \"array\": \"{{arrayName}}\",\r\n\t\t\"vol\":[{\"volumeName\":\"volume-0\"}]\r\n    }\r\n}"
						},
						"url": {
							"raw": "http://{{host}}/api/ibofos/v1/qos/reset",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"ibofos",
								"v1",
								"qos",
								"reset"
							]
						}
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "X-Request-Id",
										"value": "{{$guid}}"
									},
									{
										"key": "ts",
										"value": "{{$timestamp}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{basic_auth}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"param\": {\r\n        \"array\": \"{{arrayName}}\",\r\n\t\t\"vol\":[{\"volumeName\":\"vol\"}]\r\n    }\r\n}"
								},
								"url": {
									"raw": "http://{{host}}/api/ibofos/v1/qos/reset",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"ibofos",
										"v1",
										"qos",
										"reset"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Server",
									"value": "nginx/1.14.0 (Ubuntu)"
								},
								{
									"key": "Date",
									"value": "Wed, 20 Apr 2022 04:50:48 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "239"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "X-Request-Id",
									"value": "4826af58-2408-4ea5-8769-2aee3f58c373"
								}
							],
							"cookie": [],
							"body": "{\n    \"rid\": \"32510b68-a89c-4342-9f63-a60e6069a36a\",\n    \"lastSuccessTime\": 1656017756,\n    \"result\": {\n        \"status\": {\n            \"module\": \"COMMON\",\n            \"code\": 0,\n            \"level\": \"INFO\",\n            \"description\": \"Success\",\n            \"posDescription\": \"Volume Qos Policy Reset\"\n        }\n    },\n    \"info\": {\n        \"version\": \"v0.11.0-rc5\"\n    }\n}"
						}
					]
				},
				{
					"name": "QOS LIST VOLUME POLICIES",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"CREATE VOLUME\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-Request-Id",
								"value": "{{$guid}}"
							},
							{
								"key": "ts",
								"value": "{{$timestamp}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{basic_auth}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"param\": {\r\n        \"array\": \"{{arrayName}}\",\r\n\t\t\"vol\":[{\"volumeName\":\"volume-0\"}]\r\n    }\r\n}"
						},
						"url": {
							"raw": "http://{{host}}/api/ibofos/v1/qos/policies",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"ibofos",
								"v1",
								"qos",
								"policies"
							]
						}
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "X-Request-Id",
										"value": "{{$guid}}"
									},
									{
										"key": "ts",
										"value": "{{$timestamp}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{basic_auth}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"param\": {\r\n        \"array\": \"{{arrayName}}\",\r\n\t\t\"vol\":[{\"volumeName\":\"vol\"}]\r\n    }\r\n}"
								},
								"url": {
									"raw": "http://107.99.41.212/api/ibofos/v1/qos/policies",
									"protocol": "http",
									"host": [
										"107",
										"99",
										"41",
										"212"
									],
									"path": [
										"api",
										"ibofos",
										"v1",
										"qos",
										"policies"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Server",
									"value": "nginx/1.14.0 (Ubuntu)"
								},
								{
									"key": "Date",
									"value": "Wed, 20 Apr 2022 04:52:05 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "474"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "X-Request-Id",
									"value": "d9001461-e6b6-479b-a2e2-ee6707fb04a3"
								}
							],
							"cookie": [],
							"body": "{\n    \"rid\": \"\",\n    \"lastSuccessTime\": 0,\n    \"result\": {\n        \"status\": {\n            \"module\": \"\",\n            \"code\": 0,\n            \"eventName\": \"SUCCESS\",\n            \"cause\": \"none\",\n            \"description\": \"none\",\n            \"posDescription\": \"none\",\n            \"solution\": \"none\"\n        },\n        \"data\": {\n            \"qosresult\": [\n                {\n                    \"arrayName\": [\n                        {\n                            \"ArrayName\": \"pos\"\n                        }\n                    ],\n                    \"rebuildPolicy\": [\n                        {\n                            \"rebuild\": \"high\"\n                        }\n                    ],\n                    \"volumePolicies\": [\n                        {\n                            \"maxbw\": \"0\",\n                            \"maxiops\": \"0\",\n                            \"minBwGuarantee\": \"No\",\n                            \"minIopsGuarantee\": \"No\",\n                            \"minbw\": \"0\",\n                            \"miniops\": \"0\",\n                            \"name\": \"vol0\"\n                        }\n                    ]\n                }\n            ]\n        }\n    },\n    \"info\": {\n        \"version\": \"v1.0.0-rc1\"\n    }\n}"
						}
					]
				},
				{
					"name": "RENAME VOLUME",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"RENAME VOLUME\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "X-Request-Id",
								"value": "{{$guid}}"
							},
							{
								"key": "ts",
								"value": "{{$timestamp}}"
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{basic_auth}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"param\": {\n        \"array\": \"{{arrayName}}\",\n        \"newname\": \"newvol01\"\n    }\n}"
						},
						"url": {
							"raw": "http://{{host}}/api/ibofos/v1/volumes/{{volumeName1}}",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"ibofos",
								"v1",
								"volumes",
								"{{volumeName1}}"
							]
						}
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "X-Request-Id",
										"value": "{{$guid}}"
									},
									{
										"key": "ts",
										"value": "{{$timestamp}}"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{basic_auth}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"param\": {\n        \"array\": \"{{arrayName}}\",\n        \"newname\": \"newvol01\"\n    }\n}"
								},
								"url": {
									"raw": "http://{{host}}/api/ibofos/v1/volumes/{{volumeName1}}",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"ibofos",
										"v1",
										"volumes",
										"{{volumeName1}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Thu, 20 Aug 2020 08:06:01 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "274"
								},
								{
									"key": "X-Request-Id",
									"value": "d30a0f60-fceb-4652-889e-3dc4b374ac83"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"rid\": \"3b256c5a-345b-470b-83e0-d2b6cb67edbc\",\n    \"lastSuccessTime\": 1663523956,\n    \"result\": {\n        \"status\": {\n            \"module\": \"\",\n            \"code\": 0,\n            \"description\": \"vol01 is renamed successfully to newvol01\",\n            \"posDescription\": \"vol01 is renamed successfully to newvol01\",\n            \"solution\": \"NONE\"\n        }\n    },\n    \"info\": {\n        \"version\": \"v0.11.0-rc6\"\n    }\n}"
						},
						{
							"name": "Fail - 2010",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "X-Request-Id",
										"value": "{{$guid}}"
									},
									{
										"key": "ts",
										"value": "{{$timestamp}}"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{basic_auth}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"param\": {\n        \"array\": \"{{arrayName}}\",\n        \"newname\": \"newvol01\"\n    }\n}"
								},
								"url": {
									"raw": "http://{{host}}/api/ibofos/v1/volumes/{{volumeName1}}",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"ibofos",
										"v1",
										"volumes",
										"{{volumeName1}}"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Thu, 20 Aug 2020 08:06:12 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "481"
								},
								{
									"key": "X-Request-Id",
									"value": "1530cced-60d1-4623-b670-8854a089eb79"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"rid\": \"d7dc1e69-4d3a-4962-8c75-63066ddde98d\",\n    \"lastSuccessTime\": 1656017797,\n    \"result\": {\n        \"status\": {\n            \"module\": \"VolumeManager\",\n            \"code\": 2010,\n            \"level\": \"WARN\",\n            \"description\": \"The requested volume does not exist\",\n            \"posDescription\": \"failed to rename vol01 to newvol01(code:2010)\",\n            \"problem\": \"The volume with the requested volume name or volume ID does not exist\",\n            \"solution\": \"Enter the correct volume name or volume ID after checking the volume list\"\n        }\n    },\n    \"info\": {\n        \"version\": \"v0.11.0-rc5\"\n    }\n}"
						}
					]
				},
				{
					"name": "MOUNT VOLUME",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"MOUNT VOULUME\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-Request-Id",
								"value": "{{$guid}}"
							},
							{
								"key": "ts",
								"value": "{{$timestamp}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{basic_auth}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"param\": {\n        \"array\": \"{{arrayName}}\", \n        \"name\": \"vol01\",\n        \"subnqn\": \"nqn.2019-04.pos:subsystem1\"\n    }\n}"
						},
						"url": {
							"raw": "http://{{host}}/api/ibofos/v1/volumes/{{volumeName1}}/mount",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"ibofos",
								"v1",
								"volumes",
								"{{volumeName1}}",
								"mount"
							]
						}
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "X-Request-Id",
										"value": "{{$guid}}"
									},
									{
										"key": "ts",
										"value": "{{$timestamp}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{basic_auth}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"param\": {\n        \"array\": \"{{arrayName}}\", \n        \"name\": \"vol01\",\n        \"subnqn\": \"nqn.2019-04.pos:subsystem1\"\n    }\n}"
								},
								"url": {
									"raw": "http://{{host}}/api/ibofos/v1/volumes/{{volumeName1}}/mount",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"ibofos",
										"v1",
										"volumes",
										"{{volumeName1}}",
										"mount"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Thu, 20 Aug 2020 08:06:40 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "274"
								},
								{
									"key": "X-Request-Id",
									"value": "964d431e-ac03-4920-b94a-86c33c1ecacc"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"rid\": \"046c359e-d958-4ed2-b060-7a1805d39c54\",\n    \"lastSuccessTime\": 1668852494,\n    \"result\": {\n        \"status\": {\n            \"module\": \"\",\n            \"code\": 0,\n            \"description\": \"vol01 has been mounted successfully.\",\n            \"posDescription\": \"vol01 has been mounted successfully.\",\n            \"solution\": \"NONE\"\n        }\n    },\n    \"info\": {\n        \"version\": \"v0.12.0-rc3\"\n    }\n}"
						},
						{
							"name": "Fail - 1843",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "X-Request-Id",
										"value": "{{$guid}}"
									},
									{
										"key": "ts",
										"value": "{{$timestamp}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{basic_auth}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"param\": {\n        \"array\": \"{{arrayName}}\", \n        \"name\": \"vol01\",\n        \"subnqn\": \"nqn.2019-04.pos:subsystem1\"\n    }\n}"
								},
								"url": {
									"raw": "http://{{host}}/api/ibofos/v1/volumes/{{volumeName1}}/mount",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"ibofos",
										"v1",
										"volumes",
										"{{volumeName1}}",
										"mount"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Thu, 20 Aug 2020 08:06:48 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "388"
								},
								{
									"key": "X-Request-Id",
									"value": "83447d87-e5a9-4f5a-bee8-a857cb8b9aa3"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"rid\": \"f5543c1b-806b-4a3f-bfe9-e65e5f7c8941\",\n    \"lastSuccessTime\": 1668852854,\n    \"result\": {\n        \"status\": {\n            \"module\": \"\",\n            \"code\": 1843,\n            \"description\": \"failed to mount vol01\",\n            \"posDescription\": \"failed to mount vol01\",\n            \"solution\": \"Check the status of the volume in the volume list.\"\n        }\n    },\n    \"info\": {\n        \"version\": \"v0.12.0-rc3\"\n    }\n}"
						}
					]
				},
				{
					"name": "MOUNT VOLUME WITH SUBSYSTEM",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"MOUNT VOULUME\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-Request-Id",
								"value": "{{$guid}}"
							},
							{
								"key": "ts",
								"value": "{{$timestamp}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{basic_auth}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"param\": {\n        \"array\": \"{{arrayName}}\",\n        \"subnqn\": \"nqn.2019-04.pos:subsystem9\",\n        \"transport_type\":\"tcp\",\n        \"target_address\":\"107.108.221.146\",\n        \"transport_service_id\":\"1158\"\n    }\n}"
						},
						"url": {
							"raw": "http://{{host}}/api/ibofos/v1/volumes/{{volumeName1}}/mount/subsystem",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"ibofos",
								"v1",
								"volumes",
								"{{volumeName1}}",
								"mount",
								"subsystem"
							]
						}
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "X-Request-Id",
										"value": "{{$guid}}"
									},
									{
										"key": "ts",
										"value": "{{$timestamp}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{basic_auth}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"param\": {\n        \"array\": \"{{arrayName}}\",\n        \"subnqn\": \"nqn.2019-04.pos:subsystem9\",\n        \"transport_type\":\"tcp\",\n        \"target_address\":\"107.108.221.146\",\n        \"transport_service_id\":\"1158\"\n    }\n}"
								},
								"url": {
									"raw": "http://{{host}}/api/ibofos/v1/volumes/{{volumeName1}}/mount/subsystem",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"ibofos",
										"v1",
										"volumes",
										"{{volumeName1}}",
										"mount",
										"subsystem"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Server",
									"value": "nginx/1.14.0 (Ubuntu)"
								},
								{
									"key": "Date",
									"value": "Wed, 20 Apr 2022 04:59:08 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "511"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "X-Request-Id",
									"value": "04c6e43f-ece2-4e69-9b7e-974238ab1cee"
								}
							],
							"cookie": [],
							"body": "{\n    \"rid\": \"\",\n    \"lastSuccessTime\": 0,\n    \"result\": {\n        \"status\": {\n            \"module\": \"COMMON\",\n            \"code\": 0,\n            \"level\": \"INFO\",\n            \"description\": \"Success\",\n            \"posDescription\": \"\",\n            \"errorInfo\": {\n                \"errorCode\": 0,\n                \"errorResponses\": [\n                    {\n                        \"code\": 0,\n                        \"description\": \"Subsystem ( nqn.2019-04.pos:subsystem9 ) has been created.\",\n                        \"id\": \"SubSystemAuto\"\n                    },\n                    {\n                        \"code\": 0,\n                        \"description\": \"Address ( 107.108.83.97 ) added to Subsystem ( nqn.2019-04.pos:subsystem9 )\",\n                        \"id\": \"AddListener\"\n                    },\n                    {\n                        \"code\": 0,\n                        \"description\": \"vol01 is mounted successfully\",\n                        \"id\": \"MountVolume\"\n                    }\n                ]\n            }\n        }\n    }\n}"
						},
						{
							"name": "Fail",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "X-Request-Id",
										"value": "{{$guid}}"
									},
									{
										"key": "ts",
										"value": "{{$timestamp}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{basic_auth}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"param\": {\n        \"array\": \"{{arrayName}}\",\n        \"subnqn\": \"nqn.2019-04.pos:subsystem9\",\n        \"transport_type\":\"tcp\",\n        \"target_address\":\"107.108.221.146\",\n        \"transport_service_id\":\"1158\"\n    }\n}"
								},
								"url": {
									"raw": "http://{{host}}/api/ibofos/v1/volumes/vol/mount/subsystem",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"ibofos",
										"v1",
										"volumes",
										"vol",
										"mount",
										"subsystem"
									]
								}
							},
							"status": "Multi-Status",
							"code": 207,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Server",
									"value": "nginx/1.14.0 (Ubuntu)"
								},
								{
									"key": "Date",
									"value": "Wed, 20 Apr 2022 04:55:45 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "496"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "X-Request-Id",
									"value": "67aedb24-82ee-4e6b-bbf6-c53bf80ff30f"
								}
							],
							"cookie": [],
							"body": "{\n    \"rid\": \"\",\n    \"lastSuccessTime\": 0,\n    \"result\": {\n        \"status\": {\n            \"module\": \"COMMON\",\n            \"code\": 0,\n            \"level\": \"INFO\",\n            \"description\": \"Success\",\n            \"posDescription\": \"\",\n            \"errorInfo\": {\n                \"errorCode\": 1,\n                \"errorResponses\": [\n                    {\n                        \"code\": 0,\n                        \"description\": \"Subsystem ( nqn.2019-04.pos:subsystem9 ) has been created.\",\n                        \"id\": \"SubSystemAuto\"\n                    },\n                    {\n                        \"code\": 0,\n                        \"description\": \"Address ( 107.108.221.146 ) added to Subsystem ( nqn.2019-04.pos:subsystem9 )\",\n                        \"id\": \"AddListener\"\n                    },\n                    {\n                        \"code\": 2070,\n                        \"description\": \"failed to mount vol(code:2070)\",\n                        \"id\": \"MountVolume\"\n                    }\n                ]\n            }\n        }\n    }\n}"
						}
					]
				},
				{
					"name": "UNMOUNT VOLUME",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"UNMOUNT VOLUME\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "X-Request-Id",
								"value": "{{$guid}}"
							},
							{
								"key": "ts",
								"value": "{{$timestamp}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{basic_auth}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"param\": {\n        \"array\": \"{{arrayName}}\"\n    }\n}"
						},
						"url": {
							"raw": "http://{{host}}/api/ibofos/v1/volumes/{{volumeName1}}/mount",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"ibofos",
								"v1",
								"volumes",
								"{{volumeName1}}",
								"mount"
							]
						}
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "X-Request-Id",
										"value": "{{$guid}}"
									},
									{
										"key": "ts",
										"value": "{{$timestamp}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{basic_auth}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"param\": {\n        \"array\": \"{{arrayName}}\"\n    }\n}"
								},
								"url": {
									"raw": "http://{{host}}/api/ibofos/v1/volumes/{{volumeName1}}/mount",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"ibofos",
										"v1",
										"volumes",
										"{{volumeName1}}",
										"mount"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Thu, 20 Aug 2020 08:06:59 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "274"
								},
								{
									"key": "X-Request-Id",
									"value": "2f6400e3-6a6f-4028-aea0-c5daa8a4f1d5"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"rid\": \"2ca1b19e-67f2-11ed-9c8f-0cc47a3a4522\",\n    \"lastSuccessTime\": 0,\n    \"result\": {\n        \"status\": {\n            \"module\": \"\",\n            \"code\": 0,\n            \"eventName\": \"SUCCESS\",\n            \"cause\": \"NONE\",\n            \"description\": \"NONE\",\n            \"posDescription\": \"NONE\",\n            \"solution\": \"NONE\"\n        }\n    },\n    \"info\": {\n        \"version\": \"v0.12.0-rc3\"\n    }\n}"
						},
						{
							"name": "Fail - 1807",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "X-Request-Id",
										"value": "{{$guid}}"
									},
									{
										"key": "ts",
										"value": "{{$timestamp}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{basic_auth}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"param\": {\n        \"array\": \"{{arrayName}}\"\n    }\n}"
								},
								"url": {
									"raw": "http://{{host}}/api/ibofos/v1/volumes/{{volumeName1}}/mount",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"ibofos",
										"v1",
										"volumes",
										"{{volumeName1}}",
										"mount"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Thu, 20 Aug 2020 08:07:07 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "394"
								},
								{
									"key": "X-Request-Id",
									"value": "157e6963-e935-4c2e-8649-fa5cd1d8b846"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"rid\": \"5324b2a5-67f2-11ed-9c8f-0cc47a3a4522\",\n    \"lastSuccessTime\": 0,\n    \"result\": {\n        \"status\": {\n            \"module\": \"\",\n            \"code\": 1807,\n            \"eventName\": \"VOL_NOT_FOUND\",\n            \"cause\": \"The volume of the requested name or ID could not be found\",\n            \"description\": \"Failed to find a volume.\",\n            \"posDescription\": \"Failed to find a volume.\",\n            \"solution\": \"Please check volume name or ID and try again\"\n        }\n    },\n    \"info\": {\n        \"version\": \"v0.12.0-rc3\"\n    }\n}"
						}
					]
				},
				{
					"name": "DELETE VOLUME",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"DELETE VOLUME\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "X-Request-Id",
								"value": "{{$guid}}"
							},
							{
								"key": "ts",
								"value": "{{$timestamp}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{basic_auth}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"param\": {\n        \"array\": \"{{arrayName}}\"\n    }\n}\n"
						},
						"url": {
							"raw": "http://{{host}}/api/ibofos/v1/volumes/{{volumeName1}}",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"ibofos",
								"v1",
								"volumes",
								"{{volumeName1}}"
							]
						}
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "X-Request-Id",
										"value": "{{$guid}}"
									},
									{
										"key": "ts",
										"value": "{{$timestamp}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{basic_auth}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"param\": {\n        \"array\": \"{{arrayName}}\"\n    }\n}"
								},
								"url": {
									"raw": "http://{{host}}/api/ibofos/v1/volumes/{{volumeName1}}",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"ibofos",
										"v1",
										"volumes",
										"{{volumeName1}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Thu, 20 Aug 2020 08:07:18 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "274"
								},
								{
									"key": "X-Request-Id",
									"value": "805514bf-445b-40b6-9b84-b33a6d07e409"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"rid\": \"1b657da2-67f3-11ed-9c8f-0cc47a3a4522\",\n    \"lastSuccessTime\": 0,\n    \"result\": {\n        \"status\": {\n            \"module\": \"\",\n            \"code\": 0,\n            \"eventName\": \"SUCCESS\",\n            \"cause\": \"NONE\",\n            \"description\": \"NONE\",\n            \"posDescription\": \"NONE\",\n            \"solution\": \"NONE\"\n        }\n    },\n    \"info\": {\n        \"version\": \"v0.12.0-rc3\"\n    }\n}"
						},
						{
							"name": "Fail - 1807",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "X-Request-Id",
										"value": "{{$guid}}"
									},
									{
										"key": "ts",
										"value": "{{$timestamp}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{basic_auth}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"param\": {\n        \"array\": \"{{arrayName}}\"\n    }\n}"
								},
								"url": {
									"raw": "http://{{host}}/api/ibofos/v1/volumes/{{volumeName1}}",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"ibofos",
										"v1",
										"volumes",
										"{{volumeName1}}"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Thu, 20 Aug 2020 08:07:28 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "481"
								},
								{
									"key": "X-Request-Id",
									"value": "9139d5fa-f93f-4ecb-a9f4-5fe9cc553a9d"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"rid\": \"81ba7e14-67f2-11ed-9c8f-0cc47a3a4522\",\n    \"lastSuccessTime\": 0,\n    \"result\": {\n        \"status\": {\n            \"module\": \"\",\n            \"code\": 1807,\n            \"eventName\": \"VOL_NOT_FOUND\",\n            \"cause\": \"The volume of the requested name or ID could not be found\",\n            \"description\": \"Failed to find a volume.\",\n            \"posDescription\": \"Failed to find a volume.\",\n            \"solution\": \"Please check volume name or ID and try again\"\n        }\n    },\n    \"info\": {\n        \"version\": \"v0.12.0-rc3\"\n    }\n}"
						}
					]
				}
			]
		},
		{
			"name": "Subsystem",
			"item": [
				{
					"name": "CREATE TRANSPORT",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"CREATE VOLUME\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-Request-Id",
								"value": "{{$guid}}"
							},
							{
								"key": "ts",
								"value": "{{$timestamp}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{basic_auth}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"param\": {\r\n        \"transportType\": \"tcp\",\r\n        \"bufCacheSize\": 64,\r\n        \"numSharedBuf\": 4096\r\n    }\r\n}"
						},
						"url": {
							"raw": "http://{{host}}/api/ibofos/v1/transport",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"ibofos",
								"v1",
								"transport"
							]
						}
					},
					"response": [
						{
							"name": "Fail",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "X-Request-Id",
										"value": "{{$guid}}"
									},
									{
										"key": "ts",
										"value": "{{$timestamp}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{basic_auth}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"param\": {\r\n        \"transport_type\": \"tcp\",\r\n        \"buf_cache_size\": 64,\r\n        \"num_shared_buf\": 4096\r\n    }\r\n}"
								},
								"url": {
									"raw": "http://{{host}}/api/ibofos/v1/transport",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"ibofos",
										"v1",
										"transport"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Server",
									"value": "nginx/1.14.0 (Ubuntu)"
								},
								{
									"key": "Date",
									"value": "Wed, 20 Apr 2022 05:04:02 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "270"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "X-Request-Id",
									"value": "c74be7e6-9a1e-414f-babb-cf7ea968b46c"
								}
							],
							"cookie": [],
							"body": "{\n    \"rid\": \"c792c11b-6a62-45a4-9aff-65606b7914d5\",\n    \"lastSuccessTime\": 1656018278,\n    \"result\": {\n        \"status\": {\n            \"module\": \"\",\n            \"code\": -32603,\n            \"description\": \"\",\n            \"posDescription\": \"Failed to create transport. INTERNAL_ERROR: : Transport type 'tcp' already exists\"\n        }\n    },\n    \"info\": {\n        \"version\": \"v0.11.0-rc5\"\n    }\n}"
						}
					]
				},
				{
					"name": "LIST TRANSPORT",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"CREATE VOLUME\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "X-Request-Id",
								"value": "{{$guid}}"
							},
							{
								"key": "ts",
								"value": "{{$timestamp}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{basic_auth}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://{{host}}/api/ibofos/v1/transports",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"ibofos",
								"v1",
								"transports"
							]
						}
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "X-Request-Id",
										"value": "{{$guid}}"
									},
									{
										"key": "ts",
										"value": "{{$timestamp}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{basic_auth}}"
									}
								],
								"url": {
									"raw": "http://{{host}}/api/ibofos/v1/transports",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"ibofos",
										"v1",
										"transports"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Server",
									"value": "nginx/1.14.0 (Ubuntu)"
								},
								{
									"key": "Date",
									"value": "Thu, 06 Apr 2023 07:35:03 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "452"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "X-Request-Id",
									"value": "38f8b329-3769-4561-8aee-150264a38eb8"
								}
							],
							"cookie": [],
							"body": "{\n    \"rid\": \"8b3f0afc-d44d-11ed-8e49-3cecef280244\",\n    \"lastSuccessTime\": 0,\n    \"result\": {\n        \"status\": {\n            \"module\": \"\",\n            \"code\": 0,\n            \"eventName\": \"SUCCESS\",\n            \"cause\": \"none\",\n            \"description\": \"none\",\n            \"posDescription\": \"none\",\n            \"solution\": \"none\"\n        },\n        \"data\": {\n            \"transportlist\": [\n                {\n                    \"abortTimeoutSec\": 1,\n                    \"bufCacheSize\": 64,\n                    \"inCapsuleDataSize\": 4096,\n                    \"ioUnitSize\": 131072,\n                    \"maxIoQpairsPerCtrlr\": 127,\n                    \"maxIoSize\": 131072,\n                    \"maxQueueDepth\": 128,\n                    \"numSharedBuf\": 4096,\n                    \"type\": \"TCP\"\n                }\n            ]\n        }\n    },\n    \"info\": {\n        \"version\": \"v0.12.0-rc9\"\n    }\n}"
						}
					]
				},
				{
					"name": "CREATE SUBSYSTEM",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"CREATE VOLUME\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-Request-Id",
								"value": "{{$guid}}"
							},
							{
								"key": "ts",
								"value": "{{$timestamp}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{basic_auth}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"param\": {\r\n        \"nqn\":\"nqn.2019-04.pos:subsystem11\",\r\n        \"serialNumber\": \"POS0000000003\",\r\n        \"modelNumber\": \"IBOF_VOLUME_EEEXTENSION\",\r\n        \"maxNamespaces\": 256,\r\n        \"allowAnyHost\": true,\r\n        \"anaReporting\":false\r\n    }\r\n}"
						},
						"url": {
							"raw": "http://{{host}}/api/ibofos/v1/subsystem",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"ibofos",
								"v1",
								"subsystem"
							]
						}
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "X-Request-Id",
										"value": "{{$guid}}"
									},
									{
										"key": "ts",
										"value": "{{$timestamp}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{basic_auth}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"param\": {\r\n        \"nqn\":\"nqn.2019-04.pos:subsystem11\",\r\n        \"serialNumber\": \"POS0000000003\",\r\n        \"modelNumber\": \"IBOF_VOLUME_EEEXTENSION\",\r\n        \"maxNamespaces\": 256,\r\n        \"allowAnyHost\": true,\r\n        \"anaReporting\":false\r\n    }\r\n}"
								},
								"url": {
									"raw": "http://{{host}}/api/ibofos/v1/subsystem",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"ibofos",
										"v1",
										"subsystem"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Server",
									"value": "nginx/1.14.0 (Ubuntu)"
								},
								{
									"key": "Date",
									"value": "Wed, 20 Apr 2022 05:05:07 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "274"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "X-Request-Id",
									"value": "43cec6b0-9cf5-47a8-a2c3-de20cd508418"
								}
							],
							"cookie": [],
							"body": "{\n    \"rid\": \"953fb07a-67f3-11ed-9c8f-0cc47a3a4522\",\n    \"lastSuccessTime\": 0,\n    \"result\": {\n        \"status\": {\n            \"module\": \"\",\n            \"code\": 0,\n            \"eventName\": \"SUCCESS\",\n            \"cause\": \"NONE\",\n            \"description\": \"NONE\",\n            \"posDescription\": \"NONE\",\n            \"solution\": \"NONE\"\n        }\n    },\n    \"info\": {\n        \"version\": \"v0.12.0-rc3\"\n    }\n}"
						}
					]
				},
				{
					"name": "SUBSYSTEM INFO",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"CREATE VOLUME\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-Request-Id",
								"value": "{{$guid}}"
							},
							{
								"key": "ts",
								"value": "{{$timestamp}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{basic_auth}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"param\": {\r\n        \"subnqn\": \"nqn.2019-04.pos:subsystem1\"\r\n    }\r\n}"
						},
						"url": {
							"raw": "http://{{host}}/api/ibofos/v1/subsysteminfo",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"ibofos",
								"v1",
								"subsysteminfo"
							]
						}
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "X-Request-Id",
										"value": "{{$guid}}"
									},
									{
										"key": "ts",
										"value": "{{$timestamp}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{basic_auth}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"param\": {\r\n        \"subnqn\": \"nqn.2019-04.pos:subsystem1\"\r\n    }\r\n}"
								},
								"url": {
									"raw": "http://{{host}}/api/ibofos/v1/subsysteminfo",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"ibofos",
										"v1",
										"subsysteminfo"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Server",
									"value": "nginx/1.14.0 (Ubuntu)"
								},
								{
									"key": "Date",
									"value": "Sat, 19 Nov 2022 10:20:23 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "431"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "X-Request-Id",
									"value": "115102cd-1e74-47cf-8ad0-97bc839d8708"
								}
							],
							"cookie": [],
							"body": "{\n    \"rid\": \"c7115735-67f3-11ed-9c8f-0cc47a3a4522\",\n    \"lastSuccessTime\": 0,\n    \"result\": {\n        \"status\": {\n            \"module\": \"\",\n            \"code\": 0,\n            \"eventName\": \"SUCCESS\",\n            \"cause\": \"NONE\",\n            \"description\": \"NONE\",\n            \"posDescription\": \"NONE\",\n            \"solution\": \"NONE\"\n        },\n        \"data\": {\n            \"subsystemlist\": [\n                {\n                    \"allowAnyHost\": 1,\n                    \"maxNamespaces\": 256,\n                    \"modelNumber\": \"IBOF_VOLUME_EEEXTENSION\",\n                    \"nqn\": \"nqn.2019-04.pos:subsystem1\",\n                    \"serialNumber\": \"POS0000000003\",\n                    \"subtype\": \"NVMe\"\n                }\n            ]\n        }\n    },\n    \"info\": {\n        \"version\": \"v0.12.0-rc3\"\n    }\n}"
						}
					]
				},
				{
					"name": "ADD LISTENER",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"CREATE VOLUME\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-Request-Id",
								"value": "{{$guid}}"
							},
							{
								"key": "ts",
								"value": "{{$timestamp}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{basic_auth}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"param\": {\r\n        \"subnqn\": \"nqn.2019-04.pos:subsystem11\",\r\n        \"transportType\": \"TCP\",\r\n        \"targetAddress\": \"127.0.0.1\",\r\n        \"transportServiceId\": \"1158\"\r\n    }\r\n}"
						},
						"url": {
							"raw": "http://{{host}}/api/ibofos/v1/listener",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"ibofos",
								"v1",
								"listener"
							]
						}
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "X-Request-Id",
										"value": "{{$guid}}"
									},
									{
										"key": "ts",
										"value": "{{$timestamp}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{basic_auth}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"param\": {\r\n        \"name\":\"nqn.2019-04.pos:subsystem1\",\r\n        \"transport_type\":\"tcp\",\r\n        \"target_address\":\"107.108.221.146\",\r\n        \"transport_service_id\":\"1158\"\r\n    }\r\n}"
								},
								"url": {
									"raw": "http://{{host}}/api/ibofos/v1/listener",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"ibofos",
										"v1",
										"listener"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Server",
									"value": "nginx/1.14.0 (Ubuntu)"
								},
								{
									"key": "Date",
									"value": "Wed, 20 Apr 2022 05:07:27 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "293"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "X-Request-Id",
									"value": "d21d51b0-7dd9-414f-83bb-cf7bf6a37bfc"
								}
							],
							"cookie": [],
							"body": "{\n    \"rid\": \"8b2723ba-3650-11ed-85c9-3cecef280244\",\n    \"lastSuccessTime\": 0,\n    \"result\": {\n        \"status\": {\n            \"module\": \"\",\n            \"code\": 0,\n            \"eventName\": \"SUCCESS\",\n            \"cause\": \"NONE\",\n            \"description\": \"NONE\",\n            \"posDescription\": \"NONE\",\n            \"solution\": \"NONE\"\n        }\n    },\n    \"info\": {\n        \"version\": \"v0.11.0-rc6\"\n    }\n}"
						}
					]
				},
				{
					"name": "LIST SUBSYSTEM",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"CREATE VOLUME\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "X-Request-Id",
								"value": "{{$guid}}"
							},
							{
								"key": "ts",
								"value": "{{$timestamp}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{basic_auth}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://{{host}}/api/ibofos/v1/subsystem",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"ibofos",
								"v1",
								"subsystem"
							]
						}
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "X-Request-Id",
										"value": "{{$guid}}"
									},
									{
										"key": "ts",
										"value": "{{$timestamp}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{basic_auth}}"
									}
								],
								"url": {
									"raw": "http://{{host}}/api/ibofos/v1/subsystem",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"ibofos",
										"v1",
										"subsystem"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Server",
									"value": "nginx/1.14.0 (Ubuntu)"
								},
								{
									"key": "Date",
									"value": "Wed, 05 Apr 2023 03:58:31 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "1109"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "X-Request-Id",
									"value": "9d500a43-f2b9-4893-b1a5-97b0d9956dd3"
								}
							],
							"cookie": [],
							"body": "{\n    \"rid\": \"2129d7f6-d366-11ed-92d1-3cecef280244\",\n    \"lastSuccessTime\": 0,\n    \"result\": {\n        \"status\": {\n            \"module\": \"\",\n            \"code\": 0,\n            \"eventName\": \"SUCCESS\",\n            \"cause\": \"none\",\n            \"description\": \"none\",\n            \"posDescription\": \"none\",\n            \"solution\": \"none\"\n        },\n        \"data\": {\n            \"subsystemlist\": [\n                {\n                    \"allowAnyHost\": 1,\n                    \"nqn\": \"nqn.2014-08.org.nvmexpress.discovery\",\n                    \"subtype\": \"Discovery\"\n                },\n                {\n                    \"allowAnyHost\": 1,\n                    \"listenAddresses\": [\n                        {\n                            \"addressFamily\": \"IPv4\",\n                            \"targetAddress\": \"127.0.0.1\",\n                            \"transportServiceId\": \"1158\",\n                            \"transportType\": \"TCP\",\n                            \"uuid\": \"478ec8bf-72d7-4c70-8be0-cfa9229ae228\"\n                        }\n                    ],\n                    \"maxNamespaces\": 256,\n                    \"modelNumber\": \"IBOF_VOLUME_EEEXTENSION\",\n                    \"nqn\": \"nqn.2019-04.pos:subsystem1\",\n                    \"serialNumber\": \"POS0000000003\",\n                    \"subtype\": \"NVMe\",\n                    \"uuid\": \"c684752a-3bd1-4e85-b76f-8e60b00627b2\"\n                },\n                {\n                    \"allowAnyHost\": 1,\n                    \"listenAddresses\": [\n                        {\n                            \"addressFamily\": \"IPv4\",\n                            \"targetAddress\": \"127.0.0.1\",\n                            \"transportServiceId\": \"1158\",\n                            \"transportType\": \"TCP\",\n                            \"uuid\": \"606bd395-98a9-4ebb-84e0-bebe799a11c8\"\n                        }\n                    ],\n                    \"maxNamespaces\": 256,\n                    \"modelNumber\": \"IBOF_VOLUME_EEEXTENSION\",\n                    \"nqn\": \"nqn.2019-04.pos:subsystem2\",\n                    \"serialNumber\": \"POS0000000003\",\n                    \"subtype\": \"NVMe\",\n                    \"uuid\": \"dc479fff-35b5-4a5d-a1df-f35dc162e737\"\n                }\n            ]\n        }\n    },\n    \"info\": {\n        \"version\": \"v0.12.0-rc9\"\n    }\n}"
						}
					]
				},
				{
					"name": "GET LISTENER INFO",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"CREATE VOLUME\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-Request-Id",
								"value": "{{$guid}}"
							},
							{
								"key": "ts",
								"value": "{{$timestamp}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{basic_auth}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"param\": {\r\n        \"subnqn\": \"nqn.2019-04.pos:subsystem1\"\r\n    }\r\n}"
						},
						"url": {
							"raw": "http://{{host}}/api/ibofos/v1/subsystem/listener",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"ibofos",
								"v1",
								"subsystem",
								"listener"
							]
						}
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "X-Request-Id",
										"value": "{{$guid}}"
									},
									{
										"key": "ts",
										"value": "{{$timestamp}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{basic_auth}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"param\": {\r\n        \"subnqn\": \"nqn.2019-04.pos:subsystem1\"\r\n    }\r\n}"
								},
								"url": {
									"raw": "http://{{host}}/api/ibofos/v1/subsystem/listener",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"ibofos",
										"v1",
										"subsystem",
										"listener"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Server",
									"value": "nginx/1.14.0 (Ubuntu)"
								},
								{
									"key": "Date",
									"value": "Thu, 06 Apr 2023 07:30:35 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "397"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "X-Request-Id",
									"value": "67dfadd6-5e90-4abc-841b-0647710da10e"
								}
							],
							"cookie": [],
							"body": "{\n    \"rid\": \"420e763d-e001-11ed-b032-3cecef280244\",\n    \"lastSuccessTime\": 0,\n    \"result\": {\n        \"status\": {\n            \"module\": \"\",\n            \"code\": 0,\n            \"eventName\": \"SUCCESS\",\n            \"cause\": \"none\",\n            \"description\": \"none\",\n            \"posDescription\": \"none\",\n            \"solution\": \"none\"\n        },\n        \"data\": {\n            \"listenerlist\": [\n                {\n                    \"address\": {\n                        \"adrfam\": \"IPv4\",\n                        \"traddr\": \"127.0.0.1\",\n                        \"trsvcid\": \"1158\",\n                        \"trtype\": \"TCP\",\n                        \"uuid\": \"915dadfd-dd74-4948-b14a-52c4b4d262a0\"\n                    }\n                }\n            ]\n        }\n    },\n    \"info\": {\n        \"version\": \"v1.0.0-rc1\"\n    }\n}"
						}
					]
				},
				{
					"name": "DELETE LISTENER",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"CREATE VOLUME\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "X-Request-Id",
								"value": "{{$guid}}"
							},
							{
								"key": "ts",
								"value": "{{$timestamp}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{basic_auth}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"param\": {\r\n        \"subnqn\": \"nqn.2019-04.pos:subsystem10\"\r\n    }\r\n}"
						},
						"url": {
							"raw": "http://{{host}}/api/ibofos/v1/subsystem",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"ibofos",
								"v1",
								"subsystem"
							]
						}
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "X-Request-Id",
										"value": "{{$guid}}"
									},
									{
										"key": "ts",
										"value": "{{$timestamp}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{basic_auth}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "\r\n{\r\n    \"param\": {\r\n        \"subnqn\": \"nqn.2019-04.pos:subsystem1\",\r\n        \"transportType\": \"TCP\",\r\n        \"targetAddress\": \"127.0.0.1\",\r\n        \"transportServiceId\": \"1158\"\r\n    }\r\n}\r\n"
								},
								"url": {
									"raw": "http://{{host}}/api/ibofos/v1/listener",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"ibofos",
										"v1",
										"listener"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Server",
									"value": "nginx/1.14.0 (Ubuntu)"
								},
								{
									"key": "Date",
									"value": "Thu, 06 Apr 2023 07:33:14 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "242"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "X-Request-Id",
									"value": "f533e93b-750d-473b-a8b7-61a13bc5f1de"
								}
							],
							"cookie": [],
							"body": "{\n    \"rid\": \"4a79a005-d44d-11ed-8e49-3cecef280244\",\n    \"lastSuccessTime\": 0,\n    \"result\": {\n        \"status\": {\n            \"module\": \"\",\n            \"code\": 0,\n            \"eventName\": \"SUCCESS\",\n            \"cause\": \"none\",\n            \"description\": \"none\",\n            \"posDescription\": \"none\",\n            \"solution\": \"none\"\n        }\n    },\n    \"info\": {\n        \"version\": \"v0.12.0-rc9\"\n    }\n}"
						}
					]
				},
				{
					"name": "DELETE SUBSYSTEM",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"CREATE VOLUME\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "X-Request-Id",
								"value": "{{$guid}}"
							},
							{
								"key": "ts",
								"value": "{{$timestamp}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{basic_auth}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"param\": {\r\n        \"subnqn\": \"nqn.2019-04.pos:subsystem10\"\r\n    }\r\n}"
						},
						"url": {
							"raw": "http://{{host}}/api/ibofos/v1/subsystem",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"ibofos",
								"v1",
								"subsystem"
							]
						}
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "X-Request-Id",
										"value": "{{$guid}}"
									},
									{
										"key": "ts",
										"value": "{{$timestamp}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{basic_auth}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"param\": {\r\n        \"name\": \"nqn.2019-04.pos:subsystem1\"\r\n    }\r\n}"
								},
								"url": {
									"raw": "http://{{host}}/api/ibofos/v1/subsystem",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"ibofos",
										"v1",
										"subsystem"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Server",
									"value": "nginx/1.14.0 (Ubuntu)"
								},
								{
									"key": "Date",
									"value": "Wed, 20 Apr 2022 05:09:14 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "273"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "X-Request-Id",
									"value": "d0ce17ae-1016-4c42-9c56-1f5f1fe59768"
								}
							],
							"cookie": [],
							"body": "{\n    \"rid\": \"cd796066-377b-11ed-8c02-3cecef280244\",\n    \"lastSuccessTime\": 0,\n    \"result\": {\n        \"status\": {\n            \"module\": \"\",\n            \"code\": 0,\n            \"eventName\": \"SUCCESS\",\n            \"cause\": \"NONE\",\n            \"description\": \"NONE\",\n            \"posDescription\": \"NONE\",\n            \"solution\": \"NONE\"\n        }\n    },\n    \"info\": {\n        \"version\": \"v0.11.0-rc6\"\n    }\n}"
						}
					]
				}
			]
		},
		{
			"name": "Developer",
			"item": [
				{
					"name": "RESET MBR",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"LIST ARRAY DEVICE\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "X-Request-Id",
								"value": "{{$guid}}"
							},
							{
								"key": "ts",
								"value": "{{$timestamp}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{basic_auth}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://{{host}}/api/ibofos/v1/arrays/reset",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"ibofos",
								"v1",
								"arrays",
								"reset"
							]
						}
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "X-Request-Id",
										"value": "{{$guid}}"
									},
									{
										"key": "ts",
										"value": "{{$timestamp}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{basic_auth}}"
									}
								],
								"url": {
									"raw": "http://{{host}}/mtool/api/ibofos/v1/array/device",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"path": [
										"mtool",
										"api",
										"ibofos",
										"v1",
										"array",
										"device"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "X-Request-Id",
									"value": "6e787e27-1964-44da-bcdf-b5f44ffbd1a3"
								},
								{
									"key": "Date",
									"value": "Fri, 08 May 2020 06:51:22 GMT"
								},
								{
									"key": "Content-Length",
									"value": "437"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"rid\": \"cd796066-377b-11ed-8c02-3cecef280244\",\n    \"lastSuccessTime\": 0,\n    \"result\": {\n        \"status\": {\n            \"module\": \"\",\n            \"code\": 0,\n            \"eventName\": \"SUCCESS\",\n            \"cause\": \"NONE\",\n            \"description\": \"NONE\",\n            \"posDescription\": \"NONE\",\n            \"solution\": \"NONE\"\n        }\n    },\n    \"info\": {\n        \"version\": \"v0.11.0-rc6\"\n    }\n}"
						}
					]
				},
				{
					"name": "UPDATE EVENT WRR",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"LIST DEVICE\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-Request-Id",
								"value": "{{$guid}}"
							},
							{
								"key": "ts",
								"value": "{{$timestamp}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{basic_auth}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"param\": {\r\n        \"name\": \"flush\",\r\n        \"weight\": 1\r\n    }\r\n}"
						},
						"url": {
							"raw": "http://{{host}}/api/ibofos/v1/devel/event-wrr/update",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"ibofos",
								"v1",
								"devel",
								"event-wrr",
								"update"
							]
						}
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "X-Request-Id",
										"value": "{{$guid}}"
									},
									{
										"key": "ts",
										"value": "{{$timestamp}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{basic_auth}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"param\": {\r\n        \"name\": \"flush\",\r\n        \"weight\": 1\r\n    }\r\n}"
								},
								"url": {
									"raw": "http://{{host}}/api/ibofos/v1/devel/event-wrr/update",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"ibofos",
										"v1",
										"devel",
										"event-wrr",
										"update"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Server",
									"value": "nginx/1.14.0 (Ubuntu)"
								},
								{
									"key": "Date",
									"value": "Tue, 19 Apr 2022 08:04:35 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "216"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "X-Request-Id",
									"value": "4a86bf3f-20b1-4b42-8ad5-c2b7d8f52f27"
								}
							],
							"cookie": [],
							"body": "{\n    \"rid\": \"cd796066-377b-11ed-8c02-3cecef280244\",\n    \"lastSuccessTime\": 0,\n    \"result\": {\n        \"status\": {\n            \"module\": \"\",\n            \"code\": 0,\n            \"eventName\": \"SUCCESS\",\n            \"cause\": \"NONE\",\n            \"description\": \"NONE\",\n            \"posDescription\": \"NONE\",\n            \"solution\": \"NONE\"\n        }\n    },\n    \"info\": {\n        \"version\": \"v0.11.0-rc6\"\n    }\n}"
						}
					]
				},
				{
					"name": "RESET EVENT WRR",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"LIST DEVICE\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-Request-Id",
								"value": "{{$guid}}"
							},
							{
								"key": "ts",
								"value": "{{$timestamp}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{basic_auth}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://{{host}}/api/ibofos/v1/devel/event-wrr/reset",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"ibofos",
								"v1",
								"devel",
								"event-wrr",
								"reset"
							]
						}
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "X-Request-Id",
										"value": "{{$guid}}"
									},
									{
										"key": "ts",
										"value": "{{$timestamp}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{basic_auth}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "http://{{host}}/api/ibofos/v1/devel/event-wrr/reset",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"ibofos",
										"v1",
										"devel",
										"event-wrr",
										"reset"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Server",
									"value": "nginx/1.14.0 (Ubuntu)"
								},
								{
									"key": "Date",
									"value": "Tue, 19 Apr 2022 08:04:52 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "216"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "X-Request-Id",
									"value": "e293a396-2e39-4500-893c-0a17635dcc5f"
								}
							],
							"cookie": [],
							"body": "{\n    \"rid\": \"cd796066-377b-11ed-8c02-3cecef280244\",\n    \"lastSuccessTime\": 0,\n    \"result\": {\n        \"status\": {\n            \"module\": \"\",\n            \"code\": 0,\n            \"eventName\": \"SUCCESS\",\n            \"cause\": \"NONE\",\n            \"description\": \"NONE\",\n            \"posDescription\": \"NONE\",\n            \"solution\": \"NONE\"\n        }\n    },\n    \"info\": {\n        \"version\": \"v0.11.0-rc6\"\n    }\n}"
						}
					]
				},
				{
					"name": "STOPREBUILDING",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"LIST DEVICE\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "X-Request-Id",
								"value": "{{$guid}}"
							},
							{
								"key": "ts",
								"value": "{{$timestamp}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{basic_auth}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://{{host}}/api/ibofos/v1/devel/{{arrayName}}/rebuild",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"ibofos",
								"v1",
								"devel",
								"{{arrayName}}",
								"rebuild"
							]
						}
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "X-Request-Id",
										"value": "{{$guid}}"
									},
									{
										"key": "ts",
										"value": "{{$timestamp}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{basic_auth}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "http://{{host}}/api/ibofos/v1/devel/{{arrayName}}/rebuild",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"ibofos",
										"v1",
										"devel",
										"{{arrayName}}",
										"rebuild"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Server",
									"value": "nginx/1.14.0 (Ubuntu)"
								},
								{
									"key": "Date",
									"value": "Tue, 19 Apr 2022 08:47:39 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "247"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "X-Request-Id",
									"value": "cfa88181-8b96-48c1-b473-2ca45da5b01e"
								}
							],
							"cookie": [],
							"body": "{\n    \"rid\": \"cd796066-377b-11ed-8c02-3cecef280244\",\n    \"lastSuccessTime\": 0,\n    \"result\": {\n        \"status\": {\n            \"module\": \"\",\n            \"code\": 0,\n            \"eventName\": \"SUCCESS\",\n            \"cause\": \"NONE\",\n            \"description\": \"NONE\",\n            \"posDescription\": \"NONE\",\n            \"solution\": \"NONE\"\n        }\n    },\n    \"info\": {\n        \"version\": \"v0.11.0-rc6\"\n    }\n}"
						}
					]
				}
			]
		},
		{
			"name": "Logger",
			"item": [
				{
					"name": "GET LOG INFO",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"LIST DEVICE\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "X-Request-Id",
								"value": "{{$guid}}"
							},
							{
								"key": "ts",
								"value": "{{$timestamp}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{basic_auth}}"
							}
						],
						"url": {
							"raw": "http://{{host}}/api/ibofos/v1/logger/info",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"ibofos",
								"v1",
								"logger",
								"info"
							]
						}
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "X-Request-Id",
										"value": "{{$guid}}"
									},
									{
										"key": "ts",
										"value": "{{$timestamp}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{basic_auth}}"
									}
								],
								"url": {
									"raw": "http://{{host}}/api/ibofos/v1/logger/info",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"ibofos",
										"v1",
										"logger",
										"info"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Server",
									"value": "nginx/1.14.0 (Ubuntu)"
								},
								{
									"key": "Date",
									"value": "Wed, 13 Apr 2022 11:06:14 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "428"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "X-Request-Id",
									"value": "7a405519-b7cb-4403-906b-8d876eaa9747"
								}
							],
							"cookie": [],
							"body": "{\n    \"rid\": \"e4aa4faf-377b-11ed-8c02-3cecef280244\",\n    \"lastSuccessTime\": 0,\n    \"result\": {\n        \"status\": {\n            \"module\": \"\",\n            \"code\": 0,\n            \"eventName\": \"SUCCESS\",\n            \"cause\": \"NONE\",\n            \"description\": \"NONE\",\n            \"posDescription\": \"NONE\",\n            \"solution\": \"NONE\"\n        },\n        \"data\": {\n            \"logfileRotationCount\": 20,\n            \"logfileSizeInMb\": \"50\",\n            \"majorLogPath\": \"/var/log/pos/pos_major.log\",\n            \"minAllowableLogLevel\": \"info\",\n            \"minorLogPath\": \"/var/log/pos/pos.log\"\n        }\n    },\n    \"info\": {\n        \"version\": \"v0.11.0-rc6\"\n    }\n}"
						}
					]
				},
				{
					"name": "SET LOG LEVEL",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"LIST DEVICE\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-Request-Id",
								"value": "{{$guid}}"
							},
							{
								"key": "ts",
								"value": "{{$timestamp}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{basic_auth}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"param\": {\r\n        \"level\": \"debug\"\r\n    }\r\n}"
						},
						"url": {
							"raw": "http://{{host}}/api/ibofos/v1/logger/level",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"ibofos",
								"v1",
								"logger",
								"level"
							]
						}
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "X-Request-Id",
										"value": "{{$guid}}"
									},
									{
										"key": "ts",
										"value": "{{$timestamp}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{basic_auth}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"param\": {\r\n        \"level\": \"info\"\r\n    }\r\n}"
								},
								"url": {
									"raw": "http://{{host}}/api/ibofos/v1/logger/level",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"ibofos",
										"v1",
										"logger",
										"level"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Server",
									"value": "nginx/1.14.0 (Ubuntu)"
								},
								{
									"key": "Date",
									"value": "Wed, 13 Apr 2022 11:07:25 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "237"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "X-Request-Id",
									"value": "0e3172f5-be18-4c36-b13b-02741784ce5a"
								}
							],
							"cookie": [],
							"body": "{\n    \"rid\": \"eaee709e-377b-11ed-8c02-3cecef280244\",\n    \"lastSuccessTime\": 0,\n    \"result\": {\n        \"status\": {\n            \"module\": \"\",\n            \"code\": 0,\n            \"eventName\": \"SUCCESS\",\n            \"cause\": \"NONE\",\n            \"description\": \"NONE\",\n            \"posDescription\": \"NONE\",\n            \"solution\": \"NONE\"\n        }\n    },\n    \"info\": {\n        \"version\": \"v0.11.0-rc6\"\n    }\n}"
						}
					]
				},
				{
					"name": "SET LOG PREFERENCE",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"LIST DEVICE\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-Request-Id",
								"value": "{{$guid}}"
							},
							{
								"key": "ts",
								"value": "{{$timestamp}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{basic_auth}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"param\": {\r\n        \"structuredLogging\": \"true\"\r\n    }\r\n}"
						},
						"url": {
							"raw": "http://{{host}}/api/ibofos/v1/logger/preference",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"ibofos",
								"v1",
								"logger",
								"preference"
							]
						}
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "X-Request-Id",
										"value": "{{$guid}}"
									},
									{
										"key": "ts",
										"value": "{{$timestamp}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{basic_auth}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"param\": {\r\n        \"structuredLogging\": \"true\"\r\n    }\r\n}"
								},
								"url": {
									"raw": "http://{{host}}/api/ibofos/v1/logger/preference",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"ibofos",
										"v1",
										"logger",
										"preference"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Server",
									"value": "nginx/1.14.0 (Ubuntu)"
								},
								{
									"key": "Date",
									"value": "Sat, 19 Nov 2022 10:22:50 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "242"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "X-Request-Id",
									"value": "69cce5a3-1913-49c0-940f-0eb0e886cbc2"
								}
							],
							"cookie": [],
							"body": "{\n    \"rid\": \"1eb016cb-67f4-11ed-9c8f-0cc47a3a4522\",\n    \"lastSuccessTime\": 0,\n    \"result\": {\n        \"status\": {\n            \"module\": \"\",\n            \"code\": 0,\n            \"eventName\": \"SUCCESS\",\n            \"cause\": \"NONE\",\n            \"description\": \"NONE\",\n            \"posDescription\": \"NONE\",\n            \"solution\": \"NONE\"\n        }\n    },\n    \"info\": {\n        \"version\": \"v0.12.0-rc3\"\n    }\n}"
						}
					]
				},
				{
					"name": "GET LOG LEVEL",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"LIST DEVICE\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "X-Request-Id",
								"value": "{{$guid}}"
							},
							{
								"key": "ts",
								"value": "{{$timestamp}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{basic_auth}}"
							}
						],
						"url": {
							"raw": "http://{{host}}/api/ibofos/v1/logger/level",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"ibofos",
								"v1",
								"logger",
								"level"
							]
						}
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "X-Request-Id",
										"value": "{{$guid}}"
									},
									{
										"key": "ts",
										"value": "{{$timestamp}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{basic_auth}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "http://{{host}}/api/ibofos/v1/logger/level",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"ibofos",
										"v1",
										"logger",
										"level"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Server",
									"value": "nginx/1.14.0 (Ubuntu)"
								},
								{
									"key": "Date",
									"value": "Wed, 13 Apr 2022 11:07:25 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "237"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "X-Request-Id",
									"value": "0e3172f5-be18-4c36-b13b-02741784ce5a"
								}
							],
							"cookie": [],
							"body": "{\n    \"rid\": \"f9b2d55f-377b-11ed-8c02-3cecef280244\",\n    \"lastSuccessTime\": 0,\n    \"result\": {\n        \"status\": {\n            \"module\": \"\",\n            \"code\": 0,\n            \"eventName\": \"SUCCESS\",\n            \"cause\": \"NONE\",\n            \"description\": \"NONE\",\n            \"posDescription\": \"NONE\",\n            \"solution\": \"NONE\"\n        },\n        \"data\": {\n            \"level\": \"debug\"\n        }\n    },\n    \"info\": {\n        \"version\": \"v0.11.0-rc6\"\n    }\n}"
						}
					]
				},
				{
					"name": "APPLY LOGGER FILTER",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"LIST DEVICE\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-Request-Id",
								"value": "{{$guid}}"
							},
							{
								"key": "ts",
								"value": "{{$timestamp}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{basic_auth}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://{{host}}/api/ibofos/v1/logger/filter",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"ibofos",
								"v1",
								"logger",
								"filter"
							]
						}
					},
					"response": [
						{
							"name": "Failure - No Filter File",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "X-Request-Id",
										"value": "{{$guid}}"
									},
									{
										"key": "ts",
										"value": "{{$timestamp}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{basic_auth}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "http://{{host}}/api/ibofos/v1/logger/filter",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"ibofos",
										"v1",
										"logger",
										"filter"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Server",
									"value": "nginx/1.14.0 (Ubuntu)"
								},
								{
									"key": "Date",
									"value": "Tue, 19 Apr 2022 04:16:03 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "267"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "X-Request-Id",
									"value": "2c96f80b-a996-42e6-81c5-f7baf3bd3292"
								}
							],
							"cookie": [],
							"body": "{\n    \"rid\": \"dd1a56c9-a040-4d7d-ae00-5cf09abafc4d\",\n    \"lastSuccessTime\": 1656018612,\n    \"result\": {\n        \"status\": {\n            \"module\": \"Logger\",\n            \"code\": 4581,\n            \"level\": \"WARN\",\n            \"description\": \"no filter file in the path\",\n            \"posDescription\": \"failed to apply filter(code:4581)\"\n        }\n    },\n    \"info\": {\n        \"version\": \"v0.11.0-rc5\"\n    }\n}"
						},
						{
							"name": "Success",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "X-Request-Id",
										"value": "{{$guid}}"
									},
									{
										"key": "ts",
										"value": "{{$timestamp}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{basic_auth}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "http://{{host}}/api/ibofos/v1/logger/filter",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"ibofos",
										"v1",
										"logger",
										"filter"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Server",
									"value": "nginx/1.14.0 (Ubuntu)"
								},
								{
									"key": "Date",
									"value": "Tue, 19 Apr 2022 04:16:03 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "267"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "X-Request-Id",
									"value": "2c96f80b-a996-42e6-81c5-f7baf3bd3292"
								}
							],
							"cookie": [],
							"body": "{\n    \"rid\": \"f9b2d55f-377b-11ed-8c02-3cecef280244\",\n    \"lastSuccessTime\": 0,\n    \"result\": {\n        \"status\": {\n            \"module\": \"\",\n            \"code\": 0,\n            \"eventName\": \"SUCCESS\",\n            \"cause\": \"NONE\",\n            \"description\": \"NONE\",\n            \"posDescription\": \"NONE\",\n            \"solution\": \"NONE\"\n        },\n        \"data\": {\n            \"level\": \"debug\"\n        }\n    },\n    \"info\": {\n        \"version\": \"v0.11.0-rc6\"\n    }\n}"
						}
					]
				}
			]
		},
		{
			"name": "Telemetry",
			"item": [
				{
					"name": "START TELEMETRY",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"LIST DEVICE\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-Request-Id",
								"value": "{{$guid}}"
							},
							{
								"key": "ts",
								"value": "{{$timestamp}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{basic_auth}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://{{host}}/api/ibofos/v1/telemetry",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"ibofos",
								"v1",
								"telemetry"
							]
						}
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "X-Request-Id",
										"value": "{{$guid}}"
									},
									{
										"key": "ts",
										"value": "{{$timestamp}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{basic_auth}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "http://{{host}}/api/ibofos/v1/devel/event-wrr/update",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"ibofos",
										"v1",
										"devel",
										"event-wrr",
										"update"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Server",
									"value": "nginx/1.14.0 (Ubuntu)"
								},
								{
									"key": "Date",
									"value": "Tue, 19 Apr 2022 08:04:35 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "216"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "X-Request-Id",
									"value": "4a86bf3f-20b1-4b42-8ad5-c2b7d8f52f27"
								}
							],
							"cookie": [],
							"body": "{\n    \"rid\": \"17dee8f4-377c-11ed-8c02-3cecef280244\",\n    \"lastSuccessTime\": 0,\n    \"result\": {\n        \"status\": {\n            \"module\": \"\",\n            \"code\": 0,\n            \"eventName\": \"SUCCESS\",\n            \"cause\": \"NONE\",\n            \"description\": \"NONE\",\n            \"posDescription\": \"NONE\",\n            \"solution\": \"NONE\"\n        }\n    },\n    \"info\": {\n        \"version\": \"v0.11.0-rc6\"\n    }\n}"
						}
					]
				},
				{
					"name": "STOP TELEMETRY",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"LIST DEVICE\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "X-Request-Id",
								"value": "{{$guid}}"
							},
							{
								"key": "ts",
								"value": "{{$timestamp}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{basic_auth}}"
							}
						],
						"url": {
							"raw": "http://{{host}}/api/ibofos/v1/telemetry",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"ibofos",
								"v1",
								"telemetry"
							]
						}
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "X-Request-Id",
										"value": "{{$guid}}"
									},
									{
										"key": "ts",
										"value": "{{$timestamp}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{basic_auth}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "http://{{host}}/api/ibofos/v1/devel/{{arrayName}}/rebuild",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"ibofos",
										"v1",
										"devel",
										"{{arrayName}}",
										"rebuild"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Server",
									"value": "nginx/1.14.0 (Ubuntu)"
								},
								{
									"key": "Date",
									"value": "Tue, 19 Apr 2022 08:47:39 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "247"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "X-Request-Id",
									"value": "cfa88181-8b96-48c1-b473-2ca45da5b01e"
								}
							],
							"cookie": [],
							"body": "{\n    \"rid\": \"1d7957e3-377c-11ed-8c02-3cecef280244\",\n    \"lastSuccessTime\": 0,\n    \"result\": {\n        \"status\": {\n            \"module\": \"\",\n            \"code\": 0,\n            \"eventName\": \"SUCCESS\",\n            \"cause\": \"NONE\",\n            \"description\": \"NONE\",\n            \"posDescription\": \"NONE\",\n            \"solution\": \"NONE\"\n        }\n    },\n    \"info\": {\n        \"version\": \"v0.11.0-rc6\"\n    }\n}"
						}
					]
				},
				{
					"name": "SET TELEMETRY PROPERTIES PATH",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"LIST DEVICE\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-Request-Id",
								"value": "{{$guid}}"
							},
							{
								"key": "ts",
								"value": "{{$timestamp}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{basic_auth}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"param\": {\r\n        \"publicationListPath\": \"/usr/local/dagent/telemetry_config.yaml\"\r\n    }\r\n}"
						},
						"url": {
							"raw": "http://{{host}}/api/ibofos/v1/telemetry/properties/path",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"ibofos",
								"v1",
								"telemetry",
								"properties",
								"path"
							]
						}
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "X-Request-Id",
										"value": "{{$guid}}"
									},
									{
										"key": "ts",
										"value": "{{$timestamp}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{basic_auth}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "http://{{host}}/api/ibofos/v1/devel/event-wrr/update",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"ibofos",
										"v1",
										"devel",
										"event-wrr",
										"update"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Server",
									"value": "nginx/1.14.0 (Ubuntu)"
								},
								{
									"key": "Date",
									"value": "Tue, 19 Apr 2022 08:04:35 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "216"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "X-Request-Id",
									"value": "4a86bf3f-20b1-4b42-8ad5-c2b7d8f52f27"
								}
							],
							"cookie": [],
							"body": "{\n    \"rid\": \"17dee8f4-377c-11ed-8c02-3cecef280244\",\n    \"lastSuccessTime\": 0,\n    \"result\": {\n        \"status\": {\n            \"module\": \"\",\n            \"code\": 0,\n            \"eventName\": \"SUCCESS\",\n            \"cause\": \"NONE\",\n            \"description\": \"NONE\",\n            \"posDescription\": \"NONE\",\n            \"solution\": \"NONE\"\n        }\n    },\n    \"info\": {\n        \"version\": \"v0.11.0-rc6\"\n    }\n}"
						}
					]
				},
				{
					"name": "GET TELEMETRY PROPERTIES PATH",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"LIST DEVICE\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "X-Request-Id",
								"value": "{{$guid}}"
							},
							{
								"key": "ts",
								"value": "{{$timestamp}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{basic_auth}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://{{host}}/api/ibofos/v1/telemetry/properties/path",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"ibofos",
								"v1",
								"telemetry",
								"properties",
								"path"
							]
						}
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "X-Request-Id",
										"value": "{{$guid}}"
									},
									{
										"key": "ts",
										"value": "{{$timestamp}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{basic_auth}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "http://{{host}}/api/ibofos/v1/devel/event-wrr/update",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"ibofos",
										"v1",
										"devel",
										"event-wrr",
										"update"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Server",
									"value": "nginx/1.14.0 (Ubuntu)"
								},
								{
									"key": "Date",
									"value": "Tue, 19 Apr 2022 08:04:35 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "216"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "X-Request-Id",
									"value": "4a86bf3f-20b1-4b42-8ad5-c2b7d8f52f27"
								}
							],
							"cookie": [],
							"body": "{\n    \"rid\": \"22d7d70e-3a9c-11ed-9d8b-3cecef280244\",\n    \"lastSuccessTime\": 0,\n    \"result\": {\n        \"status\": {\n            \"module\": \"\",\n            \"code\": 0,\n            \"eventName\": \"SUCCESS\",\n            \"cause\": \"NONE\",\n            \"description\": \"NONE\",\n            \"posDescription\": \"NONE\",\n            \"solution\": \"NONE\"\n        },\n        \"data\": {\n            \"publicationListPath\": \"/usr/local/dagent/telemetry_config.yaml\",\n            \"status\": true\n        }\n    },\n    \"info\": {\n        \"version\": \"v0.11.0-rc6\"\n    }\n}"
						}
					]
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					"tests[\"response code is 200\"] = responseCode.code === 200;"
				]
			}
		}
	],
	"variable": [
		{
			"key": "deviceName1",
			"value": "unvme-ns-0",
			"type": "string"
		},
		{
			"key": "deviceName2",
			"value": "unvme-ns-1",
			"type": "string"
		},
		{
			"key": "deviceName3",
			"value": "unvme-ns-2",
			"type": "string"
		},
		{
			"key": "deviceName4",
			"value": "unvme-ns-3",
			"type": "string"
		},
		{
			"key": "volumeName1",
			"value": "vol01",
			"type": "string"
		},
		{
			"key": "volumeName2",
			"value": "vol02",
			"type": "string"
		},
		{
			"key": "volumeNameNew1",
			"value": "volNew01",
			"type": "string"
		},
		{
			"key": "period",
			"value": "5m",
			"type": "string"
		},
		{
			"key": "arrayName",
			"value": "POSArray",
			"type": "string"
		},
		{
			"key": "volid01",
			"value": "1",
			"type": "string"
		},
		{
			"key": "deviceName5",
			"value": "unvme-ns-4",
			"type": "string"
		},
		{
			"key": "deviceName6",
			"value": "unvme-ns-5",
			"type": "string"
		},
		{
			"key": "deviceName7",
			"value": "unvme-ns-6",
			"type": "string"
		},
		{
			"key": "deviceName8",
			"value": "unvme-ns-7",
			"type": "string"
		},
		{
			"key": "subsystemName",
			"value": "nqn.2019-04.pos:subsystem1",
			"type": "default"
		}
	]
}