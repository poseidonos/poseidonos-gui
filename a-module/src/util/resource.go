// Code generated for package util by go-bindata DO NOT EDIT. (@generated)
// sources:
// ../resources/events.yaml
package util

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

// Name return file name
func (fi bindataFileInfo) Name() string {
	return fi.name
}

// Size return file size
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}

// Mode return file mode
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}

// Mode return file modify time
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}

// IsDir return file whether a directory
func (fi bindataFileInfo) IsDir() bool {
	return fi.mode&os.ModeDir != 0
}

// Sys return file is sys mode
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _ResourcesEventsYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xc4\x5d\xdd\x72\x1b\xb7\x92\xbe\xcf\x53\xa0\x7c\x71\x2a\xa9\x8a\xb2\x96\x48\xc6\x92\xef\x64\x59\x72\xe9\xac\x65\xb9\x24\xf9\x64\xf7\x2a\x05\xce\x34\x49\x44\x33\xc0\x04\xc0\x50\xe2\x49\xe5\x5d\xf8\x2c\x7c\xb2\x2d\x00\xf3\xc7\x01\x86\x6c\x82\xae\xb3\xb9\x8a\xc5\x19\x7c\xdd\x8d\x46\xff\xa1\x81\x39\x39\x39\xf9\xe1\x93\xa0\xd9\x7b\x72\xbd\x04\xae\x15\xf9\xc6\xd9\x8c\x25\x54\x33\xc1\x7f\xc8\x45\x5a\x66\xa0\xde\xff\x40\xc8\x09\xe1\x34\x87\xf7\xe4\xcd\xd5\xfd\xdd\xdd\xfd\x97\x37\x3f\x10\x42\x48\x22\x4a\xae\xdf\x93\x8b\x8b\x0b\xfb\x4f\x96\x3e\x6a\x2a\xf5\x7b\xf2\xb6\xfa\xe7\x35\x4f\xdf\x13\xd2\xfe\xce\x67\xe2\xbd\xfd\x3f\x33\x5e\x22\x52\xa8\x1f\x35\xff\x65\xb0\x84\xec\x3d\x79\x73\xfb\xe5\xe6\xfe\x4d\xf3\xd7\x1c\x94\xa2\x73\x03\xfc\x58\x26\x09\x28\xd5\xfe\x54\x48\x31\xcd\x20\x7f\x4f\xde\xb4\x7f\x53\x22\x2b\x0d\xe9\xd5\x1f\x5b\xaa\x3f\xdf\xf6\x48\xde\xa6\xf8\xf4\xed\xdb\x1e\xd1\xa7\x6f\x2f\xce\x07\xa9\x6e\x1e\xc7\x10\x9e\x64\x8c\x28\x90\x4b\x90\x84\x71\xa6\x19\xcd\xd8\xbf\x21\x3d\x88\x8f\x1e\xf6\x29\x1a\x9b\xc3\x0b\x49\x32\x06\x5c\x1f\x83\x77\xd6\xc7\x33\x70\x3e\x9a\x03\x22\x29\x53\x89\xe0\x1c\x12\x0d\xa9\x07\xea\x23\xfa\x70\x23\x1c\x9c\x84\x3f\x4b\x50\x9a\xe4\x6a\x4e\x24\x24\xcb\x28\xac\x31\x16\x4b\x15\x82\x2b\xb0\x60\x0a\xb8\x8e\x02\x9b\xe0\xc0\x80\xd3\x69\x06\xe4\x19\xa0\x38\xa1\x19\x5b\x42\x14\xd8\xaf\x7d\xb0\xdf\x2e\x1f\xbe\x20\xc0\xc8\x8c\xb2\x2c\x72\xe6\xde\x1d\xc4\xa0\x84\x52\xc1\x09\x4d\x53\x19\x05\x76\x7e\x10\x83\x2d\xd8\x66\x1d\xcf\xe1\xa9\xb7\xec\x07\x40\x5f\x13\x28\xcc\x10\x44\x70\x92\x88\x3c\xa7\x3c\x35\x38\xc6\x82\x31\x3e\x8f\x82\xf6\x56\xfd\xf5\xc3\xc3\xfd\x83\x8f\xed\xb8\x23\x5a\x18\x45\x8d\xe3\x12\xb9\xe0\xaf\xff\xe7\xf6\x29\x6a\x7c\x6f\x85\x87\xa5\x68\xc6\xef\x71\xb9\x13\xa5\x31\xf7\xb7\x1f\xc4\xcd\xfd\x23\x79\xd4\x54\x03\xb9\xa3\x9c\xce\x41\x6e\xd9\xff\xb3\xc6\xdc\xd7\x0e\xe0\xd4\x73\x00\x67\x3b\xdc\x56\xf3\x78\x87\x87\x8f\xd7\x1f\xbe\x7d\xf2\x99\x50\x86\x88\xdf\x8b\x72\x9a\x31\xb5\x80\x18\x55\x3f\xf5\x0d\x7e\x78\x3e\x2c\x14\x49\x04\xd7\xf0\xaa\x09\x4d\xd3\x28\x25\x3f\xc5\xda\xfb\x6d\x38\x09\xb9\x58\x46\x02\x22\x2d\xfe\x36\x60\x59\xa4\x34\xce\xc5\x9c\x62\xcd\x7e\x05\xb8\xa0\x7c\x1e\x07\xe4\xdb\x8b\x30\xd0\xd3\x87\x8f\x11\xc3\x9f\xf9\x4a\xf8\x70\xfd\xf5\xfe\xe1\xe9\xf7\xa7\x87\xcb\xab\xeb\xef\x03\xd3\x43\xf8\x6e\xb4\x8f\xbc\x39\xd8\x4d\x3b\xab\xd6\xf4\x4a\x69\xc8\xc9\x03\x24\x62\x09\x72\x45\x6e\x79\x21\xc5\x5c\x82\x52\x07\xda\x88\x7f\x89\xac\xcc\x21\x64\x1c\x46\x7d\xe3\x70\xe6\x45\x87\x67\xbb\x8c\xc3\x59\x20\x3a\x0c\x4f\xbb\xa3\x81\x24\x12\xe2\x34\xf9\x2c\x10\x0b\xee\x44\x4a\x21\x83\x58\x24\xa4\x55\xa8\x90\x72\x23\xcb\x48\x24\xa4\x39\xa8\x90\x4a\x7e\x0c\x16\xd2\x12\x54\x58\xd6\xa6\x1a\xd7\xaa\x17\x40\x32\xa6\x22\xe2\xc0\x33\x74\x1c\xe8\x30\x37\xeb\xca\xb2\x92\x99\x14\xb9\x01\xde\xac\x63\x91\xb1\xe1\xcb\xd3\x02\xea\xf0\x1a\x52\xb2\xac\x74\x47\x80\x22\x5c\x68\x02\xaf\x21\x78\xfb\x52\xf5\xe8\x0b\xd3\x0b\x2b\x22\x6f\x10\xb3\xf8\x88\x90\xf5\x3f\x6f\x3f\x0e\x0d\xdb\x66\x24\xd7\x5c\x83\xb4\xa3\x25\x42\x4a\x48\xf4\xf0\x58\x74\x66\x1e\x4d\x16\x90\x3c\x33\x3e\xb7\xef\x54\x3f\x76\x24\xd6\x11\x87\xb7\x78\xc2\xe2\xa8\x26\x5f\xb1\x7f\x03\x61\x8a\x68\x21\x48\x46\xe5\xdc\x8f\xcb\x9b\x05\x4d\xb9\x65\x69\xda\xac\x6d\x32\x85\x84\x96\x0a\x2c\x4d\x39\x7d\x65\x79\x99\x13\x5e\xe6\x53\x90\x44\xcc\x2a\x2a\x15\xd1\x0b\xaa\xed\xdb\x9d\x37\x99\xb2\xe1\x24\x74\xbd\x79\x2b\x9d\x07\xd0\x72\x55\x31\x6e\x15\xc5\x30\x5e\x9a\xf4\xcb\x50\x2f\x57\xb5\x00\x68\x2e\xf8\xdc\xc9\xd8\x3c\x51\x0f\x5e\x01\xfb\xa2\xf1\x56\xfb\x40\x88\x66\x29\x73\xc3\xd9\x38\x7b\xd9\xca\x2a\xac\x22\x9e\x4a\x58\xb1\x3a\x0e\x15\xb9\x94\x92\xae\x48\x42\x0b\x9a\xac\x02\xdc\x5e\x99\xa9\xb5\x32\x54\xce\x0f\xd8\x27\x99\x5e\x11\x13\x60\x5b\x49\xcc\x29\xe3\x1e\x3b\x67\x48\xc5\xef\xcd\xdf\x82\x2e\x81\x50\x32\xcd\x28\x7f\xb6\xea\xe6\xb3\xf4\xc1\xfe\xc6\x9c\x0a\xd3\x2c\x13\x2f\x66\xa5\xb6\x5a\xb9\xf5\x16\x56\xa9\x3b\xef\x5b\xc9\x32\x11\x60\xe9\x30\xe5\x35\xe3\x6e\xd6\x8d\xfa\x8a\x40\x12\xd2\x7d\x94\x80\x21\xd0\x69\x9f\xf7\x42\x9f\x0d\xba\x45\xbc\xd5\xe1\xce\xaa\xb6\x0a\xf2\xfa\x6a\xc2\x28\x49\x13\x0d\xd2\xd7\xb6\x33\xa4\xb6\x75\x09\x64\x8a\xa4\x65\x91\xb1\x24\xe8\x3a\xc9\xe5\x96\x2d\xa2\xed\xb3\xee\x6d\x9a\x49\xa0\xe9\xca\x2d\x08\xb5\x83\xb3\x94\xcd\x66\x20\x81\xeb\xc0\x84\x76\x18\x40\x66\x34\xdf\x38\x4d\x4c\x66\xd8\x5d\x2a\x61\xbd\x0a\xcd\x85\x89\x7c\x29\xe3\x8a\x50\xa2\xb4\x74\x16\x8e\xea\x9e\xf2\xed\x54\x36\x6f\x9e\x72\x00\xad\xbc\x9f\x64\x99\x05\x6c\xc2\x08\xb9\x88\x1e\x9a\x15\x6e\x97\xf6\x0e\x73\x39\x6c\x0f\x82\x66\x36\x6c\xf5\xb6\xcc\x7d\x21\x94\x62\x61\x3b\xd4\x61\x04\xb9\x74\x02\x8c\xa8\x9c\x66\xd9\xe1\x8c\x6c\xd6\xdb\x2f\x86\x2c\x5a\xce\xb8\xf5\x0a\x66\x1e\x13\xdf\x9a\x5a\x0b\x27\x0d\xdf\x3e\x3f\xc8\xe5\xd3\xe3\xc7\x29\x0d\x9b\xf3\xd0\xfa\x09\x71\xb4\x59\xdb\xf7\x9a\xb5\x6d\x5f\x76\x0b\x6c\x9a\x89\xe4\x79\xdb\xea\xb7\x3c\xde\xf2\xa2\xd4\x5b\xbc\x68\x61\x3c\x5c\x5e\x66\x9a\x15\x19\x18\x0f\xe8\x0d\xd0\xb2\x37\x3e\xcc\x78\xd7\x4b\x7b\x28\x2a\x24\x97\x5a\x43\x5e\x68\x43\x84\x7d\xa6\xb5\x5f\xf5\x72\x1a\x1a\xa2\x65\xe9\x8b\xd0\x0b\xab\x73\x82\xa4\xc2\xa7\xf8\x30\xdb\x5c\xc3\x0d\x47\xb2\x5d\x9a\xab\xa7\x86\xa9\xf6\x87\xc1\xd2\x3d\xf1\xf3\x16\x3e\x13\x3e\xdd\x57\x95\x7f\x74\xe9\x44\x2d\xa6\x8a\x9e\x41\xe2\x5d\xe4\x5c\xbd\x43\x87\xde\x6a\x69\xed\xf0\x5c\xbd\x54\xc7\x32\x76\xdd\x57\x6c\x6e\x07\x7a\x1e\x4b\xbf\x7a\x2c\x5d\x4b\x29\xa4\xcf\xd3\x0d\x65\x99\x81\x72\x91\x51\x0d\x95\x83\xa6\x31\x91\xf6\xaf\x7e\xb5\x6e\x37\xac\x28\x80\x1f\x0d\xea\xd9\x81\x3d\xa0\x46\x5f\x8e\x06\xf5\x5c\xdf\x1e\xd0\x17\xc9\xbe\x83\x7c\xbd\xbc\x6d\x00\xf5\x5f\x2d\xce\x66\x6d\x4b\x47\x5c\x93\xa9\x14\xcf\xc0\x63\x70\xdf\x61\xd5\xe9\x0e\x72\x61\x5c\x94\x33\xe6\x4c\x70\x57\x76\x2e\x65\x68\x7d\x90\x84\xaa\x6a\x1d\xab\x85\x28\xb3\x94\x70\x58\x9a\xcc\x20\x49\x4a\x49\x4e\xc8\x02\x68\xd1\x19\x8a\xf4\x47\x6a\xd7\xcc\xd3\x60\x08\xfc\x0e\xab\x91\xb7\x7c\x49\x33\x96\x12\xc6\x53\x78\x25\xb0\xf5\x10\x9e\x64\xfb\xf6\x8f\xd5\x2c\xb3\xf4\x27\xc2\x4c\x10\xc2\x69\x96\xad\xc8\x5c\x52\x5e\x65\x36\xcc\x81\x05\x9d\x86\x7b\x9e\x64\x62\xce\x92\xcd\xba\x4b\x48\x87\xab\x43\x55\xde\x4a\xf1\x97\xcd\x9a\xc3\xcb\x66\xdd\x64\x8e\x11\x0c\x7e\x73\xfb\x0a\x5a\x90\x39\x5b\x42\x9b\x84\xfe\x4c\x52\x50\x85\x51\xf1\x4e\x54\x65\x2b\x4b\x75\xa0\x96\xd3\xd7\x78\x7e\xb1\xab\xcd\xf8\x6f\x45\x5d\x5a\x5c\x11\xd1\x8b\x75\xf1\xac\x5e\x7a\x79\x7d\x3d\xf2\xde\x30\x1a\xc7\xd5\xb9\xef\xe1\xa9\xe4\xdd\x8d\x92\x86\xaf\xfb\x52\x9b\x70\xe1\x4f\xa1\x88\xa4\x3c\x14\x54\x5e\x92\x25\xcd\x4a\x20\x19\x28\x9b\x50\xf3\xed\xe8\xaa\xb0\x79\x80\x99\x3a\x33\x86\x7b\xf4\x85\xaa\x3a\xc8\x46\x85\x68\xed\x9b\xdd\x84\xbd\x0e\xd3\xb7\x52\xd1\x5f\x3c\x66\x2f\xf0\xcc\xba\x6c\xd8\xea\xcc\x50\x60\xd0\x66\xac\xbd\x82\x83\x90\x24\x13\x34\x85\xd4\xce\x9a\x28\x35\x61\x53\x31\x13\x6a\x47\x50\xd3\x18\x8f\xca\xc3\xba\x38\xc3\xbd\xe6\xb3\xe1\xc7\x38\x43\x6c\x54\x35\xdb\x1b\x5a\x66\x81\xba\x51\xcd\x41\xb5\x4b\xd6\x72\x52\x80\x9c\x09\x99\x1b\x43\xe1\xe6\xf0\xf1\xe9\xfe\xab\xab\xc9\x23\x2c\xf5\x85\x1f\x14\x0f\xd1\xf7\x51\xf0\x4a\xb7\x07\xac\xdd\xa3\x30\xcb\xc7\xfc\xa6\x48\x4e\x57\xd5\xc2\x48\x4b\xd9\xa4\x1d\xcd\xd6\x9e\x51\xce\x4e\xe5\xeb\x67\xa7\x0d\x66\xc9\x94\x53\x65\xfe\xc6\xb5\xf1\xf5\xd2\x19\xf2\xbc\x9a\xde\x17\x21\x9f\xc9\x0b\x64\xd9\x2f\xa1\xf4\xcd\x00\xdb\x9a\x80\x25\x81\x2c\x28\x4f\x33\x03\x45\x33\x33\xb1\xf3\x05\x61\xba\x16\x9b\xa3\xcc\xf2\x52\x2a\x90\xc4\x41\x26\x5e\x5c\x14\xd8\xbf\x1a\x14\x8f\xa1\xdc\xcd\xa0\x41\x18\x2a\x56\xfb\x61\x75\xd7\x68\x70\xd1\x19\xa6\x3f\x44\xcb\xea\x63\xfd\x8c\x22\x79\xa9\x7a\x05\xb4\x99\x90\x55\xac\x69\x98\x6f\x2b\x57\x4d\x49\xff\xee\xc3\x43\x70\xb7\xef\xd4\x2b\xe8\x8f\xbc\x82\xfe\x68\x57\x41\x7f\x84\x2d\xe8\x5f\x3a\x1f\x6d\xe2\x0d\xeb\xfe\x95\x6b\x5a\x89\x88\x34\x46\xd8\xca\x7e\x3e\x95\x24\xa5\x9a\xd6\x81\xab\xd1\x37\x1b\x62\x45\x81\x22\x8b\xfc\x0d\x28\x4d\xd3\x23\x11\x91\xc5\xfe\x82\x4a\xa6\x57\x2e\xd9\x3f\x4a\xac\xd8\xad\x3f\xa7\xaa\x65\xc9\xd2\xe3\x41\xb1\x75\xf7\x14\x96\x2c\x71\x89\xf9\x4c\x94\x31\x9b\xf7\x67\x23\x6c\x51\x7b\x4b\xa0\x26\xa0\x8c\x02\x43\x56\x1e\x7c\x69\x46\x23\x22\x2b\x6d\x8d\x86\x1e\x27\x4c\x4f\x5b\x86\xd1\x9e\x61\x75\x1c\x98\x5f\x5f\x1b\xe8\xf0\xe8\x5b\x99\x58\x59\xfa\x75\xb0\x01\xc0\x46\x98\xae\x56\x1f\x74\x92\x18\x3c\x3f\x58\x1f\xc6\x33\xae\x9f\xea\x23\xc0\xfc\x48\x39\x0c\x36\x07\xbd\xa5\x9f\x78\x69\x36\x8e\xe7\xa3\x5d\xb7\x38\xd7\x33\xf6\x5c\xcf\x78\x97\xeb\x19\x63\x5d\xcf\xad\xeb\x2d\x24\x2a\xa1\x31\x99\xed\x18\xeb\x6f\x1e\x20\x1a\x01\xe9\x5c\x3e\x33\xa5\x2b\x53\x18\x05\x83\xf4\x28\x16\x86\x9a\x08\x7b\xb3\x3e\x02\x2d\xe8\x4f\xfe\x2b\x6c\x26\x6e\x18\x4f\x0d\x67\x3f\x96\x2c\xfd\x29\x0a\xcd\xdb\x3a\x1e\x50\x6a\x33\x47\xd1\x6b\x67\xec\x37\x0f\x0e\xc0\x54\x0e\xcb\x16\xaf\xe2\xd1\xbc\xb6\xc1\xdd\x68\x49\x26\x54\xbc\x15\x1a\x63\x1b\x07\x2b\xb4\xcd\x7a\xd8\xa8\x13\xb7\xf0\x3b\x85\x72\x57\xd8\xae\x77\xec\x4d\x5e\xe9\xbf\xbd\x83\xb4\x0b\x1c\x69\x5f\x04\xb7\x10\x36\x8d\xfd\x18\xd6\x5d\x72\xcf\xb3\x15\x49\x41\xd3\x64\x01\x69\x23\x3b\x97\xaa\xf6\x9b\xb5\x86\x49\xc2\x76\x30\xa5\x14\x72\xc1\x4d\x76\x26\x63\x5a\x13\xc6\x7e\xd8\xb2\x07\x47\x14\x51\x30\x48\x1b\x54\x89\x8b\x6a\x23\xbe\xdc\xb6\x35\x83\x8e\x6c\x69\x3e\x1b\xfb\x41\xcb\x2e\x54\x63\x8e\xbe\x0f\x2c\x32\xd6\x75\x5c\x1e\x61\x72\x4f\x91\x1d\x2d\x8e\xaf\x63\x80\x90\x5d\xcd\x5b\x1c\xc5\x9b\x8a\x53\xcf\x32\x0d\x99\x8a\xef\x03\x87\xb4\x4c\x65\x53\x7a\xb4\xcb\x8d\xe4\x82\x33\x2d\x64\xa8\xb1\x98\xd0\x2c\xeb\xfc\x5e\x2d\x1f\x45\xa8\x6c\xb6\x9d\x36\x6b\x59\x72\x93\xf9\xff\x4c\x84\x34\x89\x7a\xf5\xb8\x1a\xea\xc8\xf1\xe9\x46\x9a\xad\x2e\xdd\xa2\xd8\x47\xf6\x66\xed\xd3\xbd\x59\x77\x08\xb7\xa3\x14\x90\x46\xd3\xed\x77\x85\x0c\x39\x9e\xd6\xe8\x14\x90\x92\x92\xc3\x6b\x61\x57\x65\xb6\xf2\x49\xc7\x3c\xbc\x83\x26\xcf\x0e\x0e\xf4\x15\x17\x12\x0a\x23\x8c\xf8\xc5\xe4\x77\x5d\x0c\x40\x49\xc8\x80\xaa\xc3\xa0\x9a\xd8\xd8\xd6\x30\xf7\xf4\x57\x4e\xbc\x98\xf8\xdd\xae\x98\x78\xe2\xc7\xc4\x43\x99\x92\x2d\xa0\x56\x7b\xa3\x29\x6d\x76\x74\x7f\x89\x90\xd7\xc4\x8f\x90\x31\xa8\x76\x47\xf6\x28\x58\x6c\xd6\xe4\x60\x07\x4a\xf2\x87\x00\x62\x33\x27\x07\xb8\xdd\xc0\x17\x87\xe8\xef\xe6\x85\x11\x3f\x1e\x5f\x20\x99\xa0\x63\x68\xbd\x80\x4e\x8b\x9e\x52\x69\x5b\x94\x9c\x82\x7e\x01\xe0\xe4\xaf\xbf\x6d\xf5\xeb\xaf\xbf\xa3\x08\xc1\x46\xd9\x7c\x99\xd7\xbe\xe5\xa8\x04\x7c\x82\x8e\xb4\x1f\x55\xd5\x23\x52\x33\x3c\xb7\xc5\x45\xe9\xf6\x53\xfe\xfa\x9b\x4c\x57\x1a\xe2\xa6\xda\xf3\x71\xc3\x24\xb4\xf2\x6e\xf6\x9c\x0c\x51\x71\xb8\x9e\x8f\x1a\xc0\xbd\xfb\xf0\xb0\x59\xdb\x8d\xf1\x68\x31\xfb\x31\xf3\x30\x56\xb5\x1d\x1e\x8f\x85\x35\x4a\x76\xf7\xe5\x44\x8b\x0c\x24\xe5\x09\x58\xcb\x4a\x8e\xe4\x13\x6b\x99\x7e\x93\x82\xcf\x3d\x0a\x72\xd0\x0b\x91\x12\xbd\x2a\x62\xdc\xd7\xc4\x0f\xaa\x07\xd0\xdf\xfc\xf5\x37\xf9\x4a\xa5\x66\x76\xcb\xa5\x6e\xa8\x74\x6c\xfb\xc7\x22\x31\xc8\x58\x73\xd5\x22\x0b\x6e\x77\xe3\x8e\x01\xc5\x9a\x2d\x2b\xec\xcd\xda\x19\x67\x58\x9a\x24\x82\x45\x19\x4a\x3f\xd8\x1e\x40\xac\x36\xf1\xdd\x1e\x2f\xcd\x08\x4d\x53\x09\x4a\x1d\xa1\x58\x58\x23\xe1\x14\xcb\x68\x90\xdd\x1f\xa3\xce\x21\x0d\x24\xc4\x4f\x0b\x70\x8f\xfe\x68\x9e\x9d\x96\xb3\x99\xb1\xec\x6e\x67\x2d\xa5\x9a\x9e\x28\x2d\x24\x9d\xc3\x4f\x44\x15\x90\xb0\x19\x83\x94\x4c\x57\xd6\xf6\x74\x07\x6e\x76\xf4\x68\xa2\x4b\x9a\xd5\x7f\xb5\x23\xdb\x80\xac\xee\x18\x0d\xed\xe5\xb5\x7b\xc9\xee\xf9\xa1\x9e\xbe\x89\x1f\x9b\x86\x53\x2a\xbb\x19\x58\x87\x66\xa4\x4d\x1c\x63\xc4\x8e\x6d\x29\xe6\xc6\x70\xe4\x94\x99\xa4\x81\xa8\xe3\xa2\xd0\x89\x1f\x85\xee\x3f\xd7\xf8\x42\x8b\x0a\xd7\x6e\x2e\x9a\xc9\x8b\x81\xf6\x0b\xee\x61\x19\x7b\x1a\xb0\xa0\x8a\x4c\x8d\xff\x8f\x3c\x63\x77\x36\xf1\x4b\xef\x87\x42\x47\x9f\xb7\x3b\x9b\x60\xfb\x45\x5b\x89\xd3\x34\xf5\x48\xf1\x17\x98\x47\x6c\x5c\xef\xb5\x4f\x2f\x72\xcf\xa7\xa5\xd7\x09\x07\x41\xb2\xb1\x09\x5d\x62\xb7\x0f\xad\xd4\x8d\xe6\x26\xde\xac\x7a\x10\x32\xa6\x6c\x03\x4a\x77\xd8\xc0\x42\xf7\x79\xc0\xd6\x62\x3a\xe3\xba\x34\x3d\xc9\x80\xca\xc8\x89\xc6\xfa\x8c\xed\x99\x16\xb2\x16\xe0\x90\xd8\x68\xd3\x98\x32\xb8\x97\xef\x13\x83\x75\x27\x87\x12\x53\xf2\x67\x2e\x5e\xf8\xd6\x3c\xbe\x58\xc7\x10\x3e\x7c\xe1\x53\x86\x0d\x8b\xb7\x29\xdb\xb5\x0c\x5a\x1d\xaa\xa8\xea\x64\x83\x95\x26\x59\x19\x22\xa8\x0b\x34\xe5\xee\xd0\x1c\xa5\xa9\x2e\x55\xfc\xe1\xd8\xb3\x5f\xfd\xe4\xfa\xea\xe1\xf6\xe9\xf6\xea\xf2\x73\x20\x48\xff\xdf\xc7\xa7\xeb\x3b\xdb\x98\xf3\xf5\x3a\xd0\x45\x37\x33\x21\x1f\x69\x43\xbe\xfa\x20\x13\x49\x4b\x70\x7d\xbd\x56\x38\xc3\xfd\x8c\x12\x8a\x8c\xda\x27\xcc\x40\xcd\xb2\xb0\x6e\xf3\xa4\xee\x78\xa8\x04\xd9\x94\x1c\x1e\x60\x5a\xb2\x2c\xdd\xb3\x11\x77\xee\x15\x1d\xce\x77\x15\x1d\xce\xb1\xc7\xf6\xa4\x43\x27\x87\x9d\x4b\xed\x61\x79\x6b\x65\xa0\x4b\xc1\x05\x2a\x89\x3d\x0f\x52\x58\x2d\xcb\x44\xf2\x1c\x35\xf1\xe7\xd8\xeb\x1b\x7a\xa0\x9b\x35\x53\xa4\xe4\xf1\xb8\xd8\x2d\x86\x5a\xb0\x89\xc8\x0b\xdb\x0e\x5e\x75\x64\xcc\xca\x2c\x50\x87\xc3\x00\x63\x73\xa7\x37\x35\xb4\x04\x55\x66\xba\x25\xa5\x52\xdc\x98\x80\xfe\x1c\xdb\x3b\x31\x08\x5e\x55\x18\xe3\xc0\x91\x2e\xd5\x86\x7a\x0e\x4e\x53\x39\x87\x40\xff\x9e\x5e\xf4\xc2\x4f\xd7\xd9\xeb\x9a\xf8\x32\xe1\x0e\x1b\x50\xbe\x22\x45\x9d\x83\x61\xe8\x43\xba\x4b\x2e\x08\x87\xda\xe7\x5b\x3a\x7d\x02\xdd\x29\xfe\x8a\xa4\x14\xe6\x92\x06\x8f\x52\xfa\x34\x60\xbd\xe7\x4d\x1b\x99\xda\x7a\x7c\x45\xc9\xcf\x75\x5b\x01\x53\xae\xe0\xbd\xdd\xba\x88\x2b\x9f\x5e\x09\x3e\x63\x73\x5c\x6b\xc1\x85\x67\xd1\x76\x5d\xbd\xd4\x3c\xbe\x57\xc8\x89\xa5\x81\xcc\x98\xbd\x47\x85\xa6\x24\x15\x3c\x26\xd6\xbf\xc0\xf6\x18\xcc\x41\x57\xfd\xb5\xd1\x48\xc8\x7d\x3e\x97\xb8\x3a\xac\xf8\x06\xaf\x0b\x6c\xcf\x41\x17\x2e\xb2\x6b\xe7\x22\xd0\x4c\x36\xd4\xb9\x59\x5f\x91\x54\x4d\xa0\x4d\x39\x63\x93\xf2\x8b\x40\x63\xd9\x3e\xdc\x67\x58\xc5\xe3\x05\x76\x67\xc2\xad\xee\x5d\xf5\xb4\x9d\x08\xb1\x92\xf5\xf3\xdf\xfd\x88\xd5\x99\xb8\x78\x2e\xb1\x07\x18\xb6\x30\x8f\xaa\xdb\x5d\xf8\xa7\x55\x11\x92\x3d\xb2\x1f\xeb\xe2\x0c\x7b\x62\xe7\x0f\x25\x38\x49\x45\x52\x5b\x6c\x31\xfd\x03\x92\x80\xdf\xa9\x95\xac\x35\x16\xff\x70\xeb\xcb\x1e\xdf\xb2\x7f\x70\x6d\xec\xdb\x8a\xf1\x73\xa7\xe8\x49\xfe\x11\x66\x2b\x68\x89\xef\x68\x51\xec\xbb\x46\x68\xe4\xdd\x14\x32\x3a\xed\x99\xe0\x76\x63\xcc\x75\xf1\x89\x7d\x43\x9e\x79\x43\xf6\x7b\x95\x9b\x21\x3f\x5d\xed\xf6\x10\x23\xaf\xf9\x6c\xb4\xab\xf9\x6c\x84\x6e\x3e\xfb\x74\x45\xb4\x64\xf3\x39\x44\x25\xaa\x23\x74\xf3\xd9\xa7\x2b\xe7\x62\x23\x51\x90\x4e\xe1\xd3\xd5\x66\x1d\xe7\x78\x46\xe8\xee\xb3\x4f\x57\xcd\x2d\x03\x91\x3d\x33\x23\x74\x6f\xce\xbf\x58\xa2\x59\xde\x84\xeb\x89\xe0\x4a\xcb\x32\xd1\x31\x0b\x79\x84\xee\xd4\xf9\x2c\xa8\x89\x59\x97\x20\x15\x90\x9c\x46\xb4\xeb\x8c\xd0\xed\x3a\x16\xcb\x39\x57\x7b\x90\xf8\xd0\xcb\x80\xee\x40\xd3\x9b\xc7\xad\xc5\x33\xe9\x2f\x9e\xb1\xb7\xb6\xc7\xbb\x16\xcf\x38\x70\x0b\xd0\xc0\xfe\xfa\x9d\xfb\x9f\xb6\x8e\x9d\xc2\xb4\x9c\xcf\xa3\x2e\x8a\x1b\x07\x4e\x76\x84\x65\xe6\xa1\x1a\x2e\x8c\x31\xec\x46\xe8\x78\xdc\xc0\x65\x54\xe1\x94\xe2\xb6\xb9\x04\x93\xdc\xdd\x3c\x6e\x9d\x56\x3c\x0c\x0f\x59\xad\xbe\xb3\x87\x51\x8e\x83\x42\xa6\x6a\xdf\xaa\xa3\xd9\xc7\x80\x05\xce\x9a\x0c\xed\x1e\xde\x3c\x1a\x1f\x19\x7d\xfb\xd1\x38\x70\xc6\x64\x37\xd4\x11\x57\x2d\x8d\x03\x67\x4b\x86\xc0\xfa\x8a\x19\x19\x73\x8c\x03\x87\x4b\x06\x20\xeb\x33\xaf\x05\x95\x34\x87\xce\x1d\x25\x87\xc1\x61\xf7\x05\x8d\xd5\xb7\xb5\xc0\x28\x14\x6c\x5a\x5a\xd7\x1b\xe3\x91\x0e\xaf\xd8\xb6\x37\xdc\x46\x01\x1e\x5e\x88\x9d\xda\xf6\xb0\x32\xc2\xbb\x8c\x47\xe8\x5e\x04\x2e\x48\x0e\x29\xa3\x56\x1b\xef\x6e\x1e\xa3\xc0\xb0\x0d\x08\xd5\x2d\x1d\x5b\xf7\xa0\x4c\x59\x8c\x2b\x08\x9c\x3b\xda\x2b\x4f\x13\x27\x47\x41\x61\x4d\x09\x6b\x8e\x97\x1f\xe3\x6d\x02\x27\x8f\xf6\xb2\x56\x95\x8b\x4d\x3a\x10\x85\x88\x35\x26\x2d\xe2\x8c\x55\x5b\xc5\xd1\x98\x58\x8b\x52\x83\x34\x49\x53\x01\xa1\x6b\x5d\x30\x90\x87\xef\x19\x1d\xcf\x26\xd6\xd0\x68\xc9\x5a\x35\x6d\x99\x8e\xf6\xb5\x7e\x83\xef\x7e\x2d\xb2\xa7\x0f\x8e\xe2\x16\x6b\x76\x3a\x12\x76\x59\xea\x51\xa8\x58\xfb\xd3\xa2\x56\xb7\xae\x1c\x83\x8a\x6e\xb1\xed\x2a\x70\xed\xb8\x62\xb7\x14\xc6\xa3\x40\x25\x67\x1f\xb3\xb6\x2a\x70\x14\xab\x87\x5b\x24\xd7\xfb\x55\x5d\x27\x19\x8d\x8b\xb5\x4b\x2f\x52\xe8\xf6\x56\x2a\x77\x13\x85\xb6\xe5\x7a\xbb\x65\x2a\x3b\x7e\xc7\xa3\xc3\x7a\x3e\x49\x73\x92\x32\xf5\x8c\x21\x0a\x6b\xb8\xba\xb7\x55\xc3\xf3\xb0\x20\x0e\x26\x00\x6b\xc6\xec\xbc\xff\x87\x84\x82\x35\x73\xff\xd1\x99\xc2\x9a\x40\x97\xda\x0c\xdc\x9d\x7e\x30\x2a\xd6\x06\xd6\xb7\x5d\x7d\x2f\x5c\xac\x15\xac\x43\xbe\xa3\x11\xd1\xa7\x7a\xbd\x40\x25\x07\x4d\x49\xd5\x93\x16\x63\x18\xd0\xc7\x7b\xfb\xce\xed\x68\x60\xf4\x39\xdf\x0e\x50\xad\xe9\xd1\xd9\x0a\xfa\xc0\x6f\x58\xd0\x03\x97\x97\x61\x80\x0f\xb7\x75\x36\x7c\x39\x16\xf6\xf0\x40\xad\x33\xbd\x47\xe0\xa2\xdb\xd6\x85\x26\xc0\xed\x05\x25\xaa\xa0\x09\xb4\x12\x8f\x82\xc5\xda\x29\x9a\xe5\x42\x69\x32\x2b\x03\x17\x35\x62\x70\xb0\x96\xa9\x8e\x52\xac\x50\xa3\xa2\x94\x11\xd6\x18\xd9\x7b\x62\xa9\xa6\x99\x98\x87\x2e\xcd\x3a\x00\xd2\xbf\x4b\x71\x00\x12\xf8\x9f\x25\x94\xf1\x5f\x03\x19\x8f\xfc\x4b\x10\x77\xeb\xa7\x75\x6d\x4b\x2a\x99\x28\x95\xb1\x02\x2a\x2e\x31\x1c\x47\xf4\x93\xd2\x25\x10\xc6\x45\x1a\xa5\x98\xe3\xc3\xed\x4e\x21\x0a\x77\x9b\x37\x25\x56\xca\x51\xb0\x87\x5b\x9d\xa2\x54\x0b\xdb\x8c\x11\x8d\x1a\xd8\x10\x1a\x6e\x0e\xbb\x6a\x35\xf6\x90\x0b\xf7\x9a\xa2\xfc\xe3\x4a\x9d\xd8\xfe\xf5\xad\xba\xfc\x79\xbf\x2c\xef\x1d\x1e\x1b\x4f\xde\xed\x28\xcb\x07\x0e\x8f\x0d\x94\xe5\x9d\x89\xfc\xdd\x92\x10\x21\xab\xc0\x31\x90\x01\x20\xd7\x3d\xf3\x3b\x4d\xe3\xb1\xfc\x3c\x6b\xe7\xe7\x48\xaa\x4f\x5a\x1c\x82\xd7\x4c\xcb\x67\x31\xf7\x3f\xa7\xd2\x9f\x93\x73\x6f\x4e\x76\x6d\x95\x4c\x02\x17\xc0\x85\x3b\x7c\x59\xa6\x41\x12\xb5\xe2\x9a\x0e\xdd\x4d\x88\x90\xd6\x39\xbe\xd1\xbd\x42\x74\xa9\xa9\x2b\x39\x14\x54\x2f\xa2\x50\x91\xbb\x08\x6d\xef\x68\x26\xe6\x27\xf6\x51\x97\x1f\xe9\x83\x8d\x7f\xfb\x45\x9c\xfb\xaf\x54\x2f\x4e\xf8\x32\x9f\xed\xde\x22\x9e\x78\xbb\x5c\x93\xb7\x43\xdb\xcd\xd5\xa0\x33\x69\xaf\xd5\xdc\xd3\x6f\x39\xf1\xbe\xb0\x33\x19\xdc\x1a\xaf\x06\x9e\xd2\xe4\x79\xff\xb8\xde\xfe\xf8\xa4\xff\x71\x8e\x66\x5c\xd7\x8f\xd5\x1f\xaf\x37\xe0\x85\x27\x81\x8b\x5d\x6d\x54\x17\xe8\xaf\x7d\x3c\x7e\xbd\xbc\xba\xde\xfe\x0d\xad\x3d\x17\x81\x2f\x7d\xec\xb5\xf7\x75\xee\xb4\x75\x83\x5f\x27\x93\xa9\x2e\x04\x0c\xdd\x2f\xb8\x83\x8e\xc3\xfd\xeb\x3e\x3a\x16\x6c\xbe\x00\x49\x0a\xc9\x84\xbd\x93\xea\x0f\x31\x25\xaa\x4c\x16\x84\xaa\xba\x97\x8e\x71\xeb\x47\xea\x9e\x5a\xc6\xe7\xa1\xd3\x35\xba\x77\x81\x21\x25\x2f\x8b\xb6\x98\xd0\xe1\x01\xeb\xb2\x3b\xb7\x60\x77\x2e\x26\x84\x57\x48\x4a\x77\x8d\xb6\x3d\x49\xe7\xc4\xb8\x63\x2b\xae\x7e\xa4\x0e\x19\x9b\x43\x1c\xc3\x77\x31\xf6\x59\xf1\x64\xd8\xe9\x4b\xe1\x74\x0e\xf6\xb2\x88\x47\x4d\x93\xe7\x1f\xef\x2e\xfe\xfb\x27\x4f\xc7\xfb\xdf\xbb\x7a\xeb\x7f\xd3\xa6\xfd\x53\xf8\x93\x87\xe8\xdd\x84\x7f\x2a\xc1\xc9\x07\x91\xae\xb6\x5a\x7c\x3a\x23\x61\x5b\xda\xeb\xad\x90\xaf\xc0\xd3\xe0\x35\x01\x66\x7e\x3e\x9e\x5c\xce\xc1\xdd\xae\xea\xce\xf6\xf1\xb9\xbb\x59\xbc\xf7\x71\x8b\xae\x74\x7f\xa3\xf6\xca\xc4\x2c\x23\xc6\xc6\xf4\x09\x0c\x7d\xde\x71\xe8\x94\xaa\xa3\x6c\xe8\xe2\xc8\xea\x43\x88\x4c\xf0\xfa\x6f\xcd\xd1\xe1\xaf\xf7\x8f\xb6\x8f\xbd\x3f\x7d\x01\x6a\x25\xb8\xbe\xd2\xaf\xf7\x8f\x3e\xa9\x87\xcd\xca\x75\x98\xce\x3b\x5a\xdd\xb4\xf9\x4f\x15\x6a\xcf\x25\xdf\x14\x54\xed\x15\x76\x14\x57\x8e\xf6\x69\x41\x57\x7b\xaf\x5a\xb9\xfc\x7f\x49\x2e\xf4\x35\x9c\x01\x6a\x05\xb7\x57\xd4\xb3\x0f\xe2\xc6\x7e\xc9\xb3\x3a\xcf\x91\x02\x4d\x7f\xf8\xbf\x00\x00\x00\xff\xff\x9e\xa7\xcf\x0a\x41\x75\x00\x00")

func ResourcesEventsYamlBytes() ([]byte, error) {
	return bindataRead(
		_ResourcesEventsYaml,
		"../resources/events.yaml",
	)
}

func ResourcesEventsYaml() (*asset, error) {
	bytes, err := ResourcesEventsYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "../resources/events.yaml", size: 30017, mode: os.FileMode(420), modTime: time.Unix(1594972141, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"../resources/events.yaml": ResourcesEventsYaml,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"..": &bintree{nil, map[string]*bintree{
		"resources": &bintree{nil, map[string]*bintree{
			"events.yaml": &bintree{ResourcesEventsYaml, map[string]*bintree{}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}
